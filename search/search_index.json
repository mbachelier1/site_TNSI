{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Terminale NSI au lyc\u00e9e Henri Avril","text":"<p>Le programme est d\u00e9coup\u00e9 en 5 parties : </p>"},{"location":"#structures-de-donnees","title":"Structures de donn\u00e9es","text":"<p>Listes piles et files Programmation Orient\u00e9e Objet Les arbres binaires Les graphes </p>"},{"location":"#bases-de-donnees","title":"Bases de donn\u00e9es","text":"<p>Mod\u00e8le relationnel Langage SQL Projet</p>"},{"location":"#reseaux-et-systeme-dexploitation","title":"R\u00e9seaux et syst\u00e8me d'exploitation","text":"<p>Gestion des processus Syst\u00e8me sur puce S\u00e9curiser les donn\u00e9es Enigma</p>"},{"location":"#programmation","title":"Programmation","text":"<p>R\u00e9cursivit\u00e9 Modularit\u00e9 Gestion des Bugs Paradigmes de programamtion </p>"},{"location":"#algorithmie","title":"Algorithmie","text":"<p>Les arbres binaires Algorithmes sur les graphes Recherche textuelle</p> <p>Calculabilit\u00e9 et d\u00e9cidabilit\u00e9 Diviser pour r\u00e9gner Programmation dynamique </p>"},{"location":"allure/","title":"Allure","text":"<p>a# Terminale NSI au lyc\u00e9e Henri Avril</p>"},{"location":"allure/#les-themes-du-programme","title":"Les th\u00e8mes du programme","text":"<p>Le programme est d\u00e9coup\u00e9 en 5 parties :  </p> <ul> <li>Structures de donn\u00e9es</li> <li>Bases de donn\u00e9es</li> <li>R\u00e9seaux et syst\u00e8me d'exploitation</li> <li>Programmation</li> <li>Algorithmie</li> </ul> <p>.</p>"},{"location":"allure/#administration-de-la-base-via-formulaire-php","title":"Administration de la base via formulaire php","text":"<p><pre><code>for i in range(10):\n    print(\"Salut \u00e0 tous !\")\n</code></pre> <pre><code>    &lt;h1&gt; ldmfkhsmudfj &lt;/h1&gt;\n</code></pre></p> <pre><code>html, body {\n    margin: 0;\n    padding: 0;\n}\nbody {\n background-color: white; \n font-family: Verdana, sans-serif; \n font-size: 100%;\n }\nh1 {\n font-size: 200%; \n color: navy; \n text-align: center;\n}\n</code></pre> <pre><code>var year = 2016; // des chiffres\nvar president = \"Fran\u00e7ois H\"; // des mots\nvar candidats = [\"Pierre\", \"Paul\", \"Jacques\"]; // une liste de noms\ncandidats[0]; // \"Pierre\"\ncandidats[1]; // \"Paul\"\nvar notes = [12,18,20]; // une liste de notes\nnotes[0]; // 12\n</code></pre> <pre><code>#include&lt;stdio.h&gt;\nint main(){\n    int i;\n    for(i = 0; i &lt; 10; i++){\n        printf(\"Salut \u00e0 tous !\\n\");\n    }\n    return 0;\n}\n</code></pre> <pre><code>SELECT * FROM client;\n</code></pre> <p>definiton toutes les lignes commencent par un chevron</p> <p>note</p> <p>une note</p> <p>summary</p> <p>summary</p> <p>example</p> <p>example</p> <p>important</p> <p>Important</p> <p>info</p> <p>info</p> <p>fail</p> <p>fail</p> <p>attention</p> <p>attention</p> <p>danger</p> <p>danger</p> <p>bug</p> <p>bug</p> <p>faq</p> <p>et pourquoi pas</p> <p>done</p> <p>done</p> <p>cite</p> <p>cite</p> <p>un bouton creux</p> <p>Un bouton pleins </p> <p></p> <p>lien</p> <p> This...</p> <p> That...</p> <p> ...and The Other</p> <p></p> <p>QCM \u00e0 cocher</p> <p>On souhaite proposer un QCM, auto corrig\u00e9.</p> <p>Exemple 1</p> <p>Pour cet exercice sur Python,  on ne regarde que si l'identifiant est valide,  il pourrait \u00eatre mal choisi.</p> Cocher les identifiants valides <ul> <li> <code>as</code></li> <li> <code>Roi</code></li> <li> <code>2ame</code></li> <li> <code>v413t</code></li> <li> <code>dix</code></li> <li> <code>n'\u0153uf</code></li> <li> <code>huit</code></li> <li> <code>S\u00e8te</code></li> <li> <code>carte_six</code></li> <li> <code>_5</code></li> <li> <code>%4</code></li> <li> <code>quatre-moins-un</code></li> <li> <code>2!</code></li> <li> <code>_</code></li> </ul> Solution <ul> <li>\u274c <code>as</code> ; c'est un mot r\u00e9serv\u00e9.</li> <li>\u2705 <code>Roi</code></li> <li>\u274c <code>2ame</code> ; interdit de commencer par un chiffre.</li> <li>\u2705 <code>v413t</code></li> <li>\u2705 <code>dix</code></li> <li>\u274c <code>n'\u0153uf</code> ; interdit d'utiliser <code>'</code></li> <li>\u2705 <code>huit</code></li> <li>\u2705 <code>S\u00e8te</code></li> <li>\u2705 <code>carte_six</code></li> <li>\u2705 <code>_5</code></li> <li>\u274c <code>%4</code> ; interdit d'utiliser <code>%</code></li> <li>\u274c <code>quatre-moins-un</code> ; interdit d'utiliser <code>-</code></li> <li>\u274c <code>2!</code> ; interdit d'utiliser <code>!</code></li> <li>\u2705 <code>_</code></li> </ul> <p>test</p> Cocher les identifiants valides <ul> <li> <code>as</code></li> <li> <code>Roi</code></li> <li> <code>2ame</code></li> <li> <code>v413t</code></li> <li> <code>dix</code></li> <li> <code>n'\u0153uf</code></li> <li> <code>huit</code></li> <li> <code>S\u00e8te</code></li> <li> <code>carte_six</code></li> <li> <code>_5</code></li> <li> <code>%4</code></li> <li> <code>quatre-moins-un</code></li> <li> <code>2!</code></li> <li> <code>_</code></li> </ul> Solution <ul> <li>\u274c <code>as</code> ; c'est un mot r\u00e9serv\u00e9.</li> <li>\u2705 <code>Roi</code></li> <li>\u274c <code>2ame</code> ; interdit de commencer par un chiffre.</li> <li>\u2705 <code>v413t</code></li> <li>\u2705 <code>dix</code></li> <li>\u274c <code>n'\u0153uf</code> ; interdit d'utiliser <code>'</code></li> <li>\u2705 <code>huit</code></li> <li>\u2705 <code>S\u00e8te</code></li> <li>\u2705 <code>carte_six</code></li> <li>\u2705 <code>_5</code></li> <li>\u2705 <code>_</code></li> <li>\u274c <code>%4</code> ; interdit d'utiliser <code>%</code></li> <li>\u274c <code>quatre-moins-un</code> ; interdit d'utiliser <code>-</code></li> <li>\u274c <code>2!</code> ; interdit d'utiliser <code>!</code></li> <li>\u2705 <code>_</code></li> </ul>"},{"location":"BDD/langageSQL/","title":"Le langage SQL (Structured Query Language)","text":""},{"location":"BDD/langageSQL/#les-bases-du-langage-sql","title":"Les bases du langage SQL","text":""},{"location":"BDD/langageSQL/#creer-une-table","title":"Cr\u00e9er une table","text":"<p>Pour cr\u00e9er une base, on aura besoin de conna\u00eetre son sch\u00e9ma relationnel. Ici nous allons cr\u00e9er la base de donn\u00e9es scolarit\u00e9 cotenant les tables Etudiants et Notes dont le sch\u00e9ma relationnel est donn\u00e9 ci-dessous :</p> <p>On cr\u00e9e une nouvelle base de donn\u00e9es appel\u00e9e scolarite.db. Puis on lance la cr\u00e9ation des tables Etudiants : <pre><code>CREATE TABLE Etudiants(\n    id INTEGER PRIMARY KEY,\n    Nom VARCHAR,\n    Prenom VARCHAR,\n    Sexe VARCHAR,\n    Age INTEGER);\n</code></pre> Puis Notes :  <pre><code>CREATE TABLE Notes ( \n    id           INTEGER PRIMARY KEY, \n    etudiant INTEGER,\n    stats    INTEGER,\n    Maths INTEGER,\n    Physique INTEGER,\n    Anglais INTEGER, \n    description  TEXT,\n    FOREIGN KEY (etudiant) REFERENCES Etudiants(id)\n);\n</code></pre></p> <p>Cl\u00e9 \u00e9trang\u00e8re</p> <p>A noter que avec SQLite vous ne pourrez pas cr\u00e9er la cl\u00e9 \u00e9trang\u00e8re apr\u00e8s cr\u00e9ation de la table, il est donc indispensable de le faire au moment de la cr\u00e9ation de celle-ci.</p>"},{"location":"BDD/langageSQL/#bloc-de-selection","title":"Bloc de s\u00e9lection","text":"<p>Nous allons illustrer les exemples en partant d'une table Etudiants d\u00e9j\u00e0 compl\u00e9t\u00e9e (nous verrons plus loin comment ins\u00e9rer des \u00e9l\u00e9ments dans la table) :</p> <p>Pour s\u00e9lectionner des informations dans une base de donn\u00e9es, on utilise le bloc suivant. Les instructions SELECT et FROM sont indispensables et permettent de dire ce que l'on veut affciher (* si on veut tout afficher) et dans quelle table on travaille.  </p> <p>Par exemple :</p> <pre><code>SELECT * FROM Etudiants;\n</code></pre> <p>Permet d'afficher la table en entier.</p> <p>Si on ne veut que les noms et les pr\u00e9noms :    </p> <p><pre><code>SELECT Nom,Prenom\n     FROM Etudiants;\n</code></pre> On peut ajouter le mot cl\u00e9 DISTINCT \u00e0 la suite de SELECT pour \u00e9viter les doublons.  </p>"},{"location":"BDD/langageSQL/#utilisation-des-filtres-et-des-tris","title":"Utilisation des filtres et des tris","text":"<p>On veut afficher les noms et pr\u00e9noms des \u00e9tudiants dont l'age est inf\u00e9rieur \u00e0 19 ans.     </p> <pre><code>SELECT Nom,Prenom\n    FROM Etudiants\n    WHERE age&lt;19;\n</code></pre> <p>On veut afficher les noms et pr\u00e9noms des \u00e9tudiants dont l'age est sup\u00e9rieur \u00e0 19 ans dans l'ordre alphab\u00e9tique des noms <pre><code>SELECT Nom,Prenom\n     FROM Etudiants\n     WHERE age&gt;19\n     ORDER BY nom;\n</code></pre></p> <p>On ajoutera le mot cl\u00e9 <code>desc</code> \u00e0 la fin de la derni\u00e8re ligne de la requ\u00eate pour l'ordre inverse. </p>"},{"location":"BDD/langageSQL/#compter-les-occurrences","title":"Compter les occurrences","text":"<p>La commande <code>count</code> permet de compter le nombre de valeurs non nulles pr\u00e9sentes dans la table pour un attribut donn\u00e9. Cette commande renvoie 2. <pre><code>SELECT count(id) \n     FROM Etudiants\n     WHERE age=19 ;\n</code></pre></p>"},{"location":"BDD/langageSQL/#modification-de-la-table-insert-update-delete","title":"Modification de la table : INSERT, UPDATE, DELETE","text":"<p>Pour ajouter une entr\u00e9e dans la base de donn\u00e9es : <pre><code>INSERT INTO Etudiants(id, nom, prenom, sexe, age)\nVALUES \n    (6,'Einstein','Albert','H',142),\n    (7,'De Beauvoir','Simone','F',113);\n</code></pre></p> <p>Pour supprimer une entr\u00e9e : </p> <pre><code>DELETE FROM Etudiants\nWHERE nom='Einstein';\n</code></pre> <p>Modifier une donn\u00e9e : <pre><code>UPDATE Etudiants \n   SET age=23 \n   WHERE nom='De Beauvoir';\n</code></pre></p>"},{"location":"BDD/langageSQL/#calculs-simples","title":"Calculs simples","text":"<p>Nous avons cr\u00e9\u00e9 la table Notes pour r\u00e9f\u00e9rencer les notes des \u00e9tudiants aux examens :</p> <p>Les \u00e9tudiants ayant suivi une partie de leur enseignement de stats \u00e0 distance, l'universit\u00e9 a d\u00e9cid\u00e9 d'augmenter la note de 2points. On affiche le num\u00e9ro de l'\u00e9tudiant ainsi que se nouvelle note de stats :  </p> <pre><code>SELECT etudiant, (stats+2) as nvstat\n    FROM Notes;\n</code></pre> <p>Puis on affiche la moyenne de l'examen pour les maths : <pre><code>SELECT AVG(math)\n    FROM Notes;\n</code></pre> Ou par \u00e9tudiant : <pre><code>SELECT etudiant, ((stats+math+physique+anglais)/4) as moyenne\n    FROM Notes;\n</code></pre></p>"},{"location":"BDD/langageSQL/#jointures-fusion-de-tables","title":"Jointures : fusion de tables","text":""},{"location":"BDD/langageSQL/#jointure-interne","title":"Jointure interne","text":"<p>La jointure interne li\u00e9 les donn\u00e9es d'une table \u00e0 l'autre. On pr\u00e9cise l'ordre dans lequel on veut voir appara\u00eetre les tables (\u00e9tudiants \u00e0 gauche et notes \u00e0 droite)</p> <pre><code>SELECT * FROM Etudiants\n    INNER JOIN Notes\n      ON Etudiants.id=Notes.etudiant;\n</code></pre> <p>Remarque</p> <p>On remarque que un \u00e9tudiant n'a pas de notes donc ne figure pas dans la jointure.</p>"},{"location":"BDD/langageSQL/#jointure-externe","title":"Jointure externe","text":"<p>Pour palier \u00e0 ce probl\u00e8me on utilise la jointure externe. il y a plusieurs possibilit\u00e9s :  </p> <p>On veut toute la table de droite m\u00eame si elle n'a pas de correspondance avec la table de gauche (right outer join)</p> <p>On veut la totalit\u00e9 des deux tables m\u00eame les lignes sans correspondance (full outer join)</p> <p>Seule la jointure gauche est tol\u00e9r\u00e9e par DB Browser mais d'autres logiciels permettent de faire une RIGHT OUTER JOIN et une FULL OUTER JOIN</p> <pre><code>SELECT * FROM Etudiants\n    LEFT OUTER JOIN Notes\n      ON Etudiants.id=Notes.etudiant;\n</code></pre> <p>Attention</p> <p>Seule la jointure gauche est tol\u00e9r\u00e9e par DB Browser mais d'autres logiciels permettent de faire une RIGHT OUTER JOIN et une FULL OUTER JOIN</p> <p> Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021 </p>"},{"location":"BDD/modele_relationnel/","title":"Mod\u00e8le relationnel","text":"<p>Ce mod\u00e8le d'utilisation des bases de donn\u00e9es a \u00e9t\u00e9 cr\u00e9\u00e9 par Edgar Frank \u00ab Ted \u00bb Codd das les ann\u00e9es 1960 et 1970.</p>"},{"location":"BDD/modele_relationnel/#vocabulaire","title":"Vocabulaire","text":"<p>Nous allons nous baser sur la table suivante pour d\u00e9finir le vocabulaire n\u00e9cessaire :  </p> <p>Relation Dans le mod\u00e8le relationnel, les donn\u00e9es sont stock\u00e9es dans des tables, aussi appel\u00e9es relations. !!! Example 'exemple' :         La relation pr\u00e9sent\u00e9e ci-dessus est appel\u00e9e <code>voiture</code>. </p> <p>Attribut Le nom d'une colonne d'une relation est appel\u00e9 attribut. La relation voiture poss\u00e8de trois attributs: <code>marque</code>, <code>couleur</code> et <code>plaque</code>. Un enregistrement (ligne) d'une relation est appel\u00e9 n-uplet.</p> <p>Attribut ID voiture, marque de la table voiture. ID carburant, type de la table carburant.</p> <p>Domaine</p> <p>Le domaine d'un attribut est l'ensemble des valeurs qui peuvent \u00eatre prises par cet attribut. Une base de donn\u00e9e sqlite il n'y a que cinq domaines de valeurs possibles: NULL. La valeur est une valeur NULL. INTEGER. La valeur est un entier sign\u00e9, stock\u00e9 dans 1, 2, 3, 4, 6 ou 8 octets en fonction de l'amplitude de la valeur. REAL. La valeur est une valeur \u00e0 virgule flottante, stock\u00e9e sous forme de nombre \u00e0 virgule flottante IEEE de 8 octets. TEXT. La valeur est une cha\u00eene de texte, stock\u00e9e \u00e0 l'aide du codage de la base de donn\u00e9es (UTF-8, UTF-16BE ou UTF-16LE). BLOB. La valeur est une donn\u00e9e binaire brute, stock\u00e9 exactement comme elle a \u00e9t\u00e9 entr\u00e9e. En PhpMyAdmin il y a beaucoup plus de types avec notamment des formats pour les dates (voir projet).  </p> <p>Ce tableau r\u00e9capitule le lien entre le vocabulaire rigoureux en mod\u00e8le relationnel et les termes utilis\u00e9s lors du traitement des tables.  </p>"},{"location":"BDD/modele_relationnel/#cles-primaires-et-secondaires","title":"Cl\u00e9s primaires et secondaires","text":"<p>Chaque ligne de la table doit comporter un attribut qui l'identifie de fa\u00e7on unique, on l'appelle la cl\u00e9 primaire.</p> <p>Exemple</p> <ul> <li>Dans la table voiture l'attribut plaque pourrait constituer la cl\u00e9 primaire.</li> <li>En s'inscrivant sur un site, on vous impose d'utiliser un identifiant unique pour cr\u00e9er votre ligne dans la base de donn\u00e9es.</li> <li>L'email d'un utilisateur peut servir de cl\u00e9 primaire, mais ce n'est pas conseill\u00e9.</li> </ul> <p>Attention</p> <p>Il est pr\u00e9f\u00e9rable d'utiliser une cl\u00e9 primaire ind\u00e9pendante des donn\u00e9es de la table pour ne pas perdre d\u2019information lors d'une \u00e9ventuelle mise \u00e0 jour.</p> <p>Une cl\u00e9 secondaire ou cl\u00e9 \u00e9trang\u00e8re est une cl\u00e9 utilis\u00e9e dans une table pour faire r\u00e9f\u00e9rence \u00e0 un enregistrement d'une autre table.</p>"},{"location":"BDD/modele_relationnel/#representaion-des-relations","title":"Repr\u00e9sentaion des relations","text":"<p>On peut repr\u00e9senter le lien entre plusieurs tables de donn\u00e9es ainsi :</p> <p>Ce sch\u00e9ma est appel\u00e9 sch\u00e9ma relationnel. Il fait appara\u00eetre le lien entre les tables, les cl\u00e9s primaires et \u00e9trang\u00e8res et les domaines de chaque attribut. On peut aussi le noter plus simplement sous la forme du nom de la relation suivi de la liste de ses attributs.  </p> <p>Dans cette notation, les cl\u00e9s primaires apparaissent soulign\u00e9es, les cl\u00e9s \u00e9trang\u00e8res pr\u00e9c\u00e9d\u00e9es (ou suivies) d'un # . On peut \u00e9galement pr\u00e9ciser les domaines des diff\u00e9rents attributs :</p>"},{"location":"BDD/modele_relationnel/#contraintes","title":"Contraintes","text":"<p>Pour \u00e9viter au maximum les erreurs on s'assurera que:  </p> <ul> <li>la cl\u00e9 primaire est unique et non nulle.  </li> <li>Si une table fait r\u00e9f\u00e9rence \u00e0 une information d'une autre table, cette derni\u00e8re doit exister de fa\u00e7on certaine.  </li> <li>On \u00e9vitera les informations concernant deux objets diff\u00e9rents, on pr\u00e9f\u00e9rera multiplier les tables.  </li> </ul> <p>Dans l'exemple ci-dessous, on pr\u00e9f\u00e8re mettre deux tables en relation plut\u00f4t que de mettre les informations concernant les ventes et les informations concernant les produits dans la m\u00eame table :   </p>"},{"location":"BDD/modele_relationnel/#anomalies","title":"Anomalies","text":"<p>On peut relever diff\u00e9rents types d'anomalies qui seront source d'erreur. On fera donc en sorte de les \u00e9viter au maximum.</p> <ul> <li>Anomalie de redondance : On retrouve plusieurs fois la m\u00eame information (ici les infos li\u00e9es \u00e0 un r\u00e9alisateur). Par exemple la date de naissance et le nom de Alfred Hitchcock. Il aurait mieux valut une relation s\u00e9par\u00e9e concernant les r\u00e9alisateurs, et que la relation des films fasse r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire des r\u00e9alisateurs.</li> <li>Anomalie d'insertion : L'absence de cl\u00e9 primaire permet d'ins\u00e9rer plusieurs fois le m\u00eame film avec des descripteurs diff\u00e9rents. La question est de savoir ce qui est unique dans cette description. Le titre peut \u00eatre utilis\u00e9 pour deux films diff\u00e9rents, un r\u00e9alisateur peut avoir fait plusieurs films, et m\u00eame deux r\u00e9alisateurs avoir le m\u00eame nom et m\u00eame ann\u00e9e de naissance.</li> <li>Anomalie de suppression : La suppression de l'unique film d'un r\u00e9alisateur supprime automatiquement les informations du r\u00e9alisateur.  </li> <li>Anomalie de mise \u00e0 jour : La modification de l'ann\u00e9e de naissance d'un r\u00e9alisateur oblige \u00e0 faire la mise \u00e0 jour sur plusieurs lignes.  </li> </ul>"},{"location":"BDD/modele_relationnel/#un-petit-resume-video","title":"Un petit r\u00e9sum\u00e9 vid\u00e9o :","text":"<p> Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021 </p>"},{"location":"BDD/projet_SQL/","title":"Projet SQL","text":"<p>Ce projet sur SQL va vous apprendre \u00e0 administrer une base de donn\u00e9es en utilisant une page php. Il va donc nous falloir un serveur. Uwamp \u00e0 t\u00e9l\u00e9charger ici.</p> <p>le logiciel ne m\u00e9morise pas les requ\u00eates. Certaines seront exigeables pour le rendu du projet, pensez donc \u00e0 les copier puis les coller dans un ficher .txt ou doc</p>"},{"location":"BDD/projet_SQL/#installer-uwamp","title":"Installer Uwamp","text":"<p>D\u00e9compressez-le sur votre cl\u00e9 USB.</p> <p>Ex\u00e9cuter UwAmp.exe et autorisez \u00e0 communiquer sur les r\u00e9seaux priv\u00e9s  </p> <p>Si tout va bien vous devriez voir cette fen\u00eatre :  </p> <p>Cliquez sur PhpMyAdmin  </p> <p>Entrer l'utilisateur : root et le mot de passe : root puis ex\u00e9cuter. Cr\u00e9er une base de donn\u00e9es appel\u00e9e <code>mongarage</code>, soit en cliquant sur l'onglet SQL et en tapant la requ\u00eate soit en cliquant sur 'Nouvelle base de donn\u00e9es'.  </p>"},{"location":"BDD/projet_SQL/#complements-sql-avec-phpmyadmin","title":"Compl\u00e9ments SQL avec phpmyadmin","text":"<p>Le langage SQL utilis\u00e9 dans phpmyadmin est un peu plus complet que celui de DB Browser. On pourra faire des jointure externe droite par exemple et la mani\u00e8re de d\u00e9finir les formats de donn\u00e9es.</p> <p>Formats</p> <ul> <li>petit texte : CHAR(nombre de caract\u00e8res max) ou VARCHAR en utilisant la cr\u00e9ation sans requ\u00eates.</li> <li>entier : INT(nombre de chiffres max)</li> <li>long texte : TEXT</li> <li>date : DATE ou DATETIME si on veut aussi l'heure.</li> </ul>"},{"location":"BDD/projet_SQL/#la-base-de-donnees","title":"La base de donn\u00e9es","text":"<p>Nous allons cr\u00e9er les tables de fa\u00e7on \u00e0 obtenir le mod\u00e8le suivant :</p> <p>On pourra utiliser comme exemple la commande suivante : <pre><code>CREATE TABLE client \n(NoClient INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    nom CHAR(25),prenom CHAR(25),\n    adresse CHAR(50),\n    telephone CHAR(15)) \nCHARSET=utf8;\n</code></pre> Informations sur les commandes :</p> <ul> <li>CHARSET=utf8 permet de d\u00e9finir l'encodage du texte (important lorsque l'on traite des noms en fran\u00e7ais)</li> <li>AUTO_INCREMENT : permet de d\u00e9finir que cette valeur sera automatiquement incr\u00e9ment\u00e9e \u00e0 la cr\u00e9ation de la ligne (inutile de le renseigner lors de la requ\u00eate INSERT on le remplacera pas <code>NULL</code>.</li> <li>PRIMARY KEY : d\u00e9finit la cl\u00e9 primaire de la table  </li> </ul> <p>Cr\u00e9ation de la cl\u00e9 secondaire entre la table client et la table v\u00e9hicule : <pre><code>ALTER TABLE vehicule ADD FOREIGN KEY (NoClient) REFERENCES client(NoClient);\n</code></pre></p> <p>Pour v\u00e9rifier la cr\u00e9ation de vos table et des liens cliquer sur l'onglet PLUS puis concepteur. Vous avez aussi la possibilit\u00e9 de cr\u00e9er vos tables et vos liens en direct sur l'interface mais il faudra faire quelques recherches pr\u00e9alables.  </p>"},{"location":"BDD/projet_SQL/#ajouter-des-donnees","title":"Ajouter des donn\u00e9es","text":"<p>En utilisant les requ\u00eates (que vous copierez dans un fichier texte) cr\u00e9er un client :</p> <ul> <li>nom : FERRARI</li> <li>prenom : Piero</li> <li>adresse : 20 rue de Milan MODENE</li> <li>telephone : 01 02 03 04 05</li> </ul> <p>Puis nous lui ajouterons deux v\u00e9hicules : une Ferrari F8Spider immatricul\u00e9e FE-123-RR et une Ferrari Monza SP1 immatricul\u00e9e AR-321-RI.</p>"},{"location":"BDD/projet_SQL/#importer-des-donnees","title":"Importer des donn\u00e9es","text":"<p>T\u00e9l\u00e9charger les tables client.csv et vehicule.csv. Importer les informations dans les tables et v\u00e9rifier en ouvrant le fichier .csv et e cliquant sur l'onglet AFFICHER :</p> <p>Compl\u00e9ter la base de donn\u00e9es avec les tables permettant d'obtenir ceci:  </p> <p>on commencera par cr\u00e9er la table reparation avant celle de travaux. T\u00e9l\u00e9charger les fichiers reparation.csv et travaux.csv et importer les donn\u00e9es.</p>"},{"location":"BDD/projet_SQL/#exercice-1-les-requetes","title":"Exercice 1 : Les requ\u00eates","text":"<p>Cr\u00e9er la requ\u00eate SQl permettant :  Faire une copie d'\u00e9cran des r\u00e9sultats en plus de la copie des requ\u00eates.</p> <ol> <li>d'afficher les informations client de Penelope CRUZ.</li> <li>d'afficher \u00e0 la fois les informations client de Omar SY et les informations li\u00e9es \u00e0 son ou ses v\u00e9hicules.</li> <li>une liste des imatriculations des v\u00e9hicules ayant fait l'objet de travaux le '2020/03/20'.</li> <li>Trouver le num\u00e9ro de t\u00e9l\u00e9phone du propri\u00e9taire de la voiture immatricul\u00e9e EE-111-FF.</li> <li>Donner la liste des immatriculations, le cout et la dur\u00e9e dont le prix des travaux (cout x duree) est sup\u00e9rieur \u00e0 50\u20ac.</li> </ol>"},{"location":"BDD/projet_SQL/#exercice-2-exploitation-de-la-base-de-donnees-en-php","title":"Exercice 2 : Exploitation de la base de donn\u00e9es en php.","text":"<p>Cr\u00e9er un dossier mongarage dans le dossier www du serveur Wamp.</p> <p>Cr\u00e9er un fichier r_client.php dans le dossier <code>mongarage</code> en collant le code ci-dessous dans le fichier, permettant d'interroger de la base de donn\u00e9es et d'afficher les coordonn\u00e9es compl\u00e8tes du client :</p> <p><pre><code>&lt;!doctype html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Client&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n    &lt;br&gt;\n        &lt;form action=\"r_client.php\" method=\"get\"&gt;\n                &lt;label&gt;Entrer le nom de client&lt;/label&gt; : \n                &lt;input type=\"text\" name=\"nom\" /&gt;            \n                &lt;input type=\"submit\" value=\"Envoyer\" /&gt;\n        &lt;/form&gt;\n        &lt;br&gt;\n\n        &lt;?php \n        $servername = \"localhost\";\n        $username = \"root\";\n        $password = \"root\";\n        $dbname = \"mongarage\";\n        $html = '';\n        if (empty($_GET['nom'])==False)\n        {\n        $nom = $_GET['nom'];\n        // Etablir la connexion \u00e0 la base de donn\u00e9e\n        $conn = new mysqli($servername, $username, $password, $dbname);\n        // V\u00e9rification de la connexion\n            if ($conn-&gt;connect_error) {\n            die(\"Echec de connexion : \" . $conn-&gt;connect_error);\n            } \n        // Cr\u00e9ation de la requ\u00eate\n        $sql = 'SELECT * FROM Client WHERE nom=\"'.$nom.'\";';\n        $result = $conn-&gt;query($sql);\n        if ($result-&gt;num_rows &gt; 0) {\n            // affiche chaque client du m\u00eame nom dans une table \n            $html=\"&lt;table style: border='1'&gt;&lt;tr&gt;&lt;th&gt;Nom&lt;/th&gt;&lt;th&gt;pr\u00e9nom&lt;/th&gt;&lt;th&gt;adresse&lt;/th&gt;&lt;th&gt;n\u00b0 T\u00e9l\u00e9phone&lt;/th&gt;&lt;/tr&gt;\";\n            while($row = $result-&gt;fetch_assoc()) {\n                $html = $html.\"&lt;tr&gt;&lt;td&gt;\".$row[\"nom\"]. \"&lt;/td&gt;&lt;td&gt;\".$row[\"prenom\"].\"&lt;/td&gt;&lt;td&gt;\".$row[\"adresse\"].\"&lt;/td&gt;&lt;td&gt;\".$row[\"telephone\"].\"&lt;/td&gt;&lt;/tr&gt;\";            \n                }\n            $html= $html.\"&lt;/table&gt;&lt;br&gt;\";\n            } \n        else {\n            $html= \"&lt;p&gt;Aucun r\u00e9sultat&lt;/p&gt;\";\n            }\n        $conn-&gt;close(); //clos la connexion avec la base de donn\u00e9es\n        echo $html;\n        }\n        ?&gt;  \n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> La variable <code>$row</code> est un tableau index\u00e9 pour lequel <code>$row['nom']</code> contient le nom du r\u00e9sultat de la requ\u00eate de la ligne courante. On fait une boucle pour pacourir ligne par ligne le r\u00e9sultat de la requ\u00eate. La variable <code>$row</code> change alors de contenu \u00e0 chaque ligne de r\u00e9sultat.  </p> <p>Tester le code.</p> <p>Partie 1 Cr\u00e9er un fichier r-immat.php permettant d'afficher les coordonn\u00e9es du client par une recherche de plaque d'immatriculation. On notera que pour r\u00e9utiliser le contenu d'une variable php dans une requ\u00eate SQL on l'entoure de points, de simple quote puis de guillemets comme lors de la req\u00fbete du fichier pr\u00e9c\u00e9dent. La requ\u00eate elle-m\u00eame est entour\u00e9 de quote et rang\u00e9e dans une variable. Attention aux points virgule. <pre><code>$sql='SELECT * FROM Client WHERE nom=\"'.$nom.'\";';\n</code></pre></p> <p>Partie 2: Cr\u00e9er un fichier e_repare.php permettant de faire un \u00e9tat de toutes les r\u00e9parations effectu\u00e9es sur un v\u00e9hicule.</p> <p>Deux requ\u00eates sont n\u00e9cessaires :</p> <pre><code>Une premi\u00e8re reprend le code php pr\u00e9c\u00e9dent pour afficher le propri\u00e9taire,\nUne deuxi\u00e8me sur les tables travaux et Reparation pour faire un \u00e9tat indiquant les r\u00e9parations faites sur cette voiture (en bonus facultatif: la somme totale des r\u00e9parations.)\n</code></pre> <p>Partie 3 Compl\u00e9ter le code de la page n_client.php ci-dessous permettant de cr\u00e9er un nouveau client dans la base.  </p> <p>R\u00e9sultat :</p> <pre><code>&lt;!doctype html&gt;\n    &lt;head&gt;\n        &lt;meta  charset=\"utf-8\" /&gt;\n        &lt;title&gt;Client&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n\n        &lt;form action=\"n_client.php\" method=\"get\"&gt;\n                &lt;br&gt;&lt;label&gt;Nom&lt;/label&gt; : &lt;input type=\"text\" name=\"nom\" /&gt;&lt;br&gt;           \n                &lt;br&gt;&lt;label&gt;Pr\u00e9nom&lt;/label&gt; : &lt;input type=\"text\" name=\"prenom\" /&gt;&lt;br&gt;\n                &lt;br&gt;&lt;label&gt;Adresse&lt;/label&gt; : &lt;input type=\"text\" name=\"adresse\" /&gt;&lt;br&gt;\n                &lt;br&gt;&lt;label&gt;No de t\u00e9l\u00e9phone&lt;/label&gt; : &lt;input type=\"text\" name=\"tel\" /&gt;&lt;br&gt;\n                &lt;br&gt;&lt;label&gt;Marque du v\u00e9hicule&lt;/label&gt; : &lt;input type=\"text\" name=\"marque\" /&gt;&lt;br&gt;\n                &lt;br&gt;&lt;label&gt;Mod\u00e8le&lt;/label&gt; : &lt;input type=\"text\" name=\"modele\" /&gt;&lt;br&gt;\n                &lt;br&gt;&lt;label&gt;Immatriculation&lt;/label&gt; : &lt;input type=\"text\" name=\"immat\" /&gt;&lt;br&gt;\n                &lt;br&gt;&lt;input type=\"submit\" value=\"Envoyer\" /&gt;\n        &lt;/form&gt;\n        &lt;br&gt;\n\n        &lt;?php \n        $servername = \"localhost\";\n        $username = \"root\";\n        $password = \"root\";\n        $dbname = \"mongarage\";\n        $html='';\n\n        if (empty($_GET['nom'])==False &amp;&amp; empty($_GET['prenom'])==False &amp;&amp; empty($_GET['adresse'])==False &amp;&amp; empty($_GET['tel'])==False\n        &amp;&amp; empty($_GET['marque'])==False &amp;&amp; empty($_GET['modele'])==False &amp;&amp; empty($_GET['immat'])==False)\n        {\n            $nom= $_GET['nom'];\n            $prenom= $_GET['prenom'];\n            $adresse= $_GET['adresse'];\n            $tel= $_GET['tel'];\n            $marque=$_GET['marque'];\n            $modele=$_GET['modele'];\n            $immat=$_GET['immat'];\n\n            // Etablir la connexion \u00e0 la base de donn\u00e9e\n            $conn = new mysqli($servername, $username, $password, $dbname);\n\n            // Cr\u00e9ation de la commande SQL permettant d'ajouter le nouvel client   \n            $sql=...\n            $result=$conn-&gt;query($sql);\n\n            if ($result==True) {\n                // affiche le message de r\u00e9ussite de l'ajout de donn\u00e9es dans la base \n                $html=\"&lt;p&gt;Nouveau client enregistr\u00e9&lt;/p&gt;\";\n            }\n            else {\n                $html=\"&lt;p&gt;Erreur dans la requ\u00eate client&lt;/p&gt;\";\n            }\n\n            // Cr\u00e9ation de la requ\u00eate SQL permettant de r\u00e9cup\u00e9rer le num\u00e9ro du client cr\u00e9\u00e9e pr\u00e9cedemment par l'auto incr\u00e9mentation\n            $sql=...\n\n            $result=$conn-&gt;query($sql);\n            if ($result-&gt;num_rows &gt; 0) {\n                // m\u00e9morise le NoClient \n                $row = $result-&gt;fetch_assoc();\n\n            }\n            // Cr\u00e9ation de la commande SQL permettant d'ajouter le nouveau v\u00e9hicule dans la table vehicule              \n            $sql=...\n            $result=$conn-&gt;query($sql);\n            if ($result==True) {\n                // affiche le message de r\u00e9ussite \n                $html=\"&lt;p&gt;Nouveau v\u00e9hicule enregistr\u00e9&lt;/p&gt;\";\n            }\n            else {\n                $html=\"&lt;p&gt;Erreur dans la requ\u00eate v\u00e9hicule&lt;/p&gt;\";\n            }       \n        }\n        else {\n            $html= \"&lt;p&gt;Merci de remplir tous les champs&lt;/p&gt;\";\n        }   \n        echo $html; \n        ?&gt;  \n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Enregistrez vos fichiers dans le dossier www. Zippez ce dossier et le rendre au professeur en temps voulu.</p> <p> Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021 </p>"},{"location":"Programmation/gestion_bug/","title":"Gestion des Bugs","text":"<p>Un Bug das un programme informatique est un comportement non d\u00e9sir\u00e9 par le programmeur. A l'origine de ce terme, on trouve un insecte :</p> <p>Pour \u00e9viter les comportements inaprorpi\u00e9s, nous allons voir un certains nombre d'\u00e9l\u00e9ments que nous allons pouvoir mettre en place.  </p>"},{"location":"Programmation/gestion_bug/#typage","title":"Typage","text":"<p>le type des variables en python est dynamique, c'est \u00e0 dire que c'est seulement au moment de l'\u00e9xecution du programme que le compilateur v\u00e9rifie qu'il peut faire l'op\u00e9ration demand\u00e9e avec le type de donn\u00e9es fournie. Beaucoup de langage de programmation necessitent de pr\u00e9ciser le type au moment de la d\u00e9claration de la variable.</p> <p>Les types de donn\u00e9es en python sont :  </p> <p>Selon le type de donn\u00e9es, une op\u00e9ration peut avoir des comportements diff\u00e9rents:  </p> <p>Pour permettre \u00e0 l'utilisateur de savoir quel type de donn\u00e9es il doit utiliser, on peut pr\u00e9ciser lors de la cr\u00e9ation des fonctions, les types d'entr\u00e9es et de sortie :  <pre><code>def est_pair(n: int) -&gt; bool:\n    \"Indique si un nombre est pair ou non\"\n    if n % 2 == 0:\n        return True\n    else:\n        return False\n</code></pre></p> <p>Remarque</p> <p>Certains \u00e9diteurs afficheront une remarque mais le non respect des types de donn\u00e9es d'engendrera pas une erreur du programme.</p>"},{"location":"Programmation/gestion_bug/#variants-et-invariants","title":"Variants et invariants","text":""},{"location":"Programmation/gestion_bug/#variant","title":"Variant","text":"<p>Un variant de boucle est une donn\u00e9e dans une boucle qui varie de fa\u00e7on \u00e0 ce que l'on soit s\u00fbr que le programme pourra sortir de la boucle. </p> <p>Un variant de boucle est une expression :</p> <ul> <li>enti\u00e8re</li> <li>positive</li> <li>qui d\u00e9cro\u00eet strictement \u00e0 chaque it\u00e9ration</li> </ul> <p><pre><code>a = int(input(\"a : \"))\nb = int(input(\"b : \"))\nm = 0\nwhile b &gt; 0:\n   m += a\n   b -= 1\nprint(\"a*b = \", m)\n</code></pre> Ici b est le variant de boucle, il d\u00e9croit jusqu'\u00e0 atteindre 0.</p> <p><pre><code>a = int(input(\"a : \"))\nb = int(input(\"b : \"))\ni = 0\nm = 0\nwhile i &lt; b:\n   m += a\n   i += 1\nprint(\"a*b = \", m)\n</code></pre> Ici le variant sera b-i.</p>"},{"location":"Programmation/gestion_bug/#invariant-de-structure","title":"Invariant de structure","text":"<p>Un invariant de structure est une propri\u00e9t\u00e9 qui est toujours v\u00e9rifi\u00e9e lors du programme et qui peut d\u00e9tecter la pr\u00e9sence d'erreur. On reprend les exemples ci-dessus : <pre><code>a = int(input(\"a : \"))\nb = int(input(\"b : \"))\nm = 0\nc=b\nwhile b &gt; 0:\n    m += a\n    b -= 1\nprint(\"a*b = \", m)\n</code></pre> Si on d\u00e9roule la boucle \u00e9tape par \u00e9tape : </p> a b c m a c c 0 a c-1 c a a c-2 c 2a a c-i c ixa <p>On constate ici une donn\u00e9e commune dans l'\u00e9volution des variables (i) : en rempla\u00e7ant i par m/a dans l'expression de b, on trouve b=c-m/a. Cette propri\u00e9t\u00e9 est valable \u00e0 chauqe boucle, elle constitue un invariant. On pourra ajouter l'assertion ci-dessous dans la boucle. <pre><code>    assert (b==c-m/a)\n</code></pre></p>"},{"location":"Programmation/gestion_bug/#pre-et-postconditions","title":"Pr\u00e9 et postconditions","text":""},{"location":"Programmation/gestion_bug/#preconditions","title":"pr\u00e9conditions","text":"<p>exemple</p> code <p>On \u00e9tudie une fonction qui prend un entier en param\u00e8tre et renvoie le chiffre des unit\u00e9s. <pre><code>def get_unite(n: int) -&gt; int:\n    \"\"\"\n    renvoie le chiffre des unit\u00e9s d'un entier n\n    \"\"\"\n    while n&gt;=10 :       # r\u00e9p\u00e9tition tant que n est sup\u00e9rieur ou \u00e9gal \u00e0 10\n        n = n-10\n    return n\n</code></pre></p> sortie <pre><code>&gt;&gt;&gt; get_unite(4567)\n7\n&gt;&gt;&gt; get_unite(45.67)\n5.670000000000002\n&gt;&gt;&gt; get_unite(-6)\n-6\n</code></pre> <p>On peut voir que la fonction ne respecte pas la documentation puisqu'elle s'ex\u00e9cute m\u00eame avec un flottant. Avant m\u00eame l'\u00e9x\u00e9cution du code, nous allons donc ajouter des assertions permettant de fixer les conditions suivantes : n doit \u00eatre un entier, n doit \u00eatre positif ou nul. <pre><code>def get_unite(n: int) -&gt; int:\n    \"\"\"\n    renvoie le chiffre des unit\u00e9s d'un entier n\n    \"\"\"\n    assert type(n)==int, \"vous devez entrer un nombre entier.\"          # \"Pr\u00e9condition 1\"\n    assert n&gt;=0, \"le nombre \u00e9tudi\u00e9 doit \u00eatre positif ou nul.\"           # \"Pr\u00e9condition 2\"\n    while n&gt;=10 :       # r\u00e9p\u00e9tition tant que n est sup\u00e9rieur ou \u00e9gal \u00e0 10\n        n = n-10\n    return n\n</code></pre></p>"},{"location":"Programmation/gestion_bug/#postconditions","title":"Postconditions","text":"<p>Avant de renvoyer le r\u00e9sutat on v\u00e9rifie sa validit\u00e9 avec une postcondition : le r\u00e9sultat retourn\u00e9 doit \u00eatre strictement inf\u00e9rieur \u00e0 10 et sup\u00e9rieur \u00e0 0. <pre><code>def get_unite(n: int) -&gt; int:\n    \"\"\"\n    renvoie le chiffre des unit\u00e9s d'un entier n\n    \"\"\"\n    assert type(n)==int, \"vous devez entrer un nombre entier.\"          # \"Pr\u00e9condition 1\"\n    assert n&gt;=0, \"le nombre \u00e9tudi\u00e9 doit \u00eatre positif ou nul.\"           # \"Pr\u00e9condition 2\"\n    while n&gt;=10 :       # r\u00e9p\u00e9tition tant que n est sup\u00e9rieur ou \u00e9gal \u00e0 10\n        n = n-10\n    assert n&lt;10, \"le nombre renvoy\u00e9 doit \u00eatre inf\u00e9rieur \u00e0 10.\"  # Postcondition 1\n    assert n&gt;=0, \"le nombre renvoy\u00e9 doit \u00eatre positif.\"  # Postcondition 2\n    return n\n</code></pre></p>"},{"location":"Programmation/gestion_bug/#tests","title":"Tests","text":"<p>On envisagera de r\u00e9aliser des tests lors de l'ex\u00e9cution d'une fonction, qui prendra en compte des cas usuels mais surtout les cas limites. Par exemple lors de la cr\u00e9ation de la recherche du maximum dans un tableau : <pre><code>def maximum(tab : list):\n    '''Renvoie l'index de la valeur maximale du tableau'''\n    maxi=0\n    sortie=0\n    for elt in tab:\n        if elt&gt;maxi:\n            sortie=tab.index(elt)\n            maxi=elt\n    return sortie\n</code></pre> Cette fonction peut \u00eatre test\u00e9e ainsi : <pre><code>assert maximum([2,5,4])==2\n</code></pre> Mais que se passe-t-il avec : <pre><code>print(maximum([2,'toto',4]))\nprint(maximum([2,4,4]))\nprint(maximum([])\n</code></pre> Ce sont ce que l'on appelle des cas limites, qui peuvent provoquer des effets de bords (effets non d\u00e9sir\u00e9s). Il faudra donc dans le codage de la fonction envisager tous ces cas.</p> <p><pre><code>def maximum(tab : list):\n    '''Renvoie LE PREMIER l'index de la valeur maximale du tableau'''\n    if len(tab)==0:\n        return None\n    else :\n        maxi=0\n        sortie=0\n        for elt in tab:\n            if type(elt)==int and elt&gt;maxi:\n                sortie=tab.index(elt)\n                maxi=elt\n        return sortie\n</code></pre> Les tests peuvent \u00eatre int\u00e9g\u00e9r\u00e9s aux fonctions sous forme de pr\u00e9conditions ou postconditions ou dans une autre fonction, voire m\u00eame dans un autre programme.</p> <p>Exemple</p> main.py <pre><code>def maximum(tab : list):\n    '''Renvoie LE PREMIER l'index de la valeur maximale du tableau'''\n    if len(tab)==0:\n        return None\n    else :\n        maxi=0\n        sortie=0\n        for elt in tab:\n            if type(elt)==int and elt&gt;maxi:\n                sortie=tab.index(elt)\n                maxi=elt\n        return sortie\n</code></pre> test.py <pre><code>from main import *\nassert maximum([2,5,4]) == 1\nassert maximum([2,'toto',4]) == 2\nassert maximum([2,4,4])==1\nassert maximum([]) == none\n</code></pre>"},{"location":"Programmation/gestion_bug/#les-commentaires","title":"Les commentaires","text":"<p>Le meilleur moyen d'\u00eatre clair sur les donn\u00e9es que l'on veut uiliser et les erreurs \u00e0 ne pas commettre est de sp\u00e9cifier sa fonction (ajouter une docstring contenant une description de la fonction ainsi que le typage) et des commentaires r\u00e9guliers dans le corps de la fonction (par exemple \u00e0 chaque boucle en expliquant ce qu'elle fait). Ajouter ensuite des assertions r\u00e9guli\u00e8res dans la fonction et un jeu de tests sans oublier les conditions limites.  </p>"},{"location":"Programmation/gestion_bug/#aller-plus-loin","title":"Aller plus loin ...","text":"<p>Malgr\u00e9 tous vos efforts, des bugs apparaissent dans votre projet. Vous allez donc devoir les g\u00e9rer. Voici quelques conseils et outils pour vous y aider.</p> <ul> <li>utilisez un outil de suivi des bugs. Ce n'est pas n\u00e9cessairement quelque chose de compliqu\u00e9 : parfois un simple fichier texte, \u00e9ventuellement partag\u00e9 avec vos collaborateurs suffit.</li> <li>fa\u00eetes des archives (fichiers zip) r\u00e9guli\u00e8res de votre travail afin de pouvoir revenir en arri\u00e8re en cas de soucis. Il se peut que votre programme fonctionnait \u00e0 un moment donn\u00e9es et qu'une am\u00e9lioration conduise \u00e0 un probl\u00e8me. Pouvoir revenir \u00e0 une version ant\u00e9rieure qui marchait peut s'av\u00e9rer utile...</li> <li>n'ignorez jamais un probl\u00e8me potentiel sous pr\u00e9texte qu'il ne peut normalement pas se produire : rendez votre code robuste par ce qu'on appelle la programmation d\u00e9fensive. Imaginez qu'une fonction prenne en param\u00e8tre un indice de tableau, v\u00e9rifiez que cet indice est bien compris entre 0 et la longueur du tableau-1 afin d'\u00e9viter un plantage en cas de valeur en entr\u00e9e erron\u00e9e.</li> </ul>"},{"location":"Programmation/modularite/","title":"Modularit\u00e9","text":""},{"location":"Programmation/modularite/#rappels","title":"Rappels","text":""},{"location":"Programmation/modularite/#utilisation-dun-module","title":"Utilisation d'un module","text":"<p>Vous avez d\u00e9j\u00e0 utilis\u00e9 les modules <code>math</code>et <code>random</code>par exemple. Nous rappelons que l'on peut appeler un module ainsi : <pre><code># import du module\nimport statistics\n# affiche l'aide\nhelp(statistics)\n</code></pre></p> <p>Utilisation du module <pre><code>import statistics\nnotes = [11, 14, 18, 5, 12, 13, 15]\nprint(\"Moyenne:\", statistics.mean(notes))\nprint(\"\u00c9cart-type:\", statistics.stdev(notes))\n</code></pre></p> <p>On peut aussi utiliser un alias :    </p> <pre><code>import statistics as stat\nnotes = [11, 14, 18, 5, 12, 13, 15]\nprint(\"Moyenne:\", stat.mean(notes))\nprint(\"\u00c9cart-type:\", stat.stdev(notes))\n</code></pre> <p>Ou encore sans avoir \u00e0 \u00e9crire de pr\u00e9fixe :</p> <pre><code>form statistics import mean,stdev\nnotes = [11, 14, 18, 5, 12, 13, 15]\nprint(\"Moyenne:\", mean(notes))\nprint(\"\u00c9cart-type:\", stdev(notes))\n</code></pre> <p>Attention</p> <p>Cette derni\u00e8re m\u00e9thode est priviligi\u00e9e car elle permet d'importer uniqument les fonctions n\u00e9cessaires et donc de gagner en temps d'\u00e9xecution si on utilise un module important. En rempla\u00e7ant la liste des fonctions par <code>*</code> on importe tout le module.  </p> <p>Aide d'un module On peut invoquer l'aide sur un module c'est-\u00e0-dire sa description, la liste de ses fonctions et l'aide sur chacune des fonctions. Il faut que le module soit import\u00e9 : <pre><code>&gt;&gt;&gt; import module\n&gt;&gt;&gt; help(module)\n</code></pre></p>"},{"location":"Programmation/modularite/#assertions","title":"Assertions","text":"<p>Pour tester les fonctions, on peut ajouter des tests en cours de code, sans que celui-ci ne soit pris en compte Ce sont des lignes que l'on peut supprimer sans changer la structure du code. Elles permettent de tester les conditions critiques et permettent de stopper le programme si l'une d'elle se produit (ce qui ne doit pas arriver si le programme est correctement impl\u00e9ment\u00e9). <pre><code>    def avg(notes):\n        assert len(notes) &gt; 0, 'une note minimum requise'\n        return sum(notes) / len(notes)\n</code></pre> Si on teste ceci, tout va bien : <pre><code>notes =[8, 9, 10]\nprint(avg(notes))\n</code></pre> En revanche, ceci fait stopper le programme : <pre><code>notes =[]\nprint(avg(notes))\n</code></pre></p>"},{"location":"Programmation/modularite/#bloc-try-except","title":"Bloc <code>try ... except...</code>","text":"<p>On peut anticiper les probl\u00e8mes que posent l'utilisation des modules comme par exemple un argument de fonction qui ne serait pas du bon type de donn\u00e9e. Pour cela on utilise des tests qui permettent de revenir au d\u00e9but de la fonction tout en signanlant \u00e0 l'utilisateur l'ereur commise. Par exemple : <pre><code>    try:\n        x = int(input(\"Please enter a number: \"))\n        break\n    except ValueError:\n        print(\"Oops!  That was no valid number.  Try again...\")\n</code></pre> Ce code permet de tester que l'entr\u00e9e de l'utilisateur est bien un entier. Si l'on veut que le programme rep\u00e8te la demande jusqu'\u00e0 ce que l'entr\u00e9e soit correcte, on peut placer une boucle infinie. <pre><code>while True:\n    try:\n        x = int(input(\"Please enter a number: \"))\n        break\n    except ValueError:\n        print(\"Oops!  That was no valid number.  Try again...\")\n</code></pre></p> <p>Quelques exemples d'erreurs d\u00e9tectables</p> <p><code>NameError</code> : acc\u00e8s \u00e0 une variable inexistante <code>IndexError</code> : acc\u00e8s \u00e0 un indice non valide <code>KeyError</code>: acc\u00e8s \u00e0 une cl\u00e9 de dictionnaire non valide <code>ZeroDivisionError</code> : division par z\u00e9ro <code>TypeError</code> : op\u00e9ration appliqu\u00e9 \u00e0 des valeurs incompatibles  </p> <p>un exemple complet</p> <pre><code>    try:\n        numerateur = int(input(\"Entrez un num\u00e9rateur : \"))\n        denominateur = int(input(\"Entrez un d\u00e9nominateur : \"))\n        resultat = numerateur / denominateur\n        print(\"Le resultat de la division est\", resultat)\n    except ValueError:\n        print(\"D\u00e9sol\u00e9, les valeurs saisies ne sont pas des nombres.\")\n    except ZeroDivisionError:\n        print(\"D\u00e9sol\u00e9, la division par z\u00e9ro n'est pas permise.\")\n</code></pre>"},{"location":"Programmation/modularite/#creer-son-propore-module","title":"Cr\u00e9er son propore module","text":""},{"location":"Programmation/modularite/#strucutre-de-base-dun-module","title":"Strucutre de base d'un module","text":"<p>Important</p> <p> Pour obtenir cette structure on r\u00e9era un dossier <code>mesmodules</code> contenant les dif\u00e9rents fichiers <code>.py</code> du module. On cr\u00e9era un fichier vide <code>__init__.py</code> dans ce dossier et on appelera les diff\u00e9rentes parties du module dans le fichier comme ci-dessous :. Appel des modules : <pre><code>import mesmodules.extension\n\nOu \nfrom mesmodules.part.niveaudeux import une_fonction\n</code></pre></p> <p>Un module est un dossier comprenant une ou plusieurs biblioth\u00e8ques (ou library) qui sont en fait des fichiers <code>.py</code>.  Par exemple le module <code>matplotlib</code> contient entre autre, le fichier <code>pylab.py</code>et <code>pyplot.py</code>.  </p>"},{"location":"Programmation/modularite/#la-documentation-du-module","title":"La Documentation du module","text":"<p>Il faudra documenter le module de fa\u00e7on explicite. Chaque fonction devra comporter des <code>docstrings</code> qui expliquent clairement le type d'arguments attendus et le type de donn\u00e9es retourn\u00e9es. Les noms de fonctions et des variables doivent \u00eatre explicites pour la meilleure compr\u00e9hension de tous.  Vous pouvez cr\u00e9er une documentation \u00e0 part (de pr\u00e9f\u00e9rence en anglais) pour d\u00e9tailler encore plus les recommandations. Voici un exemple de module cr\u00e9\u00e9 sur les suites de fibonacci (voir reproduction des lapins au chapitre R\u00e9cursivit\u00e9). Pour afficher cette description, on utilisera la fonction <code>help()</code>.  </p> <pre><code>\"\"\" Module fibo relatif \u00e0 la cr\u00e9ation de nombres de Fibionacci\n\nPour rappel, la suite de Fibonacci est une suite d'entiers dans laquelle chaque terme est la somme \ndes deux termes qui le pr\u00e9c\u00e8dent.(voir: https://fr.wikipedia.org/wiki/Suite_de_Fibonacci)\n\nCe module pr\u00e9sente deux fonctions:\n\n- fib_print: affiche les nombres de Fibionacii\n- fib_to_array: renvoie la liste des nombres de Fibionacci\n\n\"\"\"\n\ndef fib_print(n):\n    \"\"\"Affiche les nombres de Fibionacii\n\n    Arguments\n    ---------\n    n: int\n        dernier rang de la suite de Fibonacci affich\u00e9\n    \"\"\"\n    a, b = 0, 1\n    while a &lt; n:\n        print(a, end=' ')\n        a, b = b, a+b\n    print()\n\ndef fib_to_array(n):\n    \"\"\"Renvoie la liste des nombres de Fibionacii\n\n    Arguments\n    ---------\n    n: int\n        dernier rang de la suite de Fibonacci renvoy\u00e9 dans la liste\n\n    Returns\n    -------\n    list\n        La liste des nombres de Fibionnaci jusqu'au rang n\n    \"\"\"\n    result = []\n    a, b = 0, 1\n    while a &lt; n:\n        result.append(a)\n        a, b = b, a+b\n    return result\n</code></pre>"},{"location":"Programmation/modularite/#les-fonctions","title":"Les fonctions","text":"<p>Les fonctions doivent contenir des tests de fa\u00e7on \u00e0 ce que lorsqu'une erreur est d\u00e9tect\u00e9e, elle fasse afficher un message d'erreur compr\u00e9hensible par l'utilisateur. Elles doivent \u00eatre document\u00e9es pr\u00e9cisement.</p> <p>Fonctions priv\u00e9es</p> <p>On peut avoir besoin dans le module de cr\u00e9er des fonctions priv\u00e9es, c'est-\u00e0-dire qu'elle ne sera pas forc\u00e9ment accessible de l'ext\u00e9rieur mais ne sera utilis\u00e9e que \u00e0 l'int\u00e9rieur du module : </p> <pre><code>    #module\n    def __mafontion(mon_param\u00e8tre):\n        return un truc\n    #programme principal\n    __mafonction(mavariable)#renvoie une erreur\n</code></pre>"},{"location":"Programmation/modularite/#finir-le-fichier","title":"Finir le fichier","text":"<p>Lors de l'ex\u00e9cution d'un programme, python cr\u00e9e une variable appel\u00e9e <code>__name__</code>. Lorsque le fichier principal est ex\u00e9cut\u00e9, cette variable pour ce fichier prend la valeur <code>\"__main__\"</code>. Le code ci-dessous permet de d\u00e9tecter si le fichier dans lequel il apparait est le programme ex\u00e9cut\u00e9 directement ou un programme appel\u00e9 par le prorgramme principal. Tout ce qui se trouve dans la boucle ne sera ex\u00e9cut\u00e9 que si CE programme est ex\u00e9cut\u00e9 et pas s'il est appel\u00e9 par un autre  <pre><code>if __name__ == \"__main__\":\n    print (\"Execut\u00e9 si le programme est invoqu\u00e9 directement\")\n</code></pre> Votre module devra donc se finir ainsi si vous ajoutez des tests devant s'afficher.</p>"},{"location":"Programmation/modularite/#projet","title":"Projet","text":"<p>Un petit tour par ici pour voir le travail \u00e0 faire.</p> <p> Cr\u00e9ation MB. (r\u00e9)utilisation et modification libre mais non commerciale CC-BY-NC </p>"},{"location":"Programmation/paradigme_programmation/","title":"Paradigmes de programmation","text":"<p>Un paradigme de programmation est une m\u00e9thode de programmation qui respecte certaines r\u00e8gles qu'il va falloir respecter. On distinque parmi ces paradigmes : - la programmation orient\u00e9e objet - la programmation fonctionnelle - la programmation imp\u00e9rative - la programmation \u00e9v\u00e8nementielle : le programme ex\u00e9cut\u00e9 va d\u00e9pendre d'un \u00e9v\u00e8nement utilisateur (clic sur un bouton, prsser une touche du clavier, ...). Cela a \u00e9t\u00e9 vu en 1ere lors que l'utilisation de <code>javascript</code>.  </p>"},{"location":"Programmation/paradigme_programmation/#pragrammation-fonctionnelle-vs-programmation-imperative","title":"Pragrammation fonctionnelle vs programmation imp\u00e9rative","text":"<p>Le principe de la programmation fonctionnelle est de placer la totalit\u00e9 du code dans des fonctions. Certaines r\u00e8gles sont cependant \u00e0 respecter : - Une fonction ne doit pas modifier une variable, mais seulement les informations pass\u00e9es en argument - Les fonctions doivent \u00eatre pures c'est-\u00e0-dire qu'un appel \u00e0 une fonction avec le m\u00eame argument doit toujours donner le m\u00eame r\u00e9sultat.  - Les fonctions peuvent appeler d'autres fonctions - On limite les variables globales et il n'y a pas de \"programme principal\" le programme doit s'ex\u00e9cuter uniquement par appel de fonctions - On ne fait pas de boucles, on utilise la r\u00e9cursivit\u00e9 \u00e0 la place (nous n'irons peut etre pas aussi loin) En respectant ces r\u00e8gles on s'affranchit des effets de bord.    </p> <p>Effets de bords</p> <p>Les effets de bords en informatique, sont en fait un effet non d\u00e9sirable ou non pr\u00e9vu par le programmeur. Ces effets arrivent souvent lorsque qu'une fonction manipule une variable globale.  </p> <p>Quelques exemples</p> <p>Exemple 1 : modification d'une variable globale <pre><code>c=1\ndef augmenter(n):\n    global c\n    c=c+n\n    return c\nprint(augmenter(5))\nprint(augmenter(5))\n</code></pre> Les deux appels, pourtant identiques, de cette fonction ne revnoient pas la m\u00eame valeur (le premier renvoie 6 et le second 11). Cette fonction est donc impure. Exemple 2 : utilisation d'une boucle <pre><code>#en imp\u00e9ratif\ndef somme(liste):\n    \"\"\"\n    Calcule la somme des \u00e9l\u00e9ments de la liste liste.\n    \"\"\"\n    somme = 0\n    for nbre in liste:\n        somme = somme + nbre\n    return somme\n#En fonctionnel\ndef somme(liste):\n    \"\"\"\n    Calcule la somme des \u00e9l\u00e9ments de la liste liste.\n    \"\"\"\n    if len(liste) == 0:\n        return 0\n    else:\n        return liste[0] + somme(liste[1:])\n</code></pre></p> <p>Programmation fonctionnelle ou non?</p> <p>Ce programme respecte-t-il le paradigme fonctionnel? <pre><code>l = [4,7,3]\ndef ajout(i):\n  l.append(i)\n</code></pre>      Quelle est la bonne r\u00e9ponse ?   Oui  Non <p> La bonne r\u00e9ponse est Non car elle modifie une variable exterieure.</p></p> <p>Programmation fonctionnelle ou non?</p> <p>Ce programme respecte-t-il le paradigme fonctionnel? <code>python     i = 5     def fct():       if i &gt; 5:         return True       else :         return False     fct()</code>      Quelle est la bonne r\u00e9ponse ?   Oui  Non <p> La bonne r\u00e9ponse est Non car elle modifie une variable exterieure.</p></p> <p>Programmation fonctionnelle ou non?</p> <p>Ce programme respecte-t-il le paradigme fonctionnel? <pre><code>def mafonction(n):\n    while n&lt;10:\n        print(n)\n        n+=1\n</code></pre>      Quelle est la bonne r\u00e9ponse ?   Oui  Non <p> La bonne r\u00e9ponse est Non car elle utilise une boucle <code>while</code>.</p></p> <p>Pour toutes les fonctions qui ne respetaient pas le paradigme fonctionnel, vous aurez l'occasion de les modifier lors du TP.</p> <p>Il existe en python une fonction qui permet de passer une fonction en param\u00e8tre d'une autre. Il s'agit de la fonction <code>eval()</code>qui permet d'\u00e9valuer la valeur d'une cha\u00eene de caract\u00e8res \u00e0 condition qu'elle soit \u00e9valuable. Pour une expression :  <pre><code>print eval(\"2 + 4\")\n#6\na = 2\nprint eval(\"a == 2\")\n#true\n</code></pre> Pour une fonction (tester ceci dans un bac \u00e0 sable et prenez le temps de comprendre ce qu'il se passe) :  <pre><code>def somme(liste):\n    s=0\n    for elt in liste:\n        s=s+elt\n    return s\n\ndef moyenne(liste):\n    return somme(liste)/len(liste)\n\n\n\nmesfonctions=['somme','moyenne']\n\nfor fct in mesfonctions:\n    print(eval(fct+'([2,3,4,5,6])'))\n</code></pre></p>"},{"location":"Programmation/paradigme_programmation/#programmation-orientee-objet","title":"Programmation orient\u00e9e objet","text":"<p>Je ne reviens pas sur les principe de la POO, cela a d\u00e9j\u00e0 \u00e9t\u00e9 trait\u00e9 en long en large et en travers un peu plus t\u00f4t dans l'ann\u00e9e. Cela dit le TP nous permettra de l'aborder une nouvelle fois (en diagonale?).  </p>"},{"location":"Programmation/paradigme_programmation/#comment-choisir-son-paradigme","title":"Comment choisir son paradigme ?","text":"<p>Pour simplifier, si votre probl\u00e8me implique une s\u00e9rie de manipulations s\u00e9quentielles simples, suivre le paradigme de programmation imp\u00e9rative de la vieille \u00e9cole serait le moins cher en termes de temps et d'efforts et vous donnerait potentiellement les meilleures performances. </p> <p>Dans le cas de probl\u00e8mes n\u00e9cessitant des transformations math\u00e9matiques des valeurs, le filtrage des informations, le mappage( transformer une liste en une autre) et les r\u00e9ductions( transformer une liste en une valeur), la programmation fonctionnelle pourrait \u00eatre adapt\u00e9e. </p> <p>Si le probl\u00e8me est structur\u00e9 comme un tas d'objets interd\u00e9pendants avec certains attributs qui peuvent changer avec le temps, en fonction de certaines conditions, la programmation orient\u00e9e objet sera certainement la plus naturelle. </p> <p>Bien s\u00fbr, il n'y a pas de r\u00e8gle simple, car le choix du paradigme de programmation d\u00e9pend \u00e9galement fortement du type de donn\u00e9es \u00e0 traiter, des connaissances des programmeurs et de diverses autres choses comme l'\u00e9volutivit\u00e9. </p> <p>source : Perceiving Python programming paradigms </p> <p>Il est a noter que le bon programmeur doit conna\u00eetre tous ces paradigmes. Certains langages informatiques sont plut\u00f4t d\u00e9di\u00e9s \u00e0 un paradigme ou un autre. Par exemple, le langage <code>JAVA</code>est utilis\u00e9 en POO et <code>javascript</code> en \u00e9venemetiel. Des langages comme <code>python</code> sont polyvalent mais peut etre du coup moins puissants pour certains paradigmes.</p>"},{"location":"Programmation/projet_modularite/","title":"Projet : Module incertitude","text":"<p>L'objectif est de cr\u00e9er un module <code>incertitude</code> permettant \u00e0 nos amis physicien de faire les calculs n\u00e9cessaires \u00e0 l'\u00e9valuation des erreurs de mesures. On ne s'interessera ici qu'aux incertitudes de type A c'est-\u00e0-dire issue d'une s\u00e9rie de mesure. En bonus, on pourra traiter les diff\u00e9rentes incertitudes de type B, issue d'un mesure unique.  </p>"},{"location":"Programmation/projet_modularite/#principe-des-incertitudes-de-type-a","title":"Principe des incertitudes de type A","text":"<p>Lorsque l'on fait une mesure en physique, il y a toujours une incertitude li\u00e9e \u00e0 l'appareil utilis\u00e9 ou \u00e0 la pr\u00e9cision de la manipulation de l'op\u00e9rateur. Il existe aussi une inceritude al\u00e9atoire, qui fait que si on rep\u00e8te la mesure un grand nombre de fois, on ne trouve pas toujours exactement la m\u00eame valeur. Les incertitudes de types A sont ces derni\u00e8res. On peut dire \u00e0 l'aide d'une s\u00e9rie de mesures que la valeur vraie est comprise dans un intervalle que l'on d\u00e9termine gr\u00e2ce \u00e0 des calculs sur la s\u00e9rie de mesures.  </p> <p>Incertitude  Pour calculer l'incertitude, il faut d\u00e9j\u00e0 calculer l'\u00e9cart type, le multiplier par un coeficient d'\u00e9largissement et diviser par la racine carr\u00e9 du nombre de mesures.  </p> <p>Coefficient d'\u00e9largissement Un intervalle de confiance \u00e0 95% signifie que l'intervalle que l'on va calculer, contiendra \u00e0 coup s\u00fbr 95% des mesures. Ce coefficient k, d\u00e9pend du nombre de mesures et de l'intervalle de confiance.  Par exemple, pour un intervalle de confiance de 95% (le plus couramment utilis\u00e9) avec 9 mesures r\u00e9alis\u00e9es, k vaudra 2,31. </p> <p>Intervalle L'incertitude U trouv\u00e9e par le calcul nous permet de dire que 95% des mesures se situent dans l'intervalle [moyenne-U ; moyenne+U]. L'objectif de ce projet est de cr\u00e9er un module permettant de calculer cet intervalle \u00e0 partir d'une s\u00e9rie de mesures.</p> <p>Un exemple</p> <p>On mesure, dans les m\u00eames conditions plusieurs fois la m\u00eame masse d'un \u00e9chantillon et on trouve : 2,45g ; 2,34g ; 2,57g et 2,18g. La moyenne de ces mesures est de 2,39g et l'\u00e9cart type est de  0,14361g. L'\u00e9cart type correspond \u00e0 la moyenne des \u00e9carts \u00e0 la moyenne. c'est-\u00e0-dire que plus les mesures seront \u00e9loign\u00e9es de la moyenne plus l'\u00e9cart type sera grand.  On dispose de 4 mesures, donc pour un intervalle de confiance de 95% on a k = 3,18 (on aurait eu 5,84 pour un intervale de confiance de 98%).  En appliquant la formule ci-dessus on trouve une incertitude de :   </p> \\[Um= \\dfrac{3.18 \\times 0.14361}{\\sqrt{4}} = 0.228 g\\] <p>C'est \u00e0 dire que la valeur vraie est inclue, \u00e0 95%, dans l'intervalle 2.16g (2,39-0,23) et 2.62g (2,39+0,23). 0,23g est l'incertitude absolue sur la mesure.    </p> \\[Urel= \\dfrac{0,23 \\times 100}{2,39}\\] <p>Elle repr\u00e9sente 9,6% de la moyenne. 9,6 % est appel\u00e9e incertitude relative. </p>"},{"location":"Programmation/projet_modularite/#fonctions-contenues-dans-le-module","title":"Fonctions contenues dans le module.","text":"<p>Dans une biblioth\u00e8que nomm\u00e9e <code>typeA.py</code> contenu dans le dossier <code>\u00ecncertitude</code> on devra trouver les fonctions suivantes :    </p> <p>fonction <code>moyenne()</code> Cette fonction prend une liste de mesures en param\u00e8tre et retourne la moyenne des valeurs. </p> <p>DIY</p> <p>Ne pas importer de modules de calcul de moyenne ou autre, vous devez l'impl\u00e9menter vous-m\u00eame. La seule tol\u00e9rance sera pour la fonction <code>sqrt</code> mais qui peut \u00eatre remplac\u00e9 par une puissance 0,5.</p> <pre><code>&gt;&gt;&gt; moyenne([4.15,4.05,4.1,3.7,3.95,4.05,4.1,3.85,3.8,4.05,3.55,4.15])\n3.9583333333333326\n</code></pre> <p>fonction <code>ecart_type()</code> </p> <p> La formule de l'\u00e9cart type est donn\u00e9e ci-contre. Cette fonction doit prendre en param\u00e8tre une liste de mesures et renvoyer la valeur de l'\u00e9cart type.  </p> <pre><code>&gt;&gt;&gt; ecart_type([4.15,4.05,4.1,3.7,3.95,4.05,4.1,3.85,3.8,4.05,3.55,4.15])\n0.18465433171800283\n</code></pre> <p>fonction <code>nb_mesures()</code> </p> <p>Cette fonction prend en param\u00e8tre une liste de mesures et renvoie le nombre de mesures dans la liste.  <pre><code>&gt;&gt;&gt; nb_mesures([4.15,4.05,4.1,3.7,3.95,4.05,4.1,3.85,3.8,4.05,3.55,4.15])\n12\n</code></pre></p> <p>fonction <code>valeur_plus_proche(valeur,Tableau):</code> Lorsque l'on regarde le tableau des coefficients d'\u00e9largissement, on peut voir que toutes les quantit\u00e9s de mesures n'y figurent pas. il y a trop peu de diff\u00e9rence avec les valeurs donn\u00e9es pour que cela soit significatif. On cherchera donc le nombre de mesures le plus proche que celui qu'on poss\u00e8de. Cette fonction prend en param\u00e8tre une valeur et un tableau, et renvoie la valeur du tableau la plus proche de la valeur <code>valeur</code>. En cas d'\u00e9galit\u00e9 pour deux valeurs on retournera la premi\u00e8re rencontr\u00e9e.   <pre><code>&gt;&gt;&gt; valeur_plus_proche(20,[2,3,4,5])\n5\n&gt;&gt;&gt; valeur_plus_proche(7,[2,4,6,8])\n6\n&gt;&gt;&gt; valeur_plus_proche(3,[2,3,4,5])\n3\n</code></pre></p> <p>fonction <code>incertitude()</code> Cette fonction utilisera les autres pour calculer l'incertitude telle qu'elle est expliqu\u00e9 plus haut. Elle prend en param\u00e8tre la liste de mesures et un bool\u00e9en <code>confiance</code> qui par d\u00e9faut vaudra False ce qui signifie que l'on se place dans un intervalle de confiance de 95%. Si on ex\u00e9cute la fonction avec <code>confiance=True</code> on aura un intervalle de confiance de 98%. Cette fonction devra retourner la valeur de l'incertitude calcul\u00e9e.</p> <pre><code>&gt;&gt;&gt; incertitude([4.15,4.05,4.1,3.7,3.95,4.05,4.1,3.85,3.8,4.05,3.55,4.15])\n0.11727125093686133\n&gt;&gt;&gt; incertitude([4.15,4.05,4.1,3.7,3.95,4.05,4.1,3.85,3.8,4.05,3.55,4.15],True)\n0.16577890473347215\n</code></pre> <p>fonction <code>absolue(relative,mesure)</code> Elle permet de passer de l'incertitude relative de la mesure \u00e0 l'incertitude absolue. <pre><code>&gt;&gt;&gt; absolue(20,4.56)\n0.9119999999999999\n#une inertitude de 20% sur une mesure de 4.56V correspond \u00e0 une incertitude de 0,91V.\n</code></pre></p> <p>fonction <code>relative(absolue,mesure)</code> Elle permet de passer de l'incertitude absolue de la mesure \u00e0 l'incertitude relative. <pre><code>&gt;&gt;&gt; relative(0.9,4.56)\n19.73684210526316\n#une inertitude de 0.9V sur une mesure de 4.56V correspond \u00e0 une incertitude de 19,7%.\n</code></pre></p> <p>Quelques aides pr\u00e9cieuses</p> <p>valeurs de k (1ere ligne contient le nombre de mesures, les deuxi\u00e8me et troisi\u00e8me lignes les valeurs de k pour 95% et 98%) : <pre><code>#Tableau regroupant les valeurs de k\ncoeff_elargissement=[[2,3,4,5,6,7,8,9,10,12,14,16,18,20],\n                          [12.7,4.3,3.18,2.78,2.57,2.45,2.37,2.31,2.26,2.20,2.16,2.13,2.11,2.09],\n                          [63.7,9.93,5.84,4.60,4.03,3.71,3.50,3.36,3.25,3.11,3.01,2.95,2.90,2.86]]\n</code></pre> Comment fixer une valeur de param\u00e8tre par d\u00e9faut : <pre><code>def incertitude (Liste, confiance=False):\n    pass\n# si on ex\u00e9cute la fonction sans pr\u00e9ciser la valeur de confiance elle vaudra False;\nincertitude(L)\n#ou si on ne veut pas de la valeur par d\u00e9faut\nincertitude(L,True)\n</code></pre></p>"},{"location":"Programmation/projet_modularite/#tester-votre-programme","title":"Tester votre programme","text":"<p>Pour ne pas d\u00e9naturer votre code, vous pouvez cr\u00e9er un fichier <code>tests.py</code> qui contiendra tous les tests que vous avez fait pour tester toutes les situations de vos fonctions. Vous pouvez aussi ajouter des doctest et ou des assertions dans vos fonctions. Cela permet de s'y retrouver plus facilement et d'organiser son travail. Cela permet aussi \u00e0 la personne qui utilise (ndlr : corrige) votre travail de gagner du temps et de la lisibilit\u00e9. Vous structurerez votre code comme un module en cr\u00e9ant le fichier <code>__init__</code> et en l'appelant dans un programme principal, comme un module normal. Vous rendrez donc un dossier (zipp\u00e9) contenant le fichier principal, le fichier nomm\u00e9 <code>typeA.py</code> \u00e9ventuellement <code>typeB.py</code> et si il existe le fichier de tests. </p>"},{"location":"Programmation/projet_modularite/#bonus-calcul-des-incertitudes-de-type-b","title":"Bonus : calcul des incertitudes de type B","text":"<p>Les incertitudes de type B sont des incertitudes issues d'une mesure unique. Elles sont calcul\u00e9es d'une mani\u00e8re particuli\u00e8re en fonction de la situation.</p> <p>Cas de la lecture double graduation Lorsqu'on lit une graduation \u00e0 l'aide d'une r\u00e8gle l'erreur peut venir de la lecture de la graduation mais aussi du positionnement du z\u00e9ro. On a donc plus de chance de faire une mesure impr\u00e9cise. L'incertitude se calcule ainsi :  </p> \\[U= \\dfrac{2 \\times Unit\u00e9DeGraduation}{\\sqrt{6}}\\] <pre><code>#exemple pour une r\u00e8gle gradu\u00e9e en mm l'incertitude est de 0,81mm\n&gt;&gt;&gt; double_lecture(1)\n0.8164965809277261\n</code></pre> <p>Cas de la lecture simple graduation Une lecture \u00e0 simple graduation serait celle d'un barom\u00e8tre \u00e0 aiguille ou d'un thermom\u00e8tre analogique. L'utilisation d'une burette en est aussi un bon exemple. Voici comment se calcule l'incertitude :  </p> \\[U= \\dfrac{2 \\times Unit\u00e9DeGraduation}{\\sqrt{12}}\\] <p><pre><code>#exemple pour un thermom\u00e8tre avec une graduation pour 1\u00b0C l'incertitude est de 1,41\u00b0C\n&gt;&gt;&gt; simple_lecture(1)\n1.414213562373095\n</code></pre> Cas d'un appareil num\u00e9rique Le constructeur d'un appareil donne au minimum la tol\u00e9rance de la mesure. C'est le pourcentage d'erreur sur la mesure. Un appareil num\u00e9rique poss\u00e8de \u00e9galement une incertitude li\u00e9e au dernier chiffre. On l'appelle le digit. Pour une mesure donnant 4,586V le dernier digit sera la plus petite unit\u00e9 mesur\u00e9e soit 0,001V. Le pourcentage de la mesure correspondant \u00e0 celui de la tol\u00e9rance donn\u00e9e. Par exemple une mesure de 4,6V avec une tol\u00e9rence de 5%, le pourcentage sera de 5% de 4,6 soit 0,23.  </p> \\[U= \\dfrac{2 \\times PourcentageDeLaMesure + 2 \\times digit}{\\sqrt{3}}\\] <pre><code>exemple avec une mesure de 4.56V avec une tol\u00e9rance de 12% et une incertitude de 0,01digit.\n&gt;&gt;&gt; appareil_numerique(0.01,12,4.56)\n0.6549461453687115\n</code></pre> <p>Cas d'un appareil quelconque On calculera l'incertitude par la formule :  </p> \\[U= \\dfrac{PourcentageDeLaMesure}{\\sqrt{3}}\\] <p><pre><code>exemple avec un appareil quelconque d'une tol\u00e9rance de 12% pour une mesure de 4,56V\n&gt;&gt;&gt; tolerance_donnee(12,4.56)\n0.6318521346011265\n</code></pre> Vous devez cr\u00e9er le fichier <code>typeB.py</code> contenant les fonctions <code>double_lecture(graduation)</code>, <code>simple_lecture(graduation)</code>, <code>tolerance_donnee(tolerance,mesure)</code> pour un appareil quelconque, et <code>appareil_numerique(digit,tolerance,mesure)</code> . Il est important que les param\u00e8tres <code>digit</code> et <code>graduation</code> soient renseign\u00e9s dans la m\u00eame unit\u00e9 que la mesure. Cette information pourra \u00eatre donn\u00e9e \u00e0 l'utilsation de la fonciton et/ou dans la documentation.</p> <p>Vous cr\u00e9erez ensuite le module <code>incertitudes</code> contenant les fichiers <code>typeA.py</code> et <code>typeB.py</code> qui pourront \u00eatre utilis\u00e9s comme un module.</p> <p> Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021 </p>"},{"location":"Programmation/projet_paradigme/","title":"Projet : construire un archipel \u00e0 moindre co\u00fbt.","text":""},{"location":"Programmation/projet_paradigme/#le-probleme","title":"Le probl\u00e8me","text":""},{"location":"Programmation/projet_paradigme/#la-situation","title":"La situation","text":"<p>Un certain nombre d'\u00eeles isol\u00e9es souhaient construire des ponts pour relier toutes les \u00eeles par voie terrestre. L'objectif est de pouvoir passer d'une \u00eele \u00e0 l'autre sans prendre le bateau. Nous allons donc \u00e9tudier le cout minimal de liaison des \u00eeles. Les 5 iles de l'archipel sont num\u00e9rot\u00e9es de 0 \u00e0 4 et les co\u00fbts de construction des ponts sont les suivants :</p> ile 0 ile 1 ile 2 ile 3 ile 4 ile 0 inf 10 40 11 18 ile 1 10 inf 12 15 inf ile 2 40 12 inf 14 20 ile 3 11 15 14 inf 15 ile 4 18 inf 20 15 inf <p>La notation <code>inf</code> est utilis\u00e9e lorsque qla construction du pont n'est pas possible.</p> <p></p> <p>Nous allons donc cr\u00e9er des il\u00f4ts au fur et \u00e0 mesure en reliant tout d'abord deux iles ensemble, puis un il\u00f4t \u00e0 une autre \u00eele et ainsi de suite en se posant la question du co\u00fbt le plus faible \u00e0 chauqe \u00e9tape.  </p> <p> Une fois des ponts construits nous obtenons des \u00eelots :   Dans la situation ci-dessus par exemple, il y a 4 possibilit\u00e9s de relier les ilots 1 et 2. On peut cr\u00e9er un pont entre 0 et 1, entre 0 et 3, entre 3 et 4 ou entre 1 et 4. Si on regarde le tableau des co^ts, c'est le pont entre  0 et 1 qui sera choisi. </p> <p>Et ainsi de suite jusqu'\u00e0 ce que toutes les \u00eeles soient reli\u00e9es : </p>"},{"location":"Programmation/projet_paradigme/#les-regles-de-limplementaion","title":"Les r\u00e8gles de l'impl\u00e9mentaion","text":"<p>Les \u00eeles seront repr\u00e9sent\u00e9es par des listes contenant le num\u00e9ro de l'\u00eele. Par exemple au d\u00e9part, lorsque les \u00eeles sont isol\u00e9es : <pre><code>&gt;&gt;&gt; [[0], [1], [2], [3], [4]]\n</code></pre> Puis, si l'on suit l'\u00e9volution des exemples donn\u00e9s, la liste \u00e9volue :  <pre><code>&gt;&gt;&gt; [[0, 4], [1, 3], [2]]\n&gt;&gt;&gt; [[0, 1, 3, 4], [2]]\n&gt;&gt;&gt; [[0, 1, 2, 3, 4]]\n</code></pre> jusqu'\u00e0 ce que la liste des \u00eelots isol\u00e9s ne contienne plus qu'un seul \u00e9l\u00e9ment.</p> <p>les ponts seront repr\u00e9sent\u00e9s par une liste de tuples repr\u00e9sentant les iles \u00e0 relier : <pre><code>&gt;&gt;&gt;  [(0, 1), (0, 4), (1, 3), (2, 3)]\n</code></pre></p> <p>Remarque</p> <p>Les ponts utlis\u00e9s dans l'exemple ne sont pas ceux de la solution optimale.</p>"},{"location":"Programmation/projet_paradigme/#programmation-fonctionnelle","title":"Programmation fonctionnelle","text":"<p>On se rappellera ici que les fonctions ne doivent pas modifier de variables globales, ce qui necessitera de passer un peu plus d'arguments. Nous nous autoriserons cependant l'utilisation de boucles.</p>"},{"location":"Programmation/projet_paradigme/#la-fonction-construire_un_pontilot_1ilot_2liste_ilotsile1ile2ponts","title":"La fonction <code>construire_un_pont(ilot_1,ilot_2,liste_ilots,ile1,ile2,ponts)</code>","text":"<p>Cette fonction prend en param\u00e8tre deux \u00eelots et deux \u00eeles entre lesquelles on doit construire le pont. Il n'est pas question ici de choisir les \u00eeles cela aura \u00e9t\u00e9 fait en amont. <code>ile1</code> appartient \u00e0 l'<code>ilot_1</code> et <code>ile2</code> appartient \u00e0 <code>ilot_2</code>. ces \u00eeles ont \u00e9t\u00e9 choisie car c'est le pont le moins cher pour reli\u00e9 les deux \u00eelots d'apr\u00e8s le tableaux <code>couts</code>. Cette fonction aura donc pour but de modifier la liste <code>liste_ilots</code>pour fusionner les <code>ilot_1</code> et <code>ilot_2</code>et ajouter le tuple <code>(ile1,ile2)</code> dans la liste des ponts. Elle retourne la <code>liste_ilots</code> et <code>ponts</code>. Par exemple :  <pre><code>construire_un_pont([2,3,4],[1],[[2,3,4], [1], [0]],3,1,[(2,3),(3,4)])\n#la liste des \u00eelots devient\n[[1,2,3,4], [0]]\n#la liste des ponts devient\n[(2,3),(3,4),(3,1)]\n</code></pre></p> <pre><code>def construire_pont(ilot_1,ilot_2,liste_ilots,ile1,ile2,ponts):\n    ...\n    return (liste_ilots,ponts)\n</code></pre>"},{"location":"Programmation/projet_paradigme/#la-fonction-trouver_pontliste_ilotscoutsponts","title":"La fonction <code>trouver_pont(liste_ilots,couts,ponts)</code>","text":"<p>Cette fonction a pour but de trouver le pont id\u00e9al entre deux \u00eelots. Elle doit parcourir tous els \u00eelots afin de trouver le pont le moins cher entre deux \u00eeots. Imaginons qu'on ait les \u00eelots <code>[0,1], [2,3] et [4]</code>. Le but est de trouver le pont le moins cher pour relier deux \u00eelots quelqu'ils soient. Il faudra donc pour chaque ile de chaque ilot comparer les co\u00fbts et s\u00e9lectionner les deux \u00eeles entre lesquelles on d\u00e9cidera de construire le pont. Ici, nous allons donc comparer les co\u00fbts des ponts <code>(0,2),(0,3),(1,2),(1,3),(0,4),(1,4),(2,4) et (3,4)</code>. Le pont le moins cher est le pont <code>(0,3)</code> on ex\u00e9cute donc la fonction <code>contruire_pont</code> entre les \u00eeles 0 et 3 ce qui aura pour effet de relier le premier et le deuxieme \u00eelot (mais \u00e7a c'est le job de la fonction <code>construire_pont</code>).    </p> <pre><code>def trouver_pont(liste_ilots,couts,ponts):\n    \"\"\"\n    ENTREES : liste_ilots (type list) est la liste des \u00eeles ou \u00eelots encore isol\u00e9s.\n    au d\u00e9but liste_ilots=[[0], [1], [2], [3], [4]] et \u00e0 la fin liste_ilots=[[0, 1, 2, 3, 4]]\n    couts est un tableau des c\u00f4uts des ponts entre les \u00eeles.\n    ponts est une liste de tuples contenant les ponts d\u00e9j\u00e0 construits.\n    SORTIE : Execution de la fonction qui CONSTRUIT le pont entre les \u00eeles s\u00e9lectionn\u00e9es\n    cette fonction cherche le pont le moins cher pour relier  ilot_1 et ilot_2 en fonction des \u00eeles dont\n    ils sont compos\u00e9s.\"\"\"\n    ...\n    return construire_pont(ilot_1,ilot_2,liste_ilots,ile1_min,ile2_min,ponts)\n</code></pre>"},{"location":"Programmation/projet_paradigme/#la-fonction-equiper_archipelncouts","title":"La fonction <code>equiper_archipel(n,couts)</code>","text":"<p>Cette fonction cr\u00e9e l'archipel (ici on cr\u00e9era une liste de 5 \u00eeles) et initialiser la liste des ponts. Elle va se charger de parourir les \u00eelots et de cr\u00e9er les ponts jusqu'\u00e0 ce que l'archipel ne contienne plus qu'un seul bloc. Elle renvoie la liste des ponts \u00e0 construire. <pre><code>def equiper_archipel(n,couts):\n    liste_ilots=[[i] for i in range(n)]\n    ponts=[]\n    ...\n    return ponts\n</code></pre></p>"},{"location":"Programmation/projet_paradigme/#le-programme","title":"Le programme","text":"<p>Il faudra malgr\u00e9 tout ici avoir une variable globale, celle des co\u00fbts. on pourrait initialiser le tout dans une fonction main() qui serait la seule \u00e0 \u00eatre ex\u00e9cut\u00e9e mais comme nous ne somme qu'\u00e0 la moiti\u00e9 du projet, on va simplifier. <pre><code>if __name__=='__main__':\n    inf = float('inf')\n    couts = [[inf, 10, 40, 11, 18],\n        [10, inf, 12, 15, inf],\n        [40, 12, inf, 14, 20],\n        [11, 15, 14, inf, 15],\n        [18, inf, 20, 15, inf]]\n\n    print(equiper_archipel(5,couts))\n</code></pre> Ces quelques lignes doivent permettre d'\u00e9x\u00e9cuter le programme.  </p>"},{"location":"Programmation/projet_paradigme/#programmation-orientee-objet","title":"Programmation Orient\u00e9e Objet","text":"<p>Nous allons cr\u00e9er deux classes. Une classe <code>ile</code> et une classe <code>construireArchipel</code>. </p>"},{"location":"Programmation/projet_paradigme/#la-classe-ile","title":"La classe <code>ile</code>","text":"<p>La classe <code>ile</code> permettra de cr\u00e9er les \u00eeles et les \u00eelots une fois modifi\u00e9s, et la la classe <code>construireArchipel</code> contiendra la liste des \u00eeles et \u00eelots, des ponts et se chargera de trouver le pont id\u00e9al, de le construire et ce jusqu'\u00e0 ce que toutes les \u00eeles soient reli\u00e9es. Au d\u00e9part, une \u00eele ne sera compos\u00e9e que d'une \u00eele (par exemple [1] est un \u00eelot ne contenant que l'\u00eele 1), mais au fur et \u00e0 mesure des fusions des \u00eelots, l'attribut <code>ile</code> de la classe <code>ile</code> peut en conenir plusieurs.  </p> <p><pre><code>class ile:\n    def __init__(self,numero):\n        self.ile=...\n\n    def get_ile(self):\n        ...\n    def __repr__(self):\n        ...\n</code></pre> On cr\u00e9era une fonction pour r\u00e9cup\u00e9rer la liste des \u00eeles composant l'\u00eelot et une fonction <code>__repr__(self)</code> afin de visualier la liste des \u00eeles composant les \u00eelots pou d\u00e9bogger le code.  </p>"},{"location":"Programmation/projet_paradigme/#la-classe-construirearchipel","title":"La classe <code>construireArchipel</code>","text":"<p>Les fonctions de cette classe font la m\u00eame chose que leurs homologies dans la partie programmation fonctionnelle. Cela dit, si la structure peut etre similaire, le fait de changer de paradigme vous obligera \u00e0 en modifie les param\u00e8tres, les variables et les retours de fonctions. Soyez vigilants sur les copier-coller. <pre><code>class construireArchipel:\n    def __init__(self,n):\n        #n est le nombre d'\u00eeles que l'on veut cr\u00e9er au d\u00e9part\n        self.ilots=...\n        self.ponts=...\n\n    def relier_2_ilots(self,ilot1,ilot2,ile1,ile2):\n        \"\"\"ilot1 et ilot2 sont des objets de la classe ile. cette fonction doit permettre de fusionner l'ilot2 sur l'ilot1 \n        (et donc de supprimer le 2 puis de cr\u00e9er le pont entre l'ile1 et l'ile2 (tuple (ile1,ile2) dans les ponts.\"\"\"\n        pass\n\n\n\n    def trouver_pont(self,couts):\n        #trouve le pont le moins cher parmis les ponts possibles entre les ilots existants\n        pass\n\n    def equiper_archipel(self,couts):\n        #recherche les ponts les moins chers pour construire l'archipel\n        pass\n\n\n    def get_ilots(self):\n        pass\n\n    def get_ponts(self):\n        pass\n\n   def __repr__(self):\n        #permet d'utiliser un print pour visualiser les ilots et les ponts\n        res = []\n        for li in self.ilots:\n            res.append((li.get_ile()))\n        res.append(self.get_ponts())\n        return str(res)\n</code></pre></p>"},{"location":"Programmation/projet_paradigme/#le-code-principal","title":"Le code principal","text":"<pre><code>if __name__=='__main__':\n    inf = float('inf')\n    couts = [[inf, 10, 40, 11, 18],\n        [10, inf, 12, 15, inf],\n        [40, 12, inf, 14, 20],\n        [11, 15, 14, inf, 15],\n        [18, inf, 20, 15, inf]]\n    archipel=construireArchipel(5)\n    archipel.equiper_archipel(couts)\n    print(archipel)\n</code></pre>"},{"location":"Programmation/projet_paradigme/#a-rendre","title":"A rendre","text":"<p>Vous devez rendre deux fichiers comment\u00e9s dont le r\u00e9sultat de la situation doit \u00eatre identique.</p>"},{"location":"Programmation/recursivite/","title":"La r\u00e9cursivit\u00e9","text":""},{"location":"Programmation/recursivite/#quest-ce-que-la-recursivite","title":"Qu'est ce que la r\u00e9cursivit\u00e9?","text":"<p>Indispensable en informatique, la r\u00e9cursivit\u00e9 permet de simplifier beaucoup de fonctions.  </p> <p>D\u00e9finition Une fonction r\u00e9cursive est une fonction qui s'appelle elle-m\u00eame.</p>"},{"location":"Programmation/recursivite/#calcul-de-factoriel-n","title":"Calcul de factoriel n!","text":"<p>La fonction factorielle en math\u00e9matiques permet de calculer le produit de tous les entiers pr\u00e9c\u00e9dant le nombre courant. n ! = n x (n-1)x(n-2) x .. x 2 x 1.  </p> <p>Par exemple</p> <p>3 ! = 3 x 2 x 1 = 6 8 ! = 8 x 7 x 6 x 5 x 4 x 3 x 2 x 1 = 40320  </p> <p>Par convention</p> <p>On prendra 0! = 1 </p>"},{"location":"Programmation/recursivite/#creer-la-fonction-factorielle","title":"Cr\u00e9er la fonction factorielle","text":"<p>Pour tester les codes, on peut utiliser un bac \u00e0 sable. c'est une interface o\u00f9 l'on peut faire des tests rapides sans sauvegarder. Cela \u00e9vite la multiplication des fichiers <code>test.py</code> ou <code>tests.py</code> sur votre machine. Vous pouvez utiliser celle-ci par exemple :  Tester ceci : Console Basthon mais aussi : Python tutor  qui a le gros avantage de d\u00e9tailler ligne par ligne l'\u00e9volutionn du code et ainsi compendre ce qu'il se passe.  </p> <p>Tester ceci :  <pre><code>def factorielle(n):\n    i=n\n    res=1\n    while i!=0:\n        res=res*i\n        i=i-1\n    return res\n\nprint(factorielle(1))\nprint(factorielle(8))\n</code></pre> On peut en r\u00e9alit\u00e9 d\u00e9couper la fonction factorielle :</p> <p>n ! = n x (n-1) ! et ce quelque soit la valeur de n. Je peux donc calculer (n-1) ! en faisant (n-1) x (n-2) !  </p> <p>Nous allons donc faire appel \u00e0 la fonction <code>factorielle</code> pour ex\u00e9cuter la fonction <code>factorielle</code>. Tester ceci :  <pre><code>def factorielle_recursif(n):\n    if n==0:\n      return 1 #condition d'arr\u00eat pour \u00e9viter la boucle infinie\n    else:\n      return n*factorielle_recursif(n-1)\n\nprint(factorielle_recursif(1))\nprint(factorielle_recursif(8))\n</code></pre></p> <p>Condition d'arr\u00eat</p> <p>Il est imp\u00e9ratif d'avoir une condition d'arr\u00eat de la boucle, pour \u00e9viter la boucle infinie. Ici il s'agit de remonter les entiers jusqu'\u00e0 ce que l'on arrive \u00e0 0 dont on conna\u00eet la valeur de la fonction factorielle. Toutes fonction r\u00e9cursive doit poss\u00e9der une condition d'arr\u00eat.  </p> <p>Oubli du <code>return</code></p> <p>Il est fr\u00e9quent lorsqu'on d\u00e9bute avec cette pratique d'ex\u00e9cuter la fonction en omettant le mot cl\u00e9 <code>return</code>. La fonction ne renverra rien sans forc\u00e9ment donner un message d'erreur. Alors si cela ne \"marche pas\" c'est la premi\u00e8re chose \u00e0 v\u00e9rifier.</p> <p>Application</p> <p>Ouvrir une console basthon. Ecrire une fonction qui prend une liste d'entiers en param\u00e8tre et en retourne la somme en utilisant la r\u00e9cursivit\u00e9.</p> <p>Que fait-elle</p> <p><pre><code>    fonction fonction(n)\n        SI n=0 ALORS\n            retourne\n        FINSI\n        fonction(n//2)\n        Ecrire(n%2)\n</code></pre> Coder cette fonction en python et dire ce qu'elle fait.</p> <p> Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021 </p>"},{"location":"Structure/POO/","title":"Programmation Orient\u00e9e Objet (POO)","text":"<p>Tous les bouts de codes sont \u00e0 tester dans un progrmme python pour se rendre compte du r\u00e9sultat</p> <p>La programmation orient\u00e9e objet est une m\u00e9thode de programmation qui consiste \u00e0 cr\u00e9er des objets qui auront des caract\u00e9ristiques et des m\u00e9thodes bien sp\u00e9cifiques \u00e0 ce type d'objet. Par exemple, les cha\u00eene de caract\u00e8res en python sont des objets. On peut en cr\u00e9er une, la supprimer, acc\u00e9der \u00e0 sa longueur, ajouter des \u00e9l\u00e9ments, compter des occurences, ... Le type str en python est en r\u00e9alit\u00e9 un objet avec ses propres caract\u00e9ristiques et m\u00e9thodes.  </p> <p>Nous allons prendre un exemple et le d\u00e9velopper pas \u00e0 pas.  </p> <p>Dans cet exemple, nous allons utilis\u00e9 la gestion d'un parc automobile. Chaque voiture du parc aura les caract\u00e9ristiques suivantes : marque, mod\u00e8le, couleur, ann\u00e9e, propri\u00e9taire, prix neuf. On pourra modifier ces caract\u00e9ristiques en vendant ou repeignant et d\u00e9terminer sa c\u00f4te en fonction de l'ann\u00e9e.  </p>"},{"location":"Structure/POO/#creation-de-la-classe","title":"Cr\u00e9ation de la classe","text":"<p>La classe est le moule qui va nous permettre de abriquer des objets ayant acc\u00e8s aux m\u00eames caract\u00e9ristiques et m\u00e9thodes. <pre><code>class Voiture:\n    marque=\"Peugeot\"\n#on cr\u00e9\u00e9 un moule appel\u00e9 voiture dont l'attribut marque vaut \"Peugeot\"\n#On cr\u00e9e des voitures \u00e0 partir ce moule\nvoiture_de_papa=Voiture()\nvoiture_de_maman=Voiture()\nvoiture_de_papa.marque #affiche la marque renseign\u00e9e lors de la cr\u00e9ation de la voiture (ici par d\u00e9fault Peugeot).\n</code></pre> On peut modifier la valeur de l'attribut : <pre><code>voiture_de_maman.marque=\"citroen\"\n</code></pre></p> <p>Vocabulaire</p> <p><code>voiture_de_maman</code> et <code>voiture_de_papa</code> sont des instances de la classe <code>Voiture</code>. Ce sont des obets fabriqu\u00e9s \u00e0 partir du moule <code>Voiture</code>.</p>"},{"location":"Structure/POO/#methode-et-self","title":"M\u00e9thode et <code>self</code>","text":"<p>Une m\u00e9thode prend toujours en premier param\u00e8tre l'objet lui-m\u00eame par l'interm\u00e9diare de l'argument <code>self</code>. L'appel de la m\u00e9thode se fait \u00e9galement avec la notation : <code>nom_instance.methode(...)</code></p> <pre><code>class Voiture:\n    marque=\"Peugeot\"\n    def ajoute_modele(self,modele):\n        self.marque=self.marque+ ' ' + modele\n        return self.marque\nvoiture_de_maman=Voiture()\nvoiture_de_maman.ajoute_modele(\"c4\")\nvoiture_de_maman.marque\n</code></pre>"},{"location":"Structure/POO/#constructeur","title":"Constructeur","text":"<p>Le constructeur <code>__init__</code> permet de cr\u00e9er des objets dont les attributs seront diff\u00e9rents. On va prendre un exemple : <pre><code>class Personne:\n    def __init__(self, nom, age):\n        self.nom = nom\n        self.age = age\n\njim = Personne(\"Jim\", 27)\n\nprint(jim.nom)\nprint(jim.age) \n</code></pre></p> <p>Remarque</p> <p>Pour afficher la totalit\u00e9 des attributs de la classe en une seule fois, on serai tent\u00e9 de faire <code>print(jim)</code>. Mais le r\u00e9sultat n'est as concluant.</p> <p>La m\u00e9thode <code>print()</code> appelle une m\u00e9thode de classe appel\u00e9e <code>__repr__</code>. On va modifier cette m\u00e9thode pour que tout l'objet s'affiche.  <pre><code>class Personne:\n    def __init__(self, nom, age):\n        self.nom = nom\n        self.age = age\n    def __repr__(self):\n        return f\"{self.nom} est une Personne de {self.age} ans.\"\n\njohn = Personne(\"John\", 32)\n\nprint(john)\n</code></pre></p>"},{"location":"Structure/POO/#methodes-specifiques-a-lobjet","title":"M\u00e9thodes sp\u00e9cifiques \u00e0 l'objet","text":"<p>On peut cr\u00e9er des m\u00e9thodes dans la classes permettant par exemple de modifier certains attributs. Etudier le code suivant : <pre><code>class Personne:\n    def __init__(self, nom, annee):\n        self.nom = nom\n        self.annee = annee\n        self.age=None\n    def calculer_age(self,annee_courante):\n        self.age=annee_courante-self.annee\n        return f\"{self.nom} a {self.age} ans\"\n    def renommer(self,nouveau_nom):\n        self.nom=nouveau_nom\n    def __repr__(self):\n        return f\"{self.nom} est une Personne n\u00e9 en {self.annee}.\"\n\npierre = Personne(\"pierre\", 1985)\nprint(pierre)\npierre.renommer(\"paul\")\nprint(pierre.nom)\nprint(pierre.calculer_age(2021))\nprint(pierre.age)\n</code></pre> La m\u00e9thode <code>renommer()</code> permet de modifier la valeur de l'attribut <code>nom</code> de l'instance cr\u00e9\u00e9e. La m\u00e9thode <code>calculer_age</code> permet de mettre l'\u00e2ge \u00e0 jour. </p> <p>ann\u00e9e courante</p> <p>On pourrait m\u00eame faire appel au module <code>datetime</code> pour acc\u00e9der \u00e0 l'ann\u00e9e courante et mettre \u00e0 jour l'\u00e2ge automatiquement. <pre><code>import datetime\ndate=datetime.datetime.now()\nannee_courante=date.year\nprint(pierre.calculer_age(annee_courante))\n</code></pre></p>"},{"location":"Structure/POO/#getteurs-et-setters-les-bonnes-pratiques","title":"Getteurs et setters : les bonnes pratiques","text":"<p>En r\u00e9alit\u00e9, si l'on souhaite modifier les attributs : <code>get_nom_attribut</code>: pour le r\u00e9cup\u00e9rer. <code>set_nom_attribut</code>: pour le modifier. <pre><code>class Personne:\n    def __init__(self, nom, age):\n        self.nom = nom\n        self.age = age\n\n    def get_nom(self):\n        return self.nom\n\n    def set_nom(self, nom):\n        self.nom = nom\n\n    def get_age(self):\n        return self.age\n\n    def set_age(self, age):\n        self.age = age\n\n    def __repr__(self):\n        return f\"{self.nom} est une Personne de {self.age} ans.\"\n\njohn = Personne(\"John\", 32)\n\nprint(\"Au d\u00e9but\")\nprint(john)\n\nprint(\"Modification des attributs avec les setters\")\njohn.set_nom(\"Jean\")\njohn.set_age(12)\nprint(john)\n\nprint(\"R\u00e9cup\u00e9ration des attributs avec les getters\")\njohn.get_nom(), john.get_age()\n</code></pre></p>"},{"location":"Structure/POO/#a-retenir","title":"A retenir","text":"<p>La POO permet la fabrication d'objets issus d'un m\u00eame moule mais personnalisable en modifiant certaines caract\u00e9ristiques et d'adapter le programme \u00e0 chaque situation. Tout python est en fait encapsul\u00e9 dans des objets.</p>"},{"location":"Structure/POO/#vocabulaire","title":"vocabulaire","text":"<p>La classe : c'est le moule \u00e0 partir du quel on fabrique les objets. L'objet est une instance de la classe, un m\u00eame moule peut fabriquer plusieurs objets. Les attributs : caract\u00e9ristiques personnalisables des objets. Les m\u00e9thodes  sont des actions que l'on peut r\u00e9aliser sur les objets.  </p>"},{"location":"Structure/POO/#creer-une-classe","title":"Cr\u00e9er une classe","text":"<p>Sans consructeur <pre><code>class Sandwich:\n    sauce=\"blanche\"\n    pain=\"pita\"\n    legume=\"tomate\"\n    viande\"steack hach\u00e9\"\n</code></pre> Tous les objets cr\u00e9\u00e9s auront les m\u00eames attributs que l'on pourra modifier ensuite. On peut remplacer les valeurs par d\u00e9faut par None.</p> <p>Avec constructeur <pre><code>class Sandwich:\n    def __init__(self,sauce,viande,pain,legume):\n        self.sauce=sauce\n        self.pain=pain\n        self.viande=viande\n        self.legume=legume\n</code></pre> On donne aux objets des attributs pr\u00e9cis d\u00e8s la cr\u00e9ation A chaque utilisation de la m\u00e9thode self est remplac\u00e9 par le nom de l'instance.</p>"},{"location":"Structure/POO/#creer-une-instance-de-classe","title":"cr\u00e9er une instance de classe","text":"<p>Chaque sandwich cr\u00e9\u00e9 est une instance de la classe <code>sandwich</code>. <pre><code>vegie=Sandwich(\"blanche\",\"staeck de soja\",\"pita\",\"salade\")\n</code></pre></p> <p>Remarque</p> <p>Sans constructeur, on ne mettra pas d'arguments mais les valeurs des attributs seront celles d\u00e9finies par d\u00e9faut.</p> <p>Instance de classe</p> <p><code>Vegie</code> est une instance de la classe sandwich.</p>"},{"location":"Structure/POO/#creer-et-appeler-uen-methode","title":"Cr\u00e9er et appeler uen m\u00e9thode","text":"<p><pre><code>class Sandwich:\n    def __init__(self,sauce,viande,pain,legume):\n        self.sauce=sauce\n        self.pain=pain\n        self.viande=viande\n        self.legume=legume\n    def afficher(self):\n        L=[]\n        L.append(self.sauce)\n        L.append(self.pain)\n        L.append(self.viande)\n        L.append(self.legume)\n        return L\nvegie=Sandwich(\"blanche\",\"staeck de soja\",\"pita\",\"salade\")\n#on appelle la m\u00e9thode\nprint(vegie.afficher())\n</code></pre> Cet appel affiche : ['blanche', 'pita', 'steack de soja', 'salade']</p>"},{"location":"Structure/POO/#getteurs-et-setters","title":"Getteurs et setters","text":"<p>C'est la mani\u00e8re la plus \"propre\" d'acc\u00e9der et de modifier les attributs d'instance.  </p> <p><pre><code>class Sandwich:\n    def __init__(self,sauce,viande,pain,legume):\n        self.sauce=sauce\n        self.pain=pain\n        self.viande=viande\n        self.legume=legume\n    def get_pain(self):\n        return self.get_pain\n    def set_pain(self,pain):\n        #remplace la valeur pr\u00e9c\u00e9dente de l'attribut pain par celui pass\u00e9 en argument\n        self.pain=pain\n    def afficher(self):\n        L=[]\n        L.append(self.sauce)\n        L.append(self.pain)\n        L.append(self.viande)\n        L.append(self.legume)\n        return L\nvegie=Sandwich(\"blanche\",\"staeck de soja\",\"pita\",\"salade\")\nprint(vegie.get_pain())\nvegie.set_pain(\"galette\")\nprint(vegie.get_pain())\n</code></pre> Le premier appel affiche 'pita' le second 'galette'.</p> <p>r\u00e9capitulatif de la syntaxe</p> <p><pre><code>class MaClasse:  \n    attribut=\u2026\n</code></pre> Cr\u00e9er une instance de classe :  <pre><code>instance=MaClasse(args)\n</code></pre> Cr\u00e9er une m\u00e9thode : <pre><code>def methode(self,args):\nreturn \u2026\n</code></pre> Appeler une m\u00e9thode sur une instance :  <pre><code>objet.methode()\n</code></pre> Acc\u00e9der \u00e0 un attribut d'une instance : <pre><code>instance.attribut\n</code></pre> Constructeur : <pre><code>def __init__(self,arg1,arg2):\n    self.attribut1=arg1\n    self.attribut2=arg2\n</code></pre> Acc\u00e9der \u00e0 un attribut d'instance (getters) <pre><code>def get_attribut(self):\n    return self.attribut\ninstance.get_attribut()\n</code></pre> Modifier un attribut d'instance <pre><code>def set_attribut(self,arg):\n    self.attribut=arg\ninstance.set_attribut(arg)\n</code></pre></p>"},{"location":"Structure/arbres/","title":"Les arbres binaires","text":""},{"location":"Structure/arbres/#vocabulaire","title":"Vocabulaire","text":"<p>Un arbre est une structure permettant de r\u00e9pr\u00e9senter des relations en informatique.  </p> <p>Chaue \u00e9l\u00e9ment de l'arbre est app\u00e9l\u00e9 un noeud. Une feuille est un neoud n'ayant pas de descendant. la racine est le noeud de d\u00e9part, qui n'a pas d'acsendant. </p> <p>N\u0153uds descendants (ou fils) : n\u0153uds li\u00e9s \u00e0 un n\u0153ud ascendant en s'\u00e9loignant de la racine.</p>"},{"location":"Structure/arbres/#les-proprietes-dun-arbre","title":"Les propri\u00e9t\u00e9s d'un arbre","text":"<p>La Hauteur de l'arbre est le nombre d'arr\u00eates maximale entre la racine et les feuilles. La taille de l'arbre : nombre de n\u0153uds. La profondeur d'un n\u0153ud est le nombre d'arr\u00eates entre le n\u0153ud et la racine.</p> <p>exemple</p> <p>Dans l'exemple ci-dessus, la taille de l'arbre est de 10, la hauteur est de 3 et la profondeur du noeud 10 est 2. La racine est le noeud 2 en haut, 2, 10, 1, 11 et 4 sont des feuilles.</p>"},{"location":"Structure/arbres/#arbre-binaire","title":"Arbre binaire","text":"<p>Un arbre est g\u00e9n\u00e9ralement orient\u00e9 de la racine aux feuilles. Il est consid\u00e9r\u00e9 comme binaire lorsqu'un neud ne peut pas avoir plus de deux descendants.</p>"},{"location":"Structure/arbres/#exemples","title":"Exemples","text":"<p>arbre binaire</p> <p>Seul le deuxi\u00e8me est un arbre binaire</p>"},{"location":"Structure/graphes/","title":"Les graphes","text":""},{"location":"Structure/graphes/#activite-de-presentation","title":"Activit\u00e9 de pr\u00e9sentation","text":""},{"location":"Structure/graphes/#bilan","title":"Bilan","text":""},{"location":"Structure/graphes/#defintion","title":"D\u00e9fintion","text":"<p>Un graphe est la repr\u00e9sentation th\u00e9orique d'une situation r\u00e9elle mais abstraite.   </p> <p>Exemples</p> <p>Plan de m\u00e9tro r\u00e9seau routier r\u00e9seau d'amis ou d'influence sur les r\u00e9seaux sociaux ...</p>"},{"location":"Structure/graphes/#vocabulaire","title":"Vocabulaire","text":"<p> Les noeuds sont appel\u00e9s sommets, reli\u00e9s par des ar\u00eates. Les ar\u00eates sont aussi appel\u00e9es arcs si elles sont orient\u00e9es.</p> <p>Graphe non-orient\u00e9 : les ar\u00eates sont parcourues dans les deux sens. graphe orient\u00e9 : les arcs ne peuvent \u00eatre parcourus que dans un sens.     </p> <p>Graphe connexe : un graphe est connexe si on peut aller d'un sommet \u00e0 l'autre quel que soit le chemin emprunt\u00e9.   </p> <p>Graphe complet  un graphe est dit complet si chaque sommet est directement reli\u00e9 \u00e0 tous les autres.  </p> <p>voisins : Les voisins d'un sommet sont les sommets reli\u00e9s par une seule arr\u00eate. successeur :  les successeurs sont les voisins d'apr\u00e8s. pr\u00e9d\u00e9cesseurs : Les pr\u00e9d\u00e9cesseurs sont les voisins pr\u00e9c\u00e9dent.   </p>"},{"location":"Structure/graphes/#matrice-dadjacence","title":"matrice d'adjacence","text":"<p>  La matrice d'adjacence est un tableau \u00e0 double entr\u00e9e qui d\u00e9finit les liens entre les noeuds. Si le graphe est orient\u00e9, les colonnes sont les successeurs du noeud de la ligne courante. Si le graphe est non-orient\u00e9, la matrice est sym\u00e9trique et les informations sont donn\u00e9es en double (il faudra en tenir compte au moment de l'impl\u00e9mentation si l'on veut limiter la complexit\u00e9 de notre programme). </p>"},{"location":"Structure/graphes/#representer-en-python-la-matrice-dadjacence","title":"Repr\u00e9senter en python la matrice d'adjacence","text":"<p>On peut repr\u00e9senter la matrice en python avec diff\u00e9rentes structure, comme :</p> <ul> <li>la liste</li> </ul> <ul> <li>le dictionnaire</li> </ul> <ul> <li>l'instance de classe</li> </ul>"},{"location":"Structure/graphes/#exercices-sur-les-graphes","title":"Exercices sur les graphes","text":""},{"location":"Structure/graphes/#implementer-les-graphes-en-python","title":"Impl\u00e9menter les graphes en python","text":"<p>Se rendre sur Capytale et saisir le code d'activit\u00e9 24b4-33046.</p>"},{"location":"Structure/listes_piles_files/","title":"Listes, piles et files","text":""},{"location":"Structure/listes_piles_files/#les-listes-chainees","title":"Les listes cha\u00een\u00e9es","text":""},{"location":"Structure/listes_piles_files/#quest-ce-quune-liste-chainee","title":"Qu'est ce qu'une liste cha\u00een\u00e9e ?","text":"<p>Une liste cha\u00een\u00e9e est un objet dont chaque \u00e9l\u00e9ment contient deux \u00e9l\u00e9ments : le contenu et l'adresse de l'\u00e9l\u00e9ment suivant.</p> <p>Une liste cha\u00een\u00e9e est diff\u00e9rente d'un tableau dans le sens o\u00f9 les \u00e9l\u00e9ments de votre liste sont r\u00e9partis dans la m\u00e9moire et reli\u00e9s entre eux par des pointeurs.  Vous pouvez ajouter et enlever des \u00e9l\u00e9ments d'une liste cha\u00een\u00e9e \u00e0 n'importe quel endroit, \u00e0 n'importe quel instant, sans devoir recr\u00e9er la liste enti\u00e8re.</p>"},{"location":"Structure/listes_piles_files/#inserer-ou-supprimer-un-element-dans-une-liste","title":"Ins\u00e9rer ou supprimer un \u00e9l\u00e9ment dans une liste","text":"<p>Pour ins\u00e9rer ou supprimer un \u00e9l\u00e9ment dans une liste cha\u00een\u00e9e il suffit de modifier le pointeur des \u00e9l\u00e9ments autour.</p> <p>Quelques op\u00e9rations que l'on peut faire avec les listes cha\u00een\u00e9es :  </p> <ul> <li>Ajouter/retirer un \u00e9l\u00e9ment au d\u00e9but, \u00e0 la fin, \u00e0 l'int\u00e9rieur</li> <li>Concat\u00e9ner de deux listes</li> <li>Scinder une liste en deux</li> <li>Acc\u00e9der au n-i\u00e8me \u00e9l\u00e9ment</li> <li>Rechercher la pr\u00e9sence d'un \u00e9l\u00e9ment</li> </ul> <p>On les impl\u00e9mentera en python en utilisant des dictionnaires plus tard.</p> <p>Question</p> <p>A votre avis de quelle nature sont les listes en python.</p> Choisir la bonne r\u00e9ponse <ul> <li> <code>des tableaux</code></li> <li> <code>des listes cha\u00een\u00e9es</code></li> </ul> Solution <ul> <li>\u2705 <code>des tableaux</code></li> <li>\u274c <code>des listes cha\u00een\u00e9es</code></li> </ul> attention <p>Ne pas confondre la notion abstraite de liste cha\u00een\u00e9e en programmation et la liste en phyton.  En python quand on ins\u00e8re un \u00e9l\u00e9ment dans uns liste, il faut d\u00e9caler les index de tous les autres \u00e9l\u00e9ments.</p>"},{"location":"Structure/listes_piles_files/#les-piles","title":"Les piles","text":"<p>D\u00e9finition :</p> <p>La structure de pile est un cas particulier de liste cha\u00een\u00e9e dans lequel on acc\u00e8de uniquement au premier \u00e9l\u00e9ment de la liste : celui que l'on nomme le sommet de la pile. On repr\u00e9sente en g\u00e9n\u00e9ral cette structure sous forme verticale.</p> <p>On peut prendre pour exemple une pile d'assiettes : La derni\u00e8re assiette rang\u00e9e sera la premi\u00e8re que l'on ressortira. On parle parfois de pile LIFO (Last In First Out : dernier entr\u00e9, premier sorti). </p> <p>exemples d'utilisation courantes</p> <pre><code>Les piles sont extr\u00eamement utiles en informatique et vous les utilisez quotidiennement, parfois m\u00eame sans vous en rendre compte :\n\n- La fonction annuler (Ctrl-Z) de votre traitement de textes par exemple est une pile : Quand vous tapez Ctrl-Z, vous annulez la derni\u00e8re op\u00e9ration effectu\u00e9e. Quand vous faites une nouvelle op\u00e9ration, celle-ci est m\u00e9moris\u00e9e au sommet de la pile. Vous ne pouvez pas annuler l'avant derni\u00e8re op\u00e9ration sauf \u00e0 annuler la derni\u00e8re.  \n- Le bouton retour de votre navigateur internet fonctionne \u00e9galement \u00e0 l'aide d'une pile. Les pages web consult\u00e9es lors de votre navigation sur une page sont empil\u00e9es et le bouton retour permet d'acc\u00e9der \u00e0 la derni\u00e8re page pr\u00e9sente sur la pile.  \n- Certaines calculatrices fonctionnent \u00e0 l'aide d\u2019une pile pour stocker les arguments des op\u00e9rations : c'est le cas de beaucoup de calculatrices de la marque HP, dont la premi\u00e8re calculatrice scientifique ayant jamais \u00e9t\u00e9 produite : la HP 35 de 1972.\n</code></pre>"},{"location":"Structure/listes_piles_files/#la-calculatrice-scientifiique","title":"La calculatrice scientifiique","text":"<p>Le mode de calcul avec une pile s'appelle RPN (Reverse Polish Notation ou notation polonaise inverse). Dans cette logique postfix\u00e9e, on saisit d'abord les arguments de l'op\u00e9ration puis en dernier, l'op\u00e9ration \u00e0 r\u00e9aliser.  </p> <p>Exemple : Pour faire 2+3 on empilera 2, puis 3 et enfin on invoquera la fonction +. Cette logique est extr\u00eamement efficace et rapide, en particulier dans les encha\u00eenements d'op\u00e9rations car elle ne n\u00e9cessite pas de saisir des parenth\u00e8ses. elle permet aussi de faire moins d'erreurs de calcul car on est oblig\u00e9 de r\u00e9fl\u00e9chir aux priorit\u00e9s des op\u00e9rations au moment de la saisie.  </p> <p>Voici une illustration en vid\u00e9o de l'utilisation de la calculatrice HP-45 (1974) qui est l'une des toutes premi\u00e8res calculatrices scientifiques.  </p> <p> Quel calcul est saisi?</p> Question <p>Quel calcul est effectu\u00e9 si je rentre la s\u00e9quence : 12 ENTER 4 ENTER 3 x + et quel est le r\u00e9sultat de la s\u00e9quence?</p> correction <p>4*3+12 = 24</p> Pourquoi? <p>Le chiffre 3 est dans le registre x, 4 dans le Y et 12 dans le Z. Le premier signe multiplie les registres X et Y et range le r\u00e9sultat dans X (=3x4) 12 est alors redescendu dans le registre Y. Le deuxi\u00e8me signe a pour but d'additionner les registre X et Y.   </p> <p>Quelle s\u00e9quence saisir? </p> Question <p>On souhaite effectuer le calculer (12-4)*3. Quelle s\u00e9quence faudra-t-il \u00e9crire ?\"</p> correction <p>3 ENTER 4 ENTER 12 - *</p> Pourquoi? <p>Il faut empiler les nombres de fa\u00e7on \u00e0 ce que les nombres prioritaires soient dans les registres X et Y.  On fait en 1er l'op\u00e9ration 12-4 donc 4 doit \u00eatre dans Y et 12 dans X. On commence donc par empiler le nombre 3 puis 4 puis 12. Une fois la premi\u00e8re op\u00e9ration effectu\u00e9e, 8 se trouve dans le registre X et 3 est descendu dans Y. </p> <p>Les m\u00e9thodes <code>append()</code> et <code>pop()</code> des listes en python permettent respectivement d'empiler et de d\u00e9piler un \u00e9l\u00e9ment.</p>"},{"location":"Structure/listes_piles_files/#les-files","title":"Les files","text":"<p>D\u00e9finition :</p> <p>Dans une file, les \u00e9l\u00e9ments sont plac\u00e9s les uns \u00e0 cot\u00e9s des autres comme dans une pile, \u00e0 la diff\u00e9rence que seul l'on sort les \u00e9l\u00e9ments du plus ancien vers le plus r\u00e9cent. Cela correspond \u00e0 ce qui se passe dans une file d'attente. </p> <p>Exemple</p> <pre><code>Dans le domaine informatique, on retrouve par exemple les files dans les files d'impression o\u00f9 le premier document envoy\u00e9 \u00e0 l'imprimante sera le premier document \u00e0 \u00eatre imprim\u00e9.\n</code></pre>"},{"location":"Structure/listes_piles_files/#operations-possibles","title":"Op\u00e9rations possibles :","text":"<p>Sur une file, on peut :  </p> <ul> <li>ajouter un \u00e9l\u00e9ment \u00e0 la fin de la liste (enfiler)</li> <li>supprimer/consulter le premier \u00e9l\u00e9ment (d\u00e9filer)</li> <li>savoir si la liste est vide</li> <li>connaitre le nombre d'\u00e9l\u00e9ments qu'elle contient</li> </ul> <p>acronyme pour les files</p> <pre><code>=== \"Question\"\n    En comparant avec l'acronyme FILO utilis\u00e9 pour les piles, quel serait celui concernant les piles ?\n\n=== \"Correction\"\n    FIFO First in First Out.\n</code></pre> <p> Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021 </p>"},{"location":"algorithmie/ABR/","title":"Arbres binaires de recherche","text":""},{"location":"algorithmie/ABR/#parcours-dun-arbre","title":"Parcours d'un arbre","text":"<p>On peut parcourir un arbre binaire de plusieurs fa\u00e7ons. Dans le parcourt pr\u00e9fixe, on cite le noeud la premi\u00e8re fois que l'on rencontre le noeud (lorsque l'on passe sur le point rouge).  Ce qui donne pour le parcourt de l'arbre : F - B - A - D - C - E - G - I - H  Dans le parcourt infixe (jaune), on visite l'arbre gauche avant de citer le noeud puis visiter l'arbre droit. Parcourt infixe : A - B - C - D - E - F - G - H - I  Dans le parcourt postfixe on viste d'abords les deux sous arbres et on ne cite le noeud que la derni\u00e8re fois qu'on le rencontre (vert). Parcourt postfixe : A - C - E - D - B - H - I - G - F </p> <p>Remarque</p> <p>Tous ces parcourts sont appel\u00e9s en profondeur d'abord. On peut aussi parcourir en largeur, \u00e0 savoir: F - B - G - A - D - I - C - E - H</p>"},{"location":"algorithmie/ABR/#arbre-binaire-de-recherche","title":"Arbre binaire de recherche","text":"<p>Un arbre binaire de recherche (ABR) est un abre binaire dont les donn\u00e9es du sous arbre droit contient des donn\u00e9es sup\u00e9rieures ou \u00e9gale \u00e0 la racine et le sous-arbre gauche contient des donn\u00e9es inf\u00e9rieures \u00e0 la racine. </p> <p>Remarque</p> <p>Le parcours infixe renvoie les valeurs dans l'ordre croissant.  </p>"},{"location":"algorithmie/ABR/#operations-utiles-sur-un-abr","title":"Op\u00e9rations utiles sur un ABR","text":"<p>Les ABR permettent de ranger des donn\u00e9es que l'on peut ensuite retrouver facilement en minimisant la coomplexit\u00e9 de la recherche. En effet, il est inutile de parourir tout l'arbre pour rechercher un nombre si l'on sait d\u00e9j\u00e0 s'il est plus petit que la racine. Il suffira de parcourir le sous-arbre gauche.  </p> <p>Algorithme de recherche d'une cl\u00e9 : </p> <p>Algorithme d'insertion de cl\u00e9 : </p>"},{"location":"algorithmie/calculabilite/","title":"Calculabilit\u00e9 et d\u00e9cidabilit\u00e9","text":""},{"location":"algorithmie/calculabilite/#programme-en-tant-que-donnee","title":"Programme en tant que donn\u00e9e","text":"<p>Nous avons l\u2019habitude d\u2019utiliser les donn\u00e9es et le programmes en les rangeant respectivement dans des variableset des fonctions. Par exemple : <pre><code>def somme(a,b):\n    c=a+b\n    return c\n</code></pre> <code>a, b et c</code> sont des donn\u00e9es rang\u00e9es dans des variables et <code>somme()</code> est une fonction dans laquelle on range quelques lignes de programme.</p> <p>Or si on utlise la fonction <code>eval()</code> qui prend en argument une cha\u00eene de carct\u00e8res :  <pre><code>&gt;&gt;&gt; eval(\"8 + 2\")\n10\n\n&gt;&gt;&gt; eval('somme(3,3)')\n6\n</code></pre> Cette fonction permet de transformer  une chaine de caract\u00e8res en programme et de l\u2019\u00e9xecuter s\u2019il est ex\u00e9cutable. Le programme que l\u2019on a cr\u00e9\u00e9 est donc rang\u00e9 comme une donn\u00e9e dans une variable de type <code>string</code>.   </p> <p>LE PROGRAMME EST DONC AUSSI UNE DONNEE </p> <p>Question</p> <p>1.Trouver une ou des situations o\u00f9 le programme est consid\u00e9r\u00e9 comme  une donn\u00e9e.</p>"},{"location":"algorithmie/calculabilite/#calculabilite","title":"Calculabilit\u00e9","text":"<p>Un probl\u00e8me est consid\u00e9r\u00e9 comme calculable si on peut le coder dans un langage de programmation usuel. Certaines choses ne se calculent pas avec un ordinateur. Par exemple on ne peut pas calculer si une fonction va s'arr\u00e9ter, ni si un programme va provoquer une erreur.  </p> <p>Question</p> <p>2.Chercher outre le probleme de l'arr\u00eat un probl\u00e8me c\u00e9l\u00e8bre non calculable. </p>"},{"location":"algorithmie/calculabilite/#decidabilite","title":"D\u00e9cidabilit\u00e9","text":"<p>Un probl\u00e8me de d\u00e9cision est dit d\u00e9cidable s'il existe un algorithme, une proc\u00e9dure m\u00e9canique qui se termine en un nombre fini d'\u00e9tapes, qui le d\u00e9cide, c'est-\u00e0-dire qui r\u00e9ponde par oui ou par non \u00e0 la question pos\u00e9e par le probl\u00e8me. S'il n'existe pas de tels algorithmes, le probl\u00e8me est dit ind\u00e9cidable. </p> <p>Par exemple</p> <ul> <li>un entier est-il pair ou non: ce probl\u00e8me est d\u00e9cidable car la r\u00e9ponse est oui ou non</li> <li>un nombre est un nombre premier ou non</li> </ul> <p>Attention</p> <p>Un probl\u00e8me peut \u00eatre th\u00e9oriquement d\u00e9cidable sans l\u2019\u00eatre en pratique. parce que celle-ci n\u00e9cessiterait trop de temps (plus que l'\u00e2ge de l'univers) ou trop de ressources (plus que le nombre d'atomes de l'univers).</p> <p>Donnons des exemples de probl\u00e8mes non d\u00e9cidables. Je parcours un r\u00e9seau al\u00e9atoirement, est-ce que je vais atteindre une cible donn\u00e9es en un nombre fini d'\u00e9tapes? Pas forc\u00e9ment, m\u00eame si la probabilit\u00e9 d'arriver \u00e0 destination tend vers 1 quand le nombre d'\u00e9tapes tend vers l'infini!  </p>"},{"location":"algorithmie/calculabilite/#probleme-de-larret","title":"Probl\u00e8me de l'arr\u00eat","text":"<p>Un autre exemple plus connu: le probl\u00e8me de l'arr\u00eat d'un programme est-il d\u00e9cidable? Est-ce que je peux \u00e9crire un programme qui me dira si un programme va s'arr\u00eater ou non (selon les valeurs d'entr\u00e9es)? Nous verrons que l'on peut prouver que ce probl\u00e8me n'est pas d\u00e9cidable: il n'existe pas d'algorihtme capable de pr\u00e9dire si n'importe quel programme va s'arr\u00eater ou non. Cela vous plairez bien...n'avez vous jamais fait de boucle infinie?</p> <p>Question</p> <p>3.Pourquoi le probl\u00e8me de l'arr\u00eat est dit ind\u00e9cidable? 4.En quoi la phrase \"je suis un menteur\" illustre bien le probl\u00e8me du paradoxe?  </p> <p>Etudiez le script suivant :</p> <p>Question</p> <p>5.Que se passe-t-il?</p> <p>Supposons qu'il existe une fonction calculable <code>termine(fonction, donn\u00e9es)</code> qui prend 2 arguments : une fonction, et des donn\u00e9es d'entr\u00e9e pour cette fonction  et qui renverra <code>True</code> si le programme termine et <code>False</code> s'il entre dans une boucle infinie.  </p> <p>On d\u00e9finit les deux fonctions suivantes : <pre><code>def fonction1(n):\n    if n % 3 != 0:\n        return True\n    else:\n        return False\n\ndef fonction2(n):\n    while n % 3 != 0:\n        print(\"True\")\n    print(\"False\")\n</code></pre></p> <p>Question</p> <p>6.Que renverront les appels suivants ? <code>termine(function1, 7)</code> <code>termine(function1, 9)</code> <code>termine(function2, 7)</code> <code>termine(function2, 9)</code>  Justifier vos r\u00e9ponses.</p> <p>On d\u00e9finit une fonction <code>test_sur_soi</code>. <pre><code>def test_sur_soi(programme):\n    if termine(programme, programme):\n        while True: pass # boucle infinie\n</code></pre></p> <p>Question</p> <p>7.Que se passe-t-il si on appelle <code>test_sur_soi</code> sur elle-m\u00eame: <code>test_sur_soi(test_sur_soi)</code> ?</p> <p>En compl\u00e9ment pour ceux qui n'ont pas encore les neurones qui chauffent...</p> <p></p>"},{"location":"algorithmie/diviser/","title":"Diviser pour r\u00e9gner","text":"<p>En informatique, on applique souvent cette m\u00e9thode algorithmique qui constitue \u00e0 diviser un probl\u00e8me en probl\u00e8mes plus petits, donc plus facile \u00e0 r\u00e9soudre puis de l'\u00e9tendre au probl\u00e8me plus grand. Il faudra pour cela r\u00e9soudre trois \u00e9tapes :</p> <ul> <li>divisier : d\u00e9couper le probl\u00e8me en probl\u00e8mes plus petits</li> <li>r\u00e9gner : r\u00e9soudre ces probl\u00e8mes plus petits, d\u00e9terminer coment on passe de ce probl\u00e8me \u00e0 un probl\u00e8me un tout petit peu plus grand et d\u00e9finir les cas d'arr\u00eat (on utilisera souvent la r\u00e9cursivit\u00e9).</li> <li>combiner : recombiner les solutions des sous-probl\u00e8mes pour obtenir la solution g\u00e9n\u00e9rale du probl\u00e8me de d\u00e9part.</li> </ul> <p>Nous allons pour illustrer cette m\u00e9thode, utiliser deux exemples classiques : le tri-fusion et les tour de hano\u00ef.</p>"},{"location":"algorithmie/diviser/#le-tri-fusion","title":"Le tri fusion","text":"<p>Le tri fusion est un tri de tableau comme il a d\u00e9j\u00e0 \u00e9t\u00e9 vu en premi\u00e8re avec le tri par insertion et le tri par s\u00e9lection.  Le principe du tri fusion est de diviser le tableau en tableau plus petits jusqu'\u00e0 ce que l'on ait plus que des tableaux de 1 \u00e9l\u00e9ment. C'est la partie diviser. Chaque petit tableau est tr\u00e8s facile \u00e0 trier; c'est la partie r\u00e9gner.  On combine les tableaux deux \u00e0 deux en comparant le premier \u00e9l\u00e9ment de chaque tableau et de prendre le plus petit, puis l'autre. Une fois que l'on obtient des tableaux de 2 \u00e9l\u00e9ments, on utilise la m\u00eame m\u00e9thode pour combiner en tableau de 4 \u00e9l\u00e9m\u00e9nts, ... ; c'est la partie combiner.</p> <p>exemple de r\u00e9solution</p> <p>Pour illustrer le fonctionnement, nous allons prendre un exemple de la fusion de deux tableaux <code>[32,42]</code> et <code>[3,57]</code>. On regarde le premier \u00e9l\u00e9ment de chaque tableau, \u00e0 savoir 32 et 3. 3 est plus petit que 32 donc on place 3 dans le tableau final et on le supprime du tableau de droite. On continue avec la meme m\u00e9thode en regardant le premier \u00e9l\u00e9ment de chaque tableau <code>[32,42]</code> et <code>[57]</code> (puisqu'on a enlev\u00e9 le 3). Entre 32 et 57, 32 est plus petit et sera donc plac\u00e9 dans le tableau final et supprim\u00e9 du tableau de gauche. On obtient les tableaux <code>[42]</code> et <code>[57]</code>, 42 est plus petit que 57, on place 42 dans le tableau final et on se retourve avec un des deux tableaux vides. On ajoute alors au tableau final tout le reste du tableau de droite.  Une fois les deux tableaux vides, on obtient un tableau avec les contenus des tableaux <code>[32,42]</code> et <code>[3,57]</code> fusionn\u00e9s et tri\u00e9s <code>[3,32,42,57]</code>. En pseudocode, cela pourrait donner pour la fusion : <pre><code>A-&gt; tableau\nB-&gt; tableau\nT-&gt; tableau vide\nTANT QUE les tableaux A et B ne sont pas vides :\n    SI A est vide:\n        ajouter B \u00e0 T\n    SINON SI B est vide :\n        ajouter A \u00e0 T\n    SINON :\n        SI A[0]&lt;B[0] :\n            ajouter A[0] \u00e0 T\n        SINON SI A[0]&gt;B[0]:\n            ajouter B[0] \u00e0 T\n        SINON :\n            ajouter B[0] et A[0] \u00e0 T\n        Fin SI\n    FIN SI\nFIN TANT QUE\n</code></pre></p> <p>A vous de jouer</p> <p>Ecrire en pseudo code la division en sous-tableaux de 1 \u00e9l\u00e9ment.</p> <p></p> <p>impl\u00e9mentation</p> <p>Nous ferons l'impl\u00e9mentation du tri_fusion en TP.</p>"},{"location":"algorithmie/diviser/#les-tours-de-hanoi","title":"Les tours de Hanoi","text":"<p>Le jeu des tours de Hano\u00ef est un jeu pour enfants, qui g\u00e9n\u00e9ralement finissent par jeter les pi\u00e8ces \u00e0 travers leur chambre (ou \u00e0 la figure de leur parents) sans se soucier d'appliquer les r\u00e8gles du jeu, \u00e0 savoir : - les disques sont empil\u00e9s dans l'ordre d\u00e9croissant de taille sur la premi\u00e8re tige (celle de gauche). - le but est de les retrouver empil\u00e9s de la m\u00eame fa\u00e7on sur la tige d'arriv\u00e9e (celle de droite).  - on ne peut d\u00e9placer que un disque \u00e0 la fois - on ne peut poser un disque que sur un disque plus grand ou sur une tige vide. </p> <p>Vous pouvez tester le jeu avec plus ou moins de disques. </p> <p>Pour un seul disque le probl\u00e8me est assez simple, il suffit de d\u00e9placer le disque de la tige de d\u00e9part \u00e0 la tige d'arriv\u00e9e. Pour deux disques, on d\u00e9place le plus petit, sur la tige interm\u00e9diaire, puis le grand sur la tige d'arriv\u00e9e et enfin le petit sur le grand. Jusqu'ici, tout va bien.  Pour trois disques, la m\u00e9thode est donn\u00e9e ci-dessous.  Si on regarde le probl\u00e8me un peu plus en d\u00e9tail, on peut r\u00e9soudre le probl\u00e8me en consid\u00e9rant que cette situation est en fait une combinaison du probl\u00e8me \u00e0 un seul disque (le plus grand qui va aller directement de la tige A \u00e0 la tige C) et du probl\u00e8me \u00e0 deux disques (mais la tige B comme tie de d\u00e9part au lieu de la A et la C comme arriv\u00e9e). On sait r\u00e9soudre les situations \u00e0 1 disques et 2 disques, donc on peut r\u00e9soudre celui-la. </p> <p>De fa\u00e7on plus g\u00e9n\u00e9rale, avec un grand nombre de disque, si on arrive \u00e0 cette situtation :  on saura r\u00e9soudre le probl\u00e8me : </p> <p>les \u00e9tapes algorithmiques</p> <ul> <li>Tous les disques sont sur A</li> <li>transf\u00e9rer les n-1 diques sur B (se fera par r\u00e9cursivit\u00e9 en allant jusqu'au cas d'arr\u00eat ou n=1)</li> <li>d\u00e9placer le grand disque sur C</li> <li>transf\u00e9rer les n-1 disques sur C (se fera par r\u00e9cursivit\u00e9 en allant jusqu'au cas d'arr\u00eat ou n=1)</li> </ul> <p>Le cas de base \u00e9tant celui a 1 disque : </p> <p>code</p> <p>Voici ce que cela donne en python</p> code <pre><code>def hanoi(n,depart,arrivee,intermediaire):\nif n==1:\n    #si un seul disque on le d\u00e9place de la tige de d\u00e9part \u00e0 celle d'arriv\u00e9e\n    print(\"Disque\",n,\":\",depart,\" -&gt;\",arrivee)\nelif n&gt;=2:\n    #si plusieurs disques on transf\u00e8re la pile de n-1 disques sur la tige iterm\u00e9diaire\n    hanoi(n-1,depart,intermediaire,arrivee)\n    #on d\u00e9place le grand disque sur la tige d'arriv\u00e9e\n    print(\"Disque\",n,\":\",depart,\" -&gt;\",arrivee)\n    #on transf\u00e8re le tout sur l'arriv\u00e9e\n    hanoi(n-1,intermediaire,arrivee,depart)\nhanoi(3,\"A\",\"C\",\"B\")\n</code></pre> r\u00e9sultat <pre><code>&gt;&gt;&gt; # script executed     \nDisque 1 : A  -&gt; C\nDisque 2 : A  -&gt; B\nDisque 1 : C  -&gt; B\nDisque 3 : A  -&gt; C\nDisque 1 : B  -&gt; A\nDisque 2 : B  -&gt; C\nDisque 1 : A  -&gt; C\n&gt;&gt;&gt;  \n</code></pre> <p>A faire</p> <p>D\u00e9rouler le code \u00e0 la main pour 3 puis 4 disques. Tester ce code avec plusieurs disques en utilisant l'animation pour v\u00e9rifier la d\u00e9marche.  </p> <p>On sait r\u00e9soudre les probl\u00e8mes \u00e0 deux et un disques, on peut, gr\u00e2ce \u00e0 la r\u00e9cursivit\u00e9 r\u00e9soudre le probl\u00e8me avec un nombre quelconque de disques. C'est un peu magique non?!</p>"},{"location":"algorithmie/parcours_graphe/","title":"Algorithmes de parcours de Graphes","text":"<p>On pourra utiliser un \u00e9diteur de graphes pour se simplifier la repr\u00e9sentation en utilisant l'outil en ligne Graphviz Editor </p>"},{"location":"algorithmie/parcours_graphe/#parcours-en-largeur-dabord-breadth-first-search-bfs","title":"Parcours en largeur d'abord (Breadth First Search - BFS)","text":"<p>Le principe du parcoursen largeur d'abord est de choisir un sommet et de parcourir les noeuds en listant les noeuds de m\u00eame profondeur par rapport au noeud de d\u00e9part. </p> <ul> <li>On d\u00e9marre au noeud B. On explore ses fils, puis les fils de ses fils, sans revenir sur les noeuds d\u00e9j\u00e0 trait\u00e9s. ce qui donne sur l'animation ci-dessus : B, A, C, D, E, F, G, H.  </li> </ul> <p>Remarque</p> <p>Le \"premier\" ou \"deuxieme\" fils sera d\u00e9termin\u00e9 par la fa\u00e7on dont le graphe a \u00e9t\u00e9 impl\u00e9ment\u00e9. En effet, on pour d\u00e9terminer le parcours comme B, C, A, D, F, G, F et H.</p> <p>\u00e0 partir d'autres noeuds</p> <p>D\u00e9velopper l'algorithme en partant des noeuds H puis D.</p> <p>Etapes de la proc\u00e9dure</p> <p>On cr\u00e9e une file vide</p> <ol> <li>On enfile le n\u0153ud de d\u00e9part.  </li> <li>On enfile les n\u0153uds adjacents s'ils ne sont pas d\u00e9j\u00e0 pr\u00e9sents dans la file et qu'ils n'ont pas d\u00e9j\u00e0 \u00e9t\u00e9 visit\u00e9s (on cr\u00e9era une liste pour y stocker les noeuds visit\u00e9s)  </li> <li>On d\u00e9file (c'est-\u00e0-dire on supprime la t\u00eate de file).  </li> <li>Tant que la file n'est pas vide, on r\u00e9-it\u00e8re les points 2 et 3.  </li> <li>On affiche la liste des noeuds visit\u00e9s  </li> </ol> <p>Proc\u00e9dure d\u00e9taill\u00e9e</p> <ul> <li>On place les fils A et C en file d'attente. <code>file_attente=[A,C]</code> puis on consid\u00e8re que le noeud B a \u00e9t\u00e9 trait\u00e9, on le m\u00e9morise <code>noeuds_trait\u00e9s=[B]</code>.  </li> <li>On prend le premier \u00e9l\u00e9ment en file d'attente (A) et on l'explore, c'est-\u00e0-dire que l'on met ses fils en file d'attente et que l'on m\u00e9morise le noeud comme trait\u00e9. Il sort donc de la file d'attente :  <code>file_attente=[C,D,E]</code> et <code>noeuds_trait\u00e9s=[B,A]</code>.  </li> <li>M\u00eame proc\u00e9dure avec le noeud C qui est le suivant dans la file d'attente, on traite C il sort de la file et entre dans les noeuds trait\u00e9s et son fils est plac\u00e9 en file d'attente :  le seul fils de C est d\u00e9j\u00e0 en file d'attente donc on ne l'ajoute pas : <code>file_attente=[D,E]</code> et <code>noeuds_trait\u00e9s=[B,A,C]</code>.  </li> <li>On traite le noeud D : E est d\u00e9j\u00e0 en file d'attente: <code>file_attente=[E]</code> et <code>noeuds_trait\u00e9s=[B,A,C,D]</code>.  </li> <li>Les fils du noeuds E sont plac\u00e9s en fils d'attente et E est d\u00e9plac\u00e9 de la file d'attente \u00e0 la liste des noeuds trait\u00e9s : <code>file_attente=[F,G]</code> et <code>noeuds_trait\u00e9s=[B,A,C,D,E]</code>.  </li> <li>Noeud F : ses fils sont soit d\u00e9j\u00e0 trait\u00e9 soit en fils d'attente <code>file_attente=[G]</code> et <code>noeuds_trait\u00e9s=[B,A,C,D,E,F]</code>.  </li> <li>Noeud G : <code>file_attente=[H]</code> et <code>noeuds_trait\u00e9s=[B,A,C,D,E,F,G]</code>.</li> <li>Noeud H :   <code>file_attente=[]</code> et <code>noeuds_trait\u00e9s=[B,A,C,D,E,F,G,H]</code>  Tous les noeuds ont \u00e9t\u00e9 cr\u00e9\u00e9s (on peut tester la taille de la liste avec une assertion pour \u00eatre s\u00fbr) et la file d'attente est vide, le parcours s'arr\u00eate.</li> </ul> <p>\u00e0 partir d'autres noeuds</p> <p>D\u00e9velopper l'algorithme en partant des noeuds H puis D.</p> <p>L'algorithme en pseudocode : <pre><code>VARIABLE\nG : un graphe\ns : noeud (origine)\nu : noeud\nv : noeud\nf : file (initialement vide)\n\n//On part du principe que pour tout sommet u du graphe G, u.couleur = blanc \u00e0 l'origine\nDEBUT\ns.couleur \u2190 noir\nenfiler (s,f)\ntant que f non vide :\n    u \u2190 defiler(f)\n    pour chaque sommet v adjacent au sommet u :\n        si v.couleur n'est pas noir :\n            v.couleur \u2190 noir\n            enfiler(v,f)\n        fin si\n    fin pour\nfin tant que\nFIN\n</code></pre></p>"},{"location":"algorithmie/parcours_graphe/#parcours-en-profondeur-dabord-deep-first-search-dfs","title":"Parcours en profondeur d'abord (Deep First Search - DFS)","text":"<p>Pour ce parcours, on explore les voisins du noeuds de d\u00e9part un par un et on explore les voisins du premier voisin, puis ceux du deuxi\u00e8me, ...  </p> <p>On d\u00e9marre au noeud B, on explore son premier fils (A) et on met les autres en attente (C). On explore le premier fils de A (E) et on met l'autre (D) en attente. Le premier fils de E (G) est explor\u00e9 alors que G est en mis en attente. Puis, on explore H. Une fois arriv\u00e9 \u00e0 un noeud qui n'a plus de fils non trait\u00e9s ou mis en attente, on remonte visiter les noeuds mis en attente. Ce qui donne : B, A, E, G, H, F, D, C. </p> <p>Remarque</p> <p>Le \"premier\" ou \"deuxieme\" fils sera d\u00e9termin\u00e9 par la fa\u00e7on dont le graphe a \u00e9t\u00e9 impl\u00e9ment\u00e9. Le r\u00e9sultat du parcours peut \u00eatre diff\u00e9rent.</p> <p>Etapes de la proc\u00e9dure</p> <ol> <li>On part d'un sommet que l'on empile;  </li> <li>On d\u00e9pile et on marque le sommet d\u00e9pil\u00e9 comme trait\u00e9 (il faudrait cr\u00e9er une liste pour les sommets d\u00e9j\u00e0 trait\u00e9s)  </li> <li>On empile chacun des voisins du sommet d\u00e9pil\u00e9 qui ne sont pas d\u00e9j\u00e0 dans la pile et qui n'ont pas \u00e9t\u00e9 d\u00e9j\u00e0 \u00e9t\u00e9 trait\u00e9s;  </li> <li>On recommence \u00e0 partir du point 2 tant que la pile n'est pas vide.  </li> </ol> <p>D\u00e9tails de la proc\u00e9dure</p> <p>Ici, la file d'attente est une pile et non une file. Donc c'est le dernier \u00e9l\u00e9ment mis en attente qui sera trait\u00e9 en premier. - Le noeud B est visit\u00e9 en premier <code>noeuds_trait\u00e9s=[B]</code>. On viste A <code>noeuds_trait\u00e9s=[B,A]</code> et on place C en pile d'attente : <code>pile_attente=[C]</code>. - On visite E et on met D en attente : <code>noeuds_trait\u00e9s=[B,A,E]</code> et <code>pile_attente=[C,D]</code>. - On viste G et on met F en attente : <code>noeuds_trait\u00e9s=[B,A,E,G]</code> et <code>pile_attente=[C,D,F]</code>. - On viste H qui n'a pas de fils non trait\u00e9 et non en attente : <code>noeuds_trait\u00e9s=[B,A,E,G,H]</code> et <code>pile_attente=[C,D,F]</code>. - On d\u00e9pile la pile d'attente et on visite F <code>noeuds_trait\u00e9s=[B,A,E,G,H,F]</code> et <code>pile_attente=[C,D]</code>.  - puis D <code>noeuds_trait\u00e9s=[B,A,E,G,H,F,D]</code> et <code>pile_attente=[C]</code>. - et enfin C : <code>noeuds_trait\u00e9s=[B,A,E,G,H,F,D,C</code>] et <code>pile_attente=[]</code>. - la pile d'attente est vide et on a visit\u00e9 tous les noeuds.</p> <p>\u00e0 partir d'autres noeuds</p> <p>D\u00e9velopper l'algorithme en partant des noeuds H puis D.</p> <p>L'algorithme it\u00e9raif en pseudocode</p> <p>On peut utiliser la coloration des noeuds : blanc pour non visit\u00e9 et noir pour visit\u00e9. Mais on peut \u00e9galement mettre les \u00e9l\u00e9ments visit\u00e9s dans une liste. <pre><code>VARIABLE\ns : noeud (origine)\nG : un graphe\nu : noeud\nv : noeud\np : pile (pile vide au d\u00e9part)\n//On part du principe que pour tout sommet u du graphe G, u.couleur = blanc \u00e0 l'origine\nDEBUT\ns.couleur \u2190 noir\npiler(s,p)\ntant que p n'est pas vide :\nu \u2190 depiler(p)\npour chaque sommet v adjacent au sommet u :\n    si v.couleur n'est pas noir :\n        v.couleur \u2190 noir\n        piler(v,p)\n    fin si\nfin pour\nfin tant que\nFIN\n</code></pre></p> <p>L'algorithme r\u00e9cursif en pseudocode <pre><code>VARIABLE\nG : un graphe\nu : noeud\nv : noeud\n//On part du principe que pour tout sommet u du graphe G, u.couleur = blanc \u00e0 l'origine\nDEBUT\nPARCOURS-PROFONDEUR(G,u) :\n  u.couleur \u2190 noir\n  pour chaque sommet v adjacent au sommet u :\n    si v.couleur n'est pas noir :\n      PARCOURS-PROFONDEUR(G,v)\n    fin si\n  fin pour\nFIN\n</code></pre></p>"},{"location":"algorithmie/parcours_graphe/#chercher-son-chemin","title":"Chercher son chemin","text":"<p>Chercher son chemin dans un graphe c'est parcourir le graphe en m\u00e9morisant les noeuds par lesquels on passe, en s'arr\u00eatant d\u00e8s que l'on a rencontr\u00e9 le noeud d'arriv\u00e9e.</p> <p>algorithme</p> <pre><code>Fonction cherche_chemin(graphe,depart,arrivee)  \n    P \u2190 pile vide  \n    empiler le couple (depart,[depart]) dans P  \n    chemin \u2190 liste vide  \n    Tant que P n'est pas vide faire  \n        (sommet,chemin) \u2190 on d\u00e9pile P  \n        listes_nouveaux_sommets_voisins \u2190 liste des sommets   adjacents \u00e0 sommet qui ne sont pas dans chemin (liste r\u00e9initialis\u00e9e \u00e0 chaque tour)  \n        Pour un_sommet dans listes_nouveaux_sommets_voisins  \n            Si un_sommet = arrivee alors  \n                retourner chemin + [un_sommet]  \n            sinon  \n                empiler (un_sommet,chemin + [un_sommet])  \n            FinSi  \n        FinPour  \n    FinTantQue  \nFinFonction\n</code></pre>"},{"location":"algorithmie/parcours_graphe/#chercher-tous-les-chemins","title":"Chercher tous les chemins","text":"<p>Le principe est le m\u00eame que pr\u00e9c\u00e9demment mais on ne s'arr\u00eate pas d\u00e8s que le noeud est rencontr\u00e9. On m\u00e9morise le chemin et on continue de parcourir le graphe de fa\u00e7on \u00e0 rencontrer encore le noeud d'arriv\u00e9e. On place les chemins trouv\u00e9s dans une liste et on retourne cette liste.</p> <p>algorithme</p> <pre><code>Fonction cherche_chemin(graphe,depart,arrivee)  \n    P \u2190 pile vide  \n    L \u2190 liste vide\n    empiler le couple (depart,[depart]) dans P  \n    chemin \u2190 liste vide  \n    Tant que P n'est pas vide faire  \n        (sommet,chemin) \u2190 on d\u00e9pile P  \n        listes_nouveaux_sommets_voisins \u2190 liste des sommets   adjacents \u00e0 sommet qui ne sont pas dans chemin (liste r\u00e9initialis\u00e9e \u00e0 chaque tour)  \n        Pour un_sommet dans listes_nouveaux_sommets_voisins  \n            Si un_sommet = arrivee alors  \n                ajouter chemin + [un_sommet]  \u00e0 L\n            sinon  \n                empiler (un_sommet,chemin + [un_sommet])  \n            FinSi  \n        FinPour  \n    FinTantQue  \n    Retourner L\nFinFonction\n</code></pre> <p>Remarque</p> <p>Le chemin le plus court sera celui contenant le moins de noeuds rencontr\u00e9s.</p>"},{"location":"algorithmie/parcours_graphe/#detection-de-cycle","title":"D\u00e9tection de cycle","text":"<p>Un cycle dans un graphe est un chemin dont le neoud de d\u00e9part et le noeud d'arriv\u00e9e sont identique. le principe \u00e9tant de ne JAMAIS faire demi tour donc de ne pas revenir sur des noeuds d\u00e9j\u00e0 visit\u00e9s.</p> <p>Si on veut chercher tous les cycles \u00e0 partir d'un sommet on applique l'algorithme de recherche de tous les chemins. Et si on veut tous les ycles du graphe, on appique ce dernier \u00e0 tous les sommets.</p> <p>algorithme</p> <pre><code>Fonction rechercher_cycle(graphe,sommet):\n    cycle\u2190liste vide\n    Pour tous les voisins de sommet\n        chercher tous les chemins entre sommet et voisin\n    FIN Pour\n    Pour chaque chemin trouv\u00e9 :\n        ajouter \u00e0 cycle (chemin+sommet)  \n    FIN POUR\n    Revoyer cycle\nFIN FONCTION\n</code></pre>"},{"location":"algorithmie/parcours_graphe/#application-algorithme-de-dijkstra-hors-programme","title":"Application : algorithme de Dijkstra (hors programme)","text":"<p> On affecte la marque \\(\\infty\\) \u00e0 tous les sommets non visit\u00e9s. Le sommet de d\u00e9part est affect\u00e9 de la marque 0.</p> 1 2 3 4 5 6 0 (1) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) <p>Pour chaque voisin non visit\u00e9 du sommet courant (ici 1), on regarde la distance \u00e0 laquelle il se trouve et on ajoute dans  le tableau la distance obtenue et le parent qui permet d'obtenir cette distance. Par exemple, ici, pour aller au sommet 2 du sommet 1 la distance est de 7. On affecte la marque 7 au sommet 2 en pr\u00e9cisant que l'on vient du sommet 1.  </p> 1 2 3 4 5 6 0 (1) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) - 7 (1) 9 (1) \\(\\infty\\) \\(\\infty\\) 14 (1) <p>Un sommet est consid\u00e9r\u00e9 comme trait\u00e9 quand tous ses successeurs ont \u00e9t\u00e9 visit\u00e9s.  A ce stade, on consid\u00e8re le sommet 1 comme trait\u00e9.</p> <p>Le minimum obtenu \u00e0 partir du sommet 1 est le sommet 2, on va donc chercher les successeurs de 2. On peut aller \u00e0 3 et \u00e0 4 mais pas 1 car il est d\u00e9j\u00e0 trait\u00e9. A partir de 2, on atteint le noeud 3 avec un total de 17, ce qui est inf\u00e9rieur \u00e0 9 lamarque pr\u00e9c\u00e9dente de 3. On ne modifie pas la marque de 3. Pour atteindre 4, on parcourt une distance totale de 22. </p> 1 2 3 4 5 6 0 (1) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) - 7 (1) 9 (1) \\(\\infty\\) \\(\\infty\\) 14 (1) - - 9 (1) 22 (2) \\(\\infty\\) 14 (1) <p>Le noeud 2 est consid\u00e9r\u00e9 comme visit\u00e9. On s'interesse au noeud visit\u00e9 ayant la marque la plus petite \u00e0 savoir le noeud 3.   </p> <p>A  partir du noeud 3, on visite 4 et 6. On atteint le noeud 4 avec une distance de 22 et le noeud 6 avec une distance de 11. On voit qu'on am\u00e9liore la marque pour 6 et pour 4.</p> 1 2 3 4 5 6 0 (1) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) - 7 (1) 9 (1) \\(\\infty\\) \\(\\infty\\) 14 (1) - - 9 (1) 22 (2) \\(\\infty\\) 14 (1) - - - 20 (3) \\(\\infty\\) 11 (3) <p>Le noeud 3 est consid\u00e9r\u00e9 comme visit\u00e9.  </p> <p>On s'interesse au noeud 6 car c'est celui ayant la plus petite marque. On visite alors ses successeurs \u00e0 savoir le noeud 5 car le 3 et le 1 sont daj\u00e0 visit\u00e9s.</p> 1 2 3 4 5 6 0 (1) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) \\(\\infty\\) - 7 (1) 9 (1) \\(\\infty\\) \\(\\infty\\) 14 (1) - - 9 (1) 22 (2) \\(\\infty\\) 14 (1) - - - 20 (3) \\(\\infty\\) 11 (3) - - - 20 (3) 20 (6) - <p>On a atteind ici le noeud d'arriv\u00e9e (le 5) donc il faut maintenant remonter le tableau pour d\u00e9terminer l'itin\u00e9raire. On vient du noeud 6, la derni\u00e8re marque duu noeud 6 venait du noeud 3 et la derni\u00e8re du noeud 3 venait du noeud 1. L'itin\u00e9raire le plus court pour joindre 5 \u00e0 partir de 1 est donc 1, 3, 6, 5. </p> <p>Les \u00e9tapes de la proc\u00e9dure</p> <ol> <li>Cr\u00e9er un tableau donc la premiere ligne contient tous les noeuds \u00e0 qui on affecte la valeur infini.</li> <li>Initialiser une liste de noeuds visit\u00e9s.</li> <li>Pour le noeud de d\u00e9part, affecter le tuple (ou autre) (0,D) o\u00f9 D est le noeud de d\u00e9part.</li> <li>Pour chaque successeur de D qui n'est pas dans la liste des noeuds visit\u00e9s, affecter au noeud le tuple (distance,D) ou distance est la somme de la distance entre D et son successeur et de la distance d\u00e9j\u00e0 affect\u00e9e \u00e0 D.</li> <li>Ajouter D dans les noeuds visit\u00e9s.</li> <li>Choisir le noeud poss\u00e9dant la distance la plus petite, et r\u00e9p\u00e9ter les op\u00e9rations \u00e0 partir de l'\u00e9tape 4 jusqu'\u00e0 ce que le noeud trouv\u00e9 soit le noeud d'arriv\u00e9e.</li> <li>Remonter l'itin\u00e9aire en cherchant le noeud parent du noeud s\u00e9lectionn\u00e9, puis le parent du parent ...</li> </ol>"},{"location":"algorithmie/programmation_dynamique/","title":"Programmation dynamique","text":""},{"location":"algorithmie/programmation_dynamique/#le-principe","title":"Le principe","text":"<p>Le principe de la programmation dynamique est de m\u00e9moriser des r\u00e9sultats interm\u00e9diaires pour ne pas avoir \u00e0 les reclaculer.   </p>"},{"location":"algorithmie/programmation_dynamique/#le-probleme","title":"Le probl\u00e8me","text":"<p>On dispose de la grille 2\u00d73 ci-dessous.  Question : Combien de chemins m\u00e8nent du coin inf\u00e9rieur droit au coin sup\u00e9rieur gauche, en se d\u00e9pla\u00e7ant uniquement le long des traits horizontaux vers la droite et le long des traits verticaux vers le bas ? Et pour une grille 10\u00d710 ?</p> <p>Une m\u00e9thode consiste \u00e0 inscrire pr\u00e8s de l'intersection le nobre de chemin y menant. ainsi on pas besoin de recompter \u00e0 chaque fois que l'on veut repartir de ce coin. On montre ais\u00e9ment que pour aller du coin inf\u00e9rieur droit au coin de la case imm\u00e9diatement situ\u00e9 dans sa diagonale, on peut emprunter deux chemins, le orange et le noir. On inscrit alors \"2\" \u00e0 l'intersection concern\u00e9e.  Une m\u00e9thode consiste \u00e0 inscrire pr\u00e8s de l'intersection le nobre de chemin y menant. ainsi on pas besoin de recompter \u00e0 chaque fois que l'on veut repartir de ce coin. On montre ais\u00e9ment que pour aller du coin inf\u00e9rieur droit au coin de la case imm\u00e9diatement situ\u00e9 dans sa diagonale, on peut emprunter deux chemins, le orange et le noir. On inscrit alors \"2\" \u00e0 l'intersection concern\u00e9e. </p> <p>pour un carr\u00e9 de 5 par 5</p> <p>A la main, \u00e9valuer le nombre de chemins pour un carr\u00e9 de 5 par 5. Et pour un carr\u00e9 de 10 par 10.  </p>"},{"location":"algorithmie/programmation_dynamique/#la-suite-de-fibonacci","title":"La suite de Fibonacci","text":"<p>Les calculs des \u00e9l\u00e9ments de la suite de Fibonacci en r\u00e9cursif donne : <pre><code>def fibonacci(n):\n    if n &lt; 2:\n        return 1\n    else:\n        return fibonacci(n - 1) + fibonacci(n - 2)\nprint(fibonacci(30))\n</code></pre></p> <p>Remarque</p> <p>La m\u00e9thode r\u00e9cursive pour calculer les membres de la suite de fibonacci n'est pas id\u00e9ale. Elle est utilis\u00e9e ici pour illustrer l'exemple.</p> <p>Si on affiche l'arbre d'ex\u00e9cution on obtient :  On peut voir ici que certains \u00e9l\u00e9ments sont calcul\u00e9s plusieurs fois : fibo(2) par exemple est calcul\u00e9 4 fois. Nous allons donc stock\u00e9 le r\u00e9sultat de Fibo(2) dans une liste, puis \u00e0 chaque fois que l'on en aura besoin on ia chercher le r\u00e9sultat dans la liste au lieu de le recalculer.  </p>"},{"location":"algorithmie/recherche_textuelle/","title":"Recherche textuelle","text":"<p>La recherche de motif dans un texte est fr\u00e9quemment utilis\u00e9e pour rechercher un mot ou une portion de phrase dans un document texte ou une page web. C'est en fait ce que fait la fonction RECHERCHE ou F3 de votre navigateur.</p>"},{"location":"algorithmie/recherche_textuelle/#algorithme-naif","title":"Algorithme na\u00eff","text":"<p>Ce que l'on appelle algorithme na\u00eff est la proc\u00e9dure \u00e0 laquelle on pense en premier, \u00e0 savoir comparer le motif \u00e0 partir du d\u00e9but du texte, m\u00e9moriser la position s'il y a correspondance puis d\u00e9caler le motif de un rang et refaire la comparaison.  Ici, on cherche \u00e0 partir de la premiere lettre, d\u00e8s la premi\u00e8re cela ne correspond pas, on d\u00e9cale le motif de une case. La premiere et la deuxi\u00e8me correspndent mais pas la troisi\u00e8me, on d\u00e9cale de motif de une case, ... jusqu'\u00e0 ce qu'il y ait une correspondance pour i=4 (i \u00e9tant l'index dans la chaine dans laquelle on recherche).    </p> <p>exemple</p> <p>La recherche de 'bra' dans 'abracadabracadabricadabra' doit renvoyer 1, 8 et 22. La recherche de 'bra' dans 'toutouyoutou' doit retourner <code>False</code>.   </p>"},{"location":"algorithmie/recherche_textuelle/#algorithme-de-boyer-moore-horspool","title":"Algorithme de Boyer-Moore-Horspool","text":"<p>Cet algorithme permet de ne pas effectuer toutes les comparaisons et donc de gagner en efficacit\u00e9. En effet, la plupart du temps si on a eu une correspondance en position 1 il y a peu de chance d'en trouver une en position deux...encore que cela d\u00e9pend du motif.  L'algorithme de Boyer-Moore-Horspool va se d\u00e9rouler de la fa\u00e7on suivante :  On commence par cr\u00e9er une table appel\u00e9e la table de d\u00e9calage qui reprend la premi\u00e8re occurrence (\u00e0 partir de la fin) d'une lettre du motif et qui lui associe sa position dans le motif (\u00e0 partir de la fin toujours). Cette table ne contient pas la derni\u00e8re lettre.</p> <p>On cr\u00e9e une table de d\u00e9calage : </p> <p>proc\u00e9dure</p> <ol> <li>On compare la derni\u00e8re lettre du motif avec la lettre avec laquelle il est align\u00e9 (au d\u00e9part position N-1 du texte o\u00f9N est la longueur du motif)</li> <li>Si la lettre correspond, on regarde la lettre pr\u00e9c\u00e9dente.</li> <li>Si la lettre ne correspond pas on d\u00e9cale le motif de fa\u00e7on \u00e0 aligner la lettre du texte ne correspondant pas \u00e0 la premiere occurrence de cette meme lettre du motif (ci-dessus, le a ne correspond pas au d, on aligne le premier a du motif sur le a du texte (soit un d\u00e9calage de 3 comme indiqu\u00e9 dans la table))</li> <li>Si la non correspondance se fait sur une lettre autre que la premiere il faudra tenir compte de l'endroit o\u00f9 l'on est dans  le motif. (d\u00e9calage reel=decalage de la table - position dans le motif en partant de la fin).</li> </ol> <p>un exemple complet</p> <p>Table de d\u00e9calage : </p> lettre du texte ne correspondant pas nombre de d\u00e9calage g 3 l 1 o 2 i 4 r 5 toute autre lettre 6 (longueur du motif) <p></p> <p>On compare la derni\u00e8re lettre du motif, \"o\", on trouve une correspondance donc on continue.  On compare \"g\" du texte \u00e0 \"l\" du motif, il n'y a pas de correspondance, donc on d\u00e9cale. La table de d\u00e9calage donne 3 pour le \"g\", on d\u00e9cale de 3-1=2 car on a d\u00e9j\u00e0 eu une correspondance.   On recommence la comparaison avec le \"o\" du motif et le \"c\" du texte, il n'y a pas de correspondance, donc on d\u00e9cale de 6 car \"c\" n'est pas dans la table de d\u00e9calage. On compare le \"o\" du motif avec le  \"r\" du texte, et on d\u00e9cale de 5. On compare le \"o\" du motif avec le \"o\" du texte, il y a correspondance, on compare alors la lettre pr\u00e9c\u00e9dente.... jusqu'au \"r\". Il y a une correspondance compl\u00e8te, on m\u00e9morise la position du d\u00e9but du motif dans le texte : on a d\u00e9cal\u00e9 de 2+ 6 + 5 =  13 jusqu'ici donc on m\u00e9morise la position 13. Puis on red\u00e9cale de 1...  </p>"},{"location":"algorithmie/recherche_textuelle/#pseudocode","title":"Pseudocode","text":""},{"location":"algorithmie/recherche_textuelle/#table-de-decalage","title":"table de d\u00e9calage","text":"<pre><code>table de decalage (motif)\n  m = longueur du motif\n  cr\u00e9er un dictionnaire associant chaque lettre \u00e0 m\n  pour i allant de 0 \u00e0 m-2,\n      dictionnaire [ motif[i] ] = m - 1 - i\n  fin du pour\n  retourner le dictionnaire\n</code></pre>"},{"location":"algorithmie/recherche_textuelle/#recherche","title":"Recherche","text":"<pre><code>Algorithme Boyer-Moore-Horspool(x, t):\n  '''\n  x : motif, t : texte, m : longueur motif, n : celle du texte\n  d : tableau des derni\u00e8res occurrences du motif\n  '''\n  tant que j \u2264 n - m,\n    i = m - 1\n    tant que i \u2265 0 et t[j + i] = x[i]:\n      i = i-1\n    fin tant que\n    si i = -1 alors\n      j est une occurrence de x\n      j = j + 1\n    sinon\n      j = j + d[ t[j + i] ]\n    fin du si\n  fin du tant que\n</code></pre>"},{"location":"archi/crypto/","title":"Comment crypter ses donn\u00e9es?","text":"<p>Comment faire en sorte que deux personnes (Alice et Bob) s'\u00e9changent des informations sans que Eve puisse les lire. On ne peut pas l'emp\u00eacher d'intercepter le message mais si les donn\u00e9es sont crypt\u00e9es, elles seront inexploitables.</p>"},{"location":"archi/crypto/#chiffrement-symetrique","title":"Chiffrement sym\u00e9trique","text":"<p>La cryptographie sym\u00e9trique, \u00e9galement dite \u00e0 cl\u00e9 secr\u00e8te (par opposition \u00e0 la cryptographie asym\u00e9trique), est la plus ancienne forme de chiffrement. Elle permet \u00e0 la fois de chiffrer et de d\u00e9chiffrer des messages \u00e0 l'aide d'un m\u00eame mot cl\u00e9. On a des traces de son utilisation par les \u00c9gyptiens vers 2000 av. J.-C. (wikipedia)</p> <p>Alice envoie des donn\u00e9es chiffr\u00e9es \u00e0 Bob en utilisant une cl\u00e9 de chiffrement secr\u00e8te. Cette cl\u00e9 s\u00e9cr\u00e8te est la m\u00eame que celle utilis\u00e9e par Bob pour d\u00e9chiffrer le message. Il est donc n\u00e9cessaire de se mettre d'accord sur la cl\u00e9 avant transmission des donn\u00e9es.</p>"},{"location":"archi/crypto/#exemple-1-chiffremet-par-substitution","title":"Exemple 1 : chiffremet par substitution","text":"<p>On remplace une lettre par une autre de l'alphabet (mais pas dans l'ordre), on a donc 26! \u2248 4\u00d710<sup>26</sup>cl\u00e9s possibles. Avec la cl\u00e9 suivante : ABCDEFGHIJKLMNOPQRSTUVWXYZ alphabet AZERTYUIOPQSDFGHJKLMWXCVBN cl\u00e9 de substitution.   le message SUBSTITUTION devient LWZLMOMWMOGF</p>"},{"location":"archi/crypto/#exemple-2-chiffrement-de-verman-ou-chiffrement-xor","title":"Exemple 2: Chiffrement de Verman (ou chiffrement XOR)","text":"<p> Il s'agit d'un syst\u00e8me parfaitement s\u00fbr, le math\u00e9maticien C.Shannon a montr\u00e9 que si on respecte bien les 3 r\u00e8gles de Verman, ce syst\u00e8me est inviolable.  </p> <ul> <li>La cl\u00e9 doit \u00eatre une suite de caract\u00e8res au moins aussi longue que le message \u00e0 chiffrer.</li> <li>Les caract\u00e8res composant la cl\u00e9 doivent \u00eatre choisis de fa\u00e7on totalement al\u00e9atoire.</li> <li>Chaque cl\u00e9, ou \u00ab masque \u00bb, ne doit \u00eatre utilis\u00e9e qu'une seule fois (d'o\u00f9 le nom de masque jetable).</li> </ul> <p>Une m\u00e9thode particuli\u00e8rement efficace pour traiter le chiffrement et le d\u00e9chiffrement de messages \u00e0 partir de la cl\u00e9 est d'utiliser la fonction logique XOR, le ou exclusif qui a une particularit\u00e9 tr\u00e8s int\u00e9ressante dans notre cas.  </p> <p>Principe :  </p> <ul> <li>On choisit une cl\u00e9 (ici 'toto') que l'on traduit en binaire  (01110100011011110111010001101111)</li> <li>On choisit un message \u00e0 coder : 'Bonjour' que l'on traduit en binaire  (01000010011011110110111001101010011011110111010101110010)</li> <li>On applique la fonction XOR bit \u00e0 bit entre le message et la cl\u00e9  qu'il faudra reproduire pour avoir le m\u00eame nombre de bits.  </li> </ul> <p>01000010011011110110111001101010011011110111010101110010 \u2295  01110100011011110111010001101111011101000110111101110100  </p> <p>00110110000000000001101000000101000110110001101000000110     </p> <p>C=M\u2295S  o\u00f9 M est le message et S la cl\u00e9.  </p> <p>Pour d\u00e9chiffrer, on fait l'op\u00e9ration inverse : (M\u2295S)\u2295S=M</p> <p>Questions</p> <p>1.Dans quel domaine pouvait-on utiliser la cryptographie dans l'antiquit\u00e9 ? 2.Quel peut \u00eatre le risque dans le cas d'une interception de communication si on utilise le chiffrement sym\u00e9trique ?  Si Eve intercepte tous les messages elle peut aussi intercepter la cl\u00e9 qui est forc\u00e9ment transmise en clair. 3.Dans le cas des deux syst\u00e8mes propos\u00e9s, quel est la cl\u00e9 secr\u00e8te ?  4.Coder votre pr\u00e9nom gr\u00e2ce au code de Verman avec comme cl\u00e9 'nsi'. un peu plus rapide</p>"},{"location":"archi/crypto/#chiffrement-asymetrique","title":"Chiffrement asym\u00e9trique","text":"<p>Le principe du chiffrement asym\u00e9trique c'est que la cl\u00e9 de chiffrement n'est pas la m\u00eame que la cl\u00e9 de d\u00e9chiffrement. La personne qui crypte le message et l'envoie, ne connait pas la cl\u00e9 de d\u00e9chiffrement. Elle fut invent\u00e9e par Whitfield Diffie et Martin Hellman en 1976, qui re\u00e7urent le prix Turing de 2015 pour cette d\u00e9couverte.  </p> <p>  En cryptographie asym\u00e9trique on a 2 cl\u00e9s:</p> <ul> <li>la cl\u00e9 publique: Celle-ci, tout le monde peut la poss\u00e9der, il n'y a aucun risque, vous pouvez la transmettre \u00e0 n'importe qui. Elle sert \u00e0 chiffrer le message.</li> <li>la cl\u00e9 priv\u00e9e: que seul le r\u00e9cepteur poss\u00e8de, en l'occurrence vous. Elle servira \u00e0 d\u00e9chiffrer le message chiffr\u00e9 avec la cl\u00e9 publique. </li> </ul> <p>On peut simplifier la situtation en utilisant l'analogie du cadenas. Alice envoie un coffre \u00e0 Bob avec  un cadenas ouvert. Bob y range son message et ferme  le cadenas (il ne poss\u00e8de pas la cl\u00e9). Il envoie le tout \u00e0 Alice qui est la seule \u00e0 pouvoir l'ouvrir.</p>"},{"location":"archi/crypto/#exemple-puzzle-de-merkle","title":"Exemple : Puzzle de Merkle","text":"<p>Alice cr\u00e9e un fichier contenant un grand nombre de lignes (par exemple 100 000) du type : <pre><code>\u2026\nIdentifiant :  129378, cl\u00e9 : abAZda9h!snasjda\nIdentifiant : 821012, cl\u00e9 : sladljl32#QSdsal\nIdentifiant : 321091, cl\u00e9 : 9Sakns281alSA@31\n\u2026\n</code></pre></p> <p>Elle va ensuite chiffrer chaque ligne avec un algorithme de chiffrement sym\u00e9trique et une cl\u00e9 de faible longueur, diff\u00e9rente pour chaque ligne, de fa\u00e7on \u00e0 \u00eatre facilement d\u00e9crypt\u00e9e par une attaque de force brute. Alice envoie le fichier contenant les lignes \u00e0 Bob qui choisit une ligne au hasard et la d\u00e9crypte par force brute. Il envoie ensuite son identifiant (en clair) \u00e0 Alice accompagn\u00e9 du message crypt\u00e9 gr\u00e2ce \u00e0 la cl\u00e9 appel\u00e9 cl\u00e9 de session (valable pour toute la session de communication). Alice n'a plus qu'\u00e0 regarder dans son fichier quelle cl\u00e9 elle doit utiliser pour d\u00e9crypter le message.  Une personne qui intercepterait la communication ne saurait pas quelle ligne a \u00e9t\u00e9 r\u00e9solue et aurait tout \u00e0 r\u00e9soudre pour trouver la cl\u00e9, ce qui donne beaucoup plus de travail mais n'est pas impossible.  </p> <p>Questions</p> <p>5.Quelle est la cl\u00e9 publique de ce syst\u00e8me ? 6.En quoi, le puzzle de Merkle est \u00e0 la limite du chiffrement asym\u00e9trique.   </p>"},{"location":"archi/crypto/#protocole-https","title":"Protocole HTTPS","text":"<p>Pour qu\u2019un message entre deux machines dans un r\u00e9seau informatique ne puisse pas \u00eatre compr\u00e9hensible s\u2019il est intercept\u00e9, il faut qu\u2019il soit chiffr\u00e9. Il y a deux mani\u00e8res principales pour le faire : -   Par un chiffrement sym\u00e9trique qui utilise une cl\u00e9 unique, connue seulement de l\u2019\u00e9metteur et du r\u00e9cepteur. L\u2019\u00e9metteur chiffre le message avec la cl\u00e9 et le r\u00e9cepteur le d\u00e9chiffre avec la m\u00eame cl\u00e9. -   Par un chiffrement asym\u00e9trique qui utilise un couple de cl\u00e9, l\u2019une publique connue de tout le monde, l\u2019autre priv\u00e9e connue uniquement par le r\u00e9cepteur. L\u2019\u00e9metteur chiffre le message avec la cl\u00e9 publique. Le r\u00e9cepteur le d\u00e9chiffre avec la cl\u00e9 priv\u00e9e. Ces deux m\u00e9thodes de chiffrement sont utilis\u00e9es lorsqu\u2019un navigateur demande une page web avec le protocole HTTPS. Dans le sch\u00e9ma ci-dessous, on a repr\u00e9sent\u00e9 les \u00e9changes de communications entre un client et un serveur avec le protocole HTTPS. Les \u00e9changes entre client et serveur se font avec un chiffrement sym\u00e9trique (cl\u00e9 K2) apr\u00e8s que celle-ci ait \u00e9t\u00e9 \u00e9chang\u00e9e avec un chiffrement asym\u00e9trique. </p>"},{"location":"archi/crypto/#certificat","title":"Certificat","text":"<p>Pour \u00e9viter le probl\u00e8me du \"Man in the middle\" qui pourrait intercepter les messages entre Bob et Alice, on peut utiliser le principe des certificats pour certifier que les cl\u00e9s publiques appartiennent bien \u00e0 la personne \u00e0 laquelle elle semble appartenir. Ce certificat est un fichier contenant la cl\u00e9 publique, des informations sur la personne et une signature num\u00e9rique que seule la personne \u00e0 qui appartient la cl\u00e9 publique peut cr\u00e9er car elle est chiffr\u00e9e \u00e0 l'aide de la cl\u00e9 priv\u00e9e.</p> <p>Questions</p> <p>7.Faites quelques recherches pour r\u00e9sumer en quelques phases (\u00e9ventuellement avec un sch\u00e9ma) le principe du \"Man in the middle\". 8.Dans quels cas utilise-t-on les certificats ?   </p> <p>Compl\u00e9ments</p> <p> </p> <p>Dates cl\u00e9s de la cryptographie</p> <p> </p> <p>Ce que je retiens</p> <p></p>"},{"location":"archi/enigma/","title":"Et si on codait Enigma?","text":""},{"location":"archi/enigma/#quest-ce-que-enigma","title":"Qu\u2019est-ce que Enigma ?","text":"<p>Enigma a \u00e9t\u00e9 invent\u00e9e et utilis\u00e9e par les NAZIS lors de la deuxi\u00e8me guerre mondiale pour transmettre des messages aux troupes sans que personne ne puisse les comprendre. La machine permettait de crypter les messages en utilisant une cl\u00e9 qui changeait chaque jour.  Le d\u00e9cryptage se faisait par la m\u00eame machine \u00e0 condition qu\u2019elle soit configur\u00e9e de la m\u00eame fa\u00e7on.  </p> <p></p>"},{"location":"archi/enigma/#comment-fonctionne-t-elle","title":"Comment fonctionne-t-elle ?","text":"<p> Un clavier permettait \u00e0 l\u2019utilisateur de saisir une lettre, qui en passant dans un r\u00e9seau de c\u00e2blage pouvait \u00eatre modifi\u00e9e. Chaque jour 6 paires de lettres \u00e9taient invers\u00e9e (soit 12 lettres modifi\u00e9es) mais pas les autres. Ensuite, le signal \u00e9lectrique passait dans un premier rotor qui modifiait la lettre \u00e0 l\u2019aide d\u2019une connexion \u00e9lectrique. Le signal passe ensuite dans deux autres rotors qui modifient chacun la lettre, puis dans un r\u00e9flecteur, qui en plus de modifier la lettre renvoie le signal dans les rotors en sens inverse.  La lettre de d\u00e9part est alors modifi\u00e9e 9 fois. La lettre en sortie s\u2019allume sur un panneau lumineux. La fr\u00e9quence d\u2019apparition des lettres dans une langue pourrait permettre de trouver rapidement la lettre de remplacement, c\u2019est pourquoi la machine permettait de ne pas coder deux fois la m\u00eame lettre de la m\u00eame fa\u00e7on. Pour cela, \u00e0 chaque appui sur le clavier, le premier rotor tourne d\u2019un cran. Quand il a fait un tour, le second rotor tourne d\u2019un cran.  </p>"},{"location":"archi/enigma/#quels-sont-les-reglages","title":"Quels sont les r\u00e9glages ?","text":"<p>  Les rotors contiennent les lettres de l\u2019alphabet dans le d\u00e9sordre et sont tous diff\u00e9rents. Les r\u00e9glages n\u00e9cessitent de choisir 3 rotors parmi 5, d\u2019en d\u00e9terminer l\u2019ordre et le r\u00e9glage de d\u00e9part, c\u2019est-\u00e0-dire la lettre qui correspondra au \u00ab A \u00bb lors de la premi\u00e8re frappe.  On fait de m\u00eame en s\u00e9lectionnant un r\u00e9flecteur parmi deux. Ici le positionnement sera fixe. Le dernier r\u00e9glage consiste \u00e0 choisir 6 paires de lettres dans l\u2019alphabet et de les inverser par c\u00e2blage \u00e9lectrique. Comment d\u00e9crypter ?  Si le r\u00e9glage initial est le m\u00eame il suffit de saisir au clavier la lettre \u00e0 d\u00e9coder et sur le panneau lumineux s\u2019affiche la lettre en clair.</p>"},{"location":"archi/enigma/#comment-a-ete-craque-enigma","title":"Comment a \u00e9t\u00e9 craqu\u00e9 Enigma ?","text":"<p>Un petit tour par ici</p>"},{"location":"archi/enigma/#quallons-nous-faire","title":"Qu\u2019allons nous faire ?","text":"<p>Nous allons cr\u00e9er un programme permettant de configurer la machine avec des r\u00e9glages donn\u00e9s et crypter et d\u00e9crypter des messages. Nous allons simplifier l\u2019utilisation en n\u2019utilisant que les 26 lettres en majuscules de l\u2019alphabet. Pas de minuscules, pas d\u2019espaces et pas de caract\u00e8res sp\u00e9ciaux. Nous n\u2019utiliserons que 3 rotors, mais les derni\u00e8res versions en utilisaient davantage.  </p>"},{"location":"archi/enigma/#mise-en-place-du-probleme","title":"Mise en place du probl\u00e8me","text":""},{"location":"archi/enigma/#le-principe-de-base","title":"Le principe de base","text":"<p>Nous allons prendre un exmple avec le sch\u00e9ma ci-dessous :   La lettre A en passant par le rotor III devient B. Le B devient K en passant par le rotor I et le D devient S en passant par le rotor V. A ce stade, la lettre a d\u00e9j\u00e0  chang\u00e9 3 fois et on en est m\u00eame pas \u00e0 la moiti\u00e9. En passant par le r\u00e9flecteur, le S devient X et on repart dans le rotor V. Attention, ici le raisonnement se fait dans l'autre sens. En repassant par le rotor V, la lettre X se transforme en P. Il faut chercher X dans la liste du rotor V et voir \u00e0 quelle lettre de l'alphabet \u00e0 coder cela correspond. En cherchant P dans le rotor I, on voit qu'il devient T et T devient J dans le rotor III.</p> <p>La lettre A est alors cod\u00e9e en J.  </p> <p>Une fois la premi\u00e8re lettre cod\u00e9e, le premier rotor (le III) tourne d'un cran :</p> <p>Si on cherche \u00e0 recoder la lettre 'A' on trouve alors un 'V'. A va devenir D dans le premier rotor puis D deviendra F en passant par le second rotor, F devient  I dans le troisi\u00e8me rotor puis V dans le r\u00e9flecteur. V va devenir A, A deviendra U et U deviendra V. </p>"},{"location":"archi/enigma/#decryptage-du-message","title":"D\u00e9cryptage du message","text":"<p>Le g\u00e9nie de cette machine r\u00e9side dans la simplificit\u00e9 d'utilisation. En effet, si les r\u00e9glages sont identiques le d\u00e9cryptage du message se fait de la m\u00eame fa\u00e7on que le cryptage. Ainsi, quelqu'un qui re\u00e7oit les lettres 'JV' en les entrant dans la machine doit pouvoir lire le message en clair de d\u00e9part \u00e0 savoir 'AA'.  </p> <p>Faites le test</p> <p>En utilisant le tableau donn\u00e9, v\u00e9rifier le d\u00e9crryptage. </p>"},{"location":"archi/enigma/#cablages","title":"C\u00e2blages","text":"<p>Pour augmenter le brouillage, avant m\u00eame de rentrer dans les rotors, 6 paires de lettres \u00e9taient invers\u00e9es. Le principe est le m\u00eame que le cryptage pr\u00e9c\u00e9dent mais avant m\u00eame de passer par les rotors, certaines lettre sont transform\u00e9es en une autre. Dans l'exemple ci-dessous vous pouvez voir que pour A cela ne change rien puisqu'elle ne fait pas partie des lettres invers\u00e9es.</p> <p>avec le cabl\u00e2ge</p> <p>A l'aide du nouveau tableau contenant le cabl\u00e2ge,  essayer de crypter deux fois de suite la lettre C. </p> Faites le avant pour \u00eatre sur d'avoir compris <p>Premier C : I dans le cablage, devient R par le premier rotor, R devient U par le deuxieme rotor, U devient Q par le 3e rotor, et Q devient Z dans le r\u00e9flecteur. Le Z du r\u00e9flecteur devient un B dans le rotor V, puis le B devient W, le W devient R et le R par l'inversion du c\u00e2blage devient un S. Le premier rotor tourne d'un cran et le O passe en 1er et tout se d\u00e9cale vers la droite. Deuxi\u00e8me C : I dans le cablage, devient T par le premier rotor (attention le rotor a tourn\u00e9), T devient P par le deuxieme rotor, P devient X par le 3e rotor, et X devient S dans le r\u00e9flecteur. Le S du r\u00e9flecteur devient un K dans le rotor V, puis le K devient B, le B devient Z (le rotor a tourn\u00e9) et le Z par l'inversion du c\u00e2blage devient un O.  </p>"},{"location":"archi/enigma/#implementation-des-rotors-et-des-reflecteurs","title":"Impl\u00e9mentation des rotors et des r\u00e9flecteurs","text":"<p>Les rotors que nous utiliserons seront ceux d'origine. Pour cela nous aurons une variable globale <code>rotors</code> qui sera un tuple contenant les cha\u00eenes de 26 caract\u00e8res, dans l'ordre dans lequel elles apparaissaient sur les rotors d'Enigma. M\u00eame chose pour les r\u00e9flecteurs. Voici les variables globales utilis\u00e9es dans le programme : <pre><code>alphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nrotors=('EKMFLGDQVZNTOWYHXUSPAIBRCJ',\n        'AJDKSIRUXBLHWTMCQGZNPYFVOE',\n        'BDFHJLCPRTXVZNYEIWGAKMUSQO',\n        'ESOVPZJAYQUIRHXLNFTGKDCMWB',\n        'VZBRGITYUPSDNHLXAWMJQOFECK')\nREFLECTEURS = ('YRUHQSLDPXNGOKMIEBFZCWVJAT', 'RDOBJNTKVEHMLFCWZAXGYIPSUQ')\n</code></pre></p>"},{"location":"archi/enigma/#choix-du-niveau-du-projet","title":"Choix du niveau du projet","text":"<p>Vous allez pouvoir choisir le niveau du projet que vous allez traiter. Le but est de rendre un programme qui crypte les messages \u00e0 la mani\u00e8re d'Enigma m\u00eame si toutes les particularit\u00e9s de la machine ne sont pas respect\u00e9es. Bien s\u00fbr plus le niveau choisi sera \u00e9lev\u00e9 plus la note sera \u00e9lev\u00e9e mais la note sera meilleure avec un projet de niveau 2 qui fonctionne qu'avec un projet de niveau trois qui ne fonctionne pas. Il sera plus facile de passer en cours de route d'un niveau plus faible \u00e0 un niveau plus \u00e9lev\u00e9 que l'inverse.  </p> <p>Niveau 1 : Pas de rotation des rotors et pas de c\u00e2blage (note maximale 12/20 avec le Bonus) Niveau 2 : Rotation des rotors mais pas de c\u00e2blage (note maximale 16/20) Niveau 3 : Programmation compl\u00e8te avec rotation des rotors et cabl\u00e2ge (note maximale 20/20) Bonus : On pourra pr\u00e9voir de faire entrer les valeurs de r\u00e9galges par l'utilisateur et de g\u00e9rer les entr\u00e9es \u00e9ronn\u00e9es avec des blocs <code>try ... except...</code>.  </p>"},{"location":"archi/enigma/#implementation-de-la-machine","title":"Impl\u00e9mentation de la machine","text":"<p>On cr\u00e9era une classe <code>enigma</code> qui cr\u00e9era une machine avec les r\u00e9glages donn\u00e9s par votre Furher.  Cette classe permettra de calculer la lettre sortant d'un rotor, des cabl\u00e2ges et du reflecteur et fera tourner les rotors apr\u00e8s avoir crypter une lettre. Cette classe prendra en param\u00e8tres les trois rotors choisis par le Furher dans l'ordre, les r\u00e9glages initiaux de chacun des trois rotors, le choix du r\u00e9flecteur et dans le cas du niveau 3, la liste de lettres \u00e0 inverser par c\u00e2blage. Niveau 1 et 2: La cr\u00e9ation de l'objet <code>machine</code>de la classe <code>enigma</code> doit se faire de cette fa\u00e7on: <pre><code>machine=enigma(premier_rotor,deuxieme_rotor,troisieme_rotor,reglage_premier_rotor,reglage_deuxieme_rotor,\n               reglage_troisieme_rotor,choix_reflecteur)\n</code></pre></p> <p>Type des param\u00e8tres</p> <p><code>premier_rotor</code>,<code>deuxieme_rotor</code> , <code>troisieme_rotor</code> et <code>choix_reflecteur</code> sont des cha\u00eenes de 26 caract\u00e8res contenant les lettres du rotor. Il faudra utiliser la variable globale <code>rotors</code> pour les r\u00e9cup\u00e9rer. <code>reglage_premier_rotor</code>,<code>reglage_deuxieme_rotor</code> et <code>reglage_troisieme_rotor</code>  sont des cha\u00eenes de 1 caract\u00e8re. il s'agit de la lettre apparaissant en premier.  </p> <p>Niveau 3 :  La cr\u00e9ation de l'objet <code>machine</code>de la classe <code>enigma</code> doit se faire de cette fa\u00e7on: <pre><code>machine=enigma(premier_rotor,deuxieme_rotor,troisieme_rotor,reglage_premier_rotor,reglage_deuxieme_rotor,\n               reglage_troisieme_rotor,choix_reflecteur,suite_cablage)\n</code></pre></p> <p>Type des param\u00e8tres</p> <p><code>premier_rotor</code>,<code>deuxieme_rotor</code> , <code>troisieme_rotor</code> et <code>choix_reflecteur</code> sont des cha\u00eenes de 26 caract\u00e8res contenant les lettres du rotor. Il faudra utiliser la variable globale <code>rotors</code> pour les r\u00e9cup\u00e9rer. <code>reglage_premier_rotor</code>,<code>reglage_deuxieme_rotor</code> , <code>reglage_troisieme_rotor</code> et<code>reglage_reflecteur</code> sont des cha\u00eenes de 1 caract\u00e8re. il s'agit de la lettre apparaissant en premier. <code>suite_cablage</code> est une cha\u00eene de 6 paires caract\u00e8res \u00e0 inverser.</p>"},{"location":"archi/enigma/#fonctions","title":"Fonctions","text":"<pre><code>#variables globales\nalphabet='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nrotors=('EKMFLGDQVZNTOWYHXUSPAIBRCJ',\n        'AJDKSIRUXBLHWTMCQGZNPYFVOE',\n        'BDFHJLCPRTXVZNYEIWGAKMUSQO',\n        'ESOVPZJAYQUIRHXLNFTGKDCMWB',\n        'VZBRGITYUPSDNHLXAWMJQOFECK')\nREFLECTEURS = ('YRUHQSLDPXNGOKMIEBFZCWVJAT', 'RDOBJNTKVEHMLFCWZAXGYIPSUQ')\n\n\nclass enigma:\n    def __init__(self,...):\n        '''initilisation de la classe en utilisant les param\u00e8tres donn\u00e9s dans le d\u00e9tail du projet'''\n        self.rotor1=... #str contenant 26 caract\u00e8res\n        self.rotor2=...\n        self.rotor3=...\n        self.reflecteur=...\n        self.cablage=...  #str contenant les lettres \u00e0 inverser dans l'ordre\n        self.alphabet_cable=''  #str de 26 lettres contenant l'aphabet cabl\u00e9\n        self.pos_rotor1=... #premiere lettre du rotor dans la position initiale\n        self.pos_rotor2=...\n        self.pos_rotor3=...\n\n\n    def inversion(self):#niveau 3 uniquement\n        '''cette fonction renvoi les lettre de l'alphabet dont l'ordre\n        est modifi\u00e9 par la chaine de cablage.\n        avec un cablage ='ABCDEFGHIJKL'\n        la fonction doit renvoyer 'BADCFEHGJILKMNOPQRSTUVWXYZ'''\n\n\n    def positionner_rotors(self):#tous les niveaux\n        '''cette fonction ne retourne aucune valeur mais modifie les chaines de caracteres repr\u00e9sentant les rotors.\n        par exemple un rotor 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' avec un r\u00e9glage de 'L' devrait etre\n        modifi\u00e9 par la fonction en 'LMNOPQRSTUVWXYZABCDEFGHIJK'\n        '''    \n\n    def configuration(self):#tous les niveaux\n        '''cette fonction ne renvoie rien mais execute la configuration de la\n        machine, \u00e0 savoir la modification du cablage de l'alphabet, le positionnement des rotors\n        et m\u00e9morise dans de nouveaux attribut la derniere lettre de chaque rotor afin que\n        lors de la rotation on puisse savoir si on est \u00e0 la fin du tour'''\n\n\n    def tourner_rotor(self,rotor):#niveaux 2 et 3\n        '''cette fonction renvoie le rotor une fois sa position modifi\u00e9e de un cran'''\n\n    def rotation_rotors(self):#niveaux 2 et 3\n        '''cette fonction programme la rotation des rotors. Elle ne renvoie rien mais permet\n        la rotation de un cran en tenant compte du fait que lorsque le premier a fait un tour le deuxieme tourne d'un cran et ainsi de suite.\n        On modifie les attributs li\u00e9s au rotor en appliquant la fonction de rotation et on v\u00e9rifie si on a atteint la fin du tour\n        avec les attributs li\u00e9 \u00e0 la lettre de fin cr\u00e9\u00e9 dans la fonction de configuration'''\n\n\n    def passage_rotor(self,lettre, rotor):#tous niveaux\n        '''prend en param\u00e8tre une lettre et un rotor dans une certaine position\n        et renvoie la lettre transform\u00e9e par le passage dans le rotor'''\n\n\n    def passage_inverse_rotor(self,lettre,rotor):#tous niveaux\n        '''Prend en param\u00e8tre une lettre et un rotor dans une certaine position\n        et renvoie la lettre transform\u00e9e par le passage en SENS INVERSE dans le\n        rotor'''\n\n\n    def passage_reflecteur(self,lettre):#tous niveaux\n        '''Prend en param\u00e8tre une lettre  \n        et renvoie la lettre transform\u00e9e par le reflecteur'''\n\n\n    def passage_cablage(self,lettre):#niveau 3\n        '''Prend en param\u00e8tre une lettre  \n        et renvoie la lettre transform\u00e9e par le cablage'''\n\n    def passage_cablage_inverse(self,lettre):#niveau 3\n        '''Prend en param\u00e8tre une lettre  \n        et renvoie la lettre transform\u00e9e par le passage en sens inverse par le c\u00e2blage\n        '''\n\n    def crypter_lettre(self,lettre):#tous niveaux\n        '''Prend en param\u00e8tre une lettre \u00e0 coder etrenvoie la lettre apr\u00e8s avoir\n        subi toute les \u00e9tapes de traitement cablage, 3 rotors, reflecteur,\n        3 rotors en sens inverse'''\n        ...\n        return lettre\n\n\n#niveau 2 et 3 vous penserez \u00e0 caser quelque part la rotation des rotors mais je vous laisse r\u00e9fl\u00e9chir \u00e0 l'endroit\n\nclass message:\n    '''cette classe va prendre en argument un message et une\n    instance de la classe enigma pour traiter le message'''\n    def __init__(self,message,machine):\n        '''initialisation de la classe'''\n        self.message=...\n        self.machine=...\n\n    def crypter(self):\n        '''cette fonction va appliquer les reglages de la machine cr\u00e9\u00e9e par la classe\n        Enigma \u00e0 une chaine de caracteres correspondant au message. Chaque lettre\n        du message devra \u00eatre crypt\u00e9e'''\n        ...\n        return msg_crypte\n\n####### programme principal ##############\nif __name__=='__main__':\n\n    ##choix des r\u00e9glages\n    #choix des rotors das l'ordre que l'on veut parmi les 5\n    premier_rotor=...\n    deuxieme_rotor=...\n    troisieme_rotor=...\n    #choix du r\u00e9flecteur entre le premier et le deuxieme\n    choix_reflecteur=...\n    #choix de la lettre plac\u00e9e en premiere position pour chaque rotor\n    reglage_premier_rotor=...\n    reglage_deuxieme_rotor=...\n    reglage_troisieme_rotor=...\n\n    #niveaux 1 et 2\n    machine=enigma(premier_rotor,deuxieme_rotor,troisieme_rotor,reglage_premier_rotor,reglage_deuxieme_rotor,\n                   reglage_troisieme_rotor,choix_reflecteur)\n    machine.configuration()\n\n    #niveau 3\n    #suite de lettres \u00e0 inverser deux \u00e0 deux (on inverse la premiere et la deuxieme, la troisieme et la quatri\u00e8me ...\n    suite_cablage=...\n    machine=enigma(premier_rotor,deuxieme_rotor,troisieme_rotor,reglage_premier_rotor,reglage_deuxieme_rotor,\n                   reglage_troisieme_rotor,choix_reflecteur,suite_cablage)\n    machine.configuration()\n\n    #vous completerez le programe de fa\u00e7on \u00e0 afficher un message crypt\u00e9 et \u00e0 tester son\n    #d\u00e9cryptage\n    msg=message(...)\n</code></pre> <p>D\u00e9crypter ceci</p> <p>Pour tester votre machine votre Furher vous demande d'utiliser les r\u00e9glages suivants : rotors dans l'ordre, IV (r\u00e9glage D), II (r\u00e9glage A) et III (r\u00e9glage C) r\u00e9lecteur A  et c\u00e2blage 'ENIGMATURING'. D\u00e9crypter le message Niveau 1 : XITDETNCISCDTYERRI. Niveau 2 : XQAXREIANLYOWWANWV. Niveau 3 : SFLSXGGNNQPLUJDYZF.  </p>"},{"location":"archi/processus/","title":"Gestion des processus","text":""},{"location":"archi/processus/#quest-ce-quun-processus","title":"Qu'est-ce qu'un processus?","text":"<p>Un programme \u00e9crit \u00e0 l'aide d'un langage de haut de niveau (on parle de \"code source\") est, comme nous l'avons vu l'ann\u00e9e derni\u00e8re, transform\u00e9 en langage machine afin de pouvoir \u00eatre ex\u00e9cut\u00e9 par un ordinateur.  </p> <p>On appelle processus un programme en cours d'ex\u00e9cution. </p> <p>Attention</p> <p>Il ne faut pas confondre le code source du programme et un processus, qui lui correspond \u00e0 l'ex\u00e9cution de ce programme par un ordinateur. Pour prendre une image assez classique, si une recette de cuisine correspond au code source du programme, le cuisinier en train de pr\u00e9parer cette recette dans sa cuisine correspond \u00e0 un processus.   </p>"},{"location":"archi/processus/#etats-dun-processus","title":"Etats d'un processus","text":"<p>Tous les syst\u00e8mes d'exploitation \"modernes\" (Linux, Windows, macOS, Android, iOS...) sont capables de g\u00e9rer l'ex\u00e9cution de plusieurs processus en m\u00eame temps. Mais pour \u00eatre pr\u00e9cis, cela n'est pas en v\u00e9ritable \"en m\u00eame temps\", mais plut\u00f4t un \"chacun son tour\". Pour g\u00e9rer ce \"chacun son tour\", les syst\u00e8mes d'exploitation attribuent des \"\u00e9tats\" au processus.</p> <p>Voici les diff\u00e9rents \u00e9tats :</p> <p> - Lors du d\u00e9marrage d'un programme ou de l'ouverture d'un nouvel onglet par exemple, un processus est cr\u00e9\u00e9, il estdans l'\u00e9tat nouveau. - Lorsqu'un processus est en train de s'ex\u00e9cuter (qu'il utilise le microprocesseur), on dit que le processus est dans l'\u00e9tat en ex\u00e9ution. - Un processus qui se trouve dans l'\u00e9tat en ex\u00e9ution peut demander \u00e0 acc\u00e9der \u00e0 une ressource pas forc\u00e9ment disponible instantan\u00e9ment (par exemple lire une donn\u00e9e sur le disque dur). Le processus ne peut pas poursuivre son ex\u00e9cution tant qu'il n'a pas obtenu cette ressource. En attendant de recevoir cette ressource, il passe de l'\u00e9tat \"en ex\u00e9ution\" \u00e0 l'\u00e9tat en attente.    </p> <p>Lorsque le processus finit par obtenir la ressource attendue, celui-ci peut potentiellement reprendre son ex\u00e9cution. Mais comme nous l'avons vu ci-dessus, les syst\u00e8mes d'exploitation permettent de g\u00e9rer plusieurs processus \"en m\u00eame temps\", mais un seul processus peut se trouver dans un \u00e9tat \"en ex\u00e9ution\" (le microprocesseur ne peut \"s'occuper\" que d'un seul processus \u00e0 la fois). Quand un processus passe d'un \u00e9tat \"en ex\u00e9ution\" \u00e0 un \u00e9tat \"en attente\", un autre processus peut alors \"prendre sa place\" et passer dans l'\u00e9tat \"en ex\u00e9ution\". Le processus qui vient de recevoir la ressource attendue ne va donc pas forc\u00e9ment pouvoir reprendre son ex\u00e9cution tout de suite, car pendant qu'il \u00e9tait dans un \u00e9tat \"en attente\" un autre processus a \"pris sa place\". Un processus qui quitte l'\u00e9tat en attente ne repasse pas forc\u00e9ment \u00e0 l'\u00e9tat \"en ex\u00e9ution\", il peut, en attendant que \"la place se lib\u00e8re\" passer dans l'\u00e9tat pr\u00eat (sous entendu \"j'ai obtenu ce que j'attendais, je suis pr\u00eat \u00e0 reprendre mon ex\u00e9cution d\u00e8s que la \"place sera lib\u00e9r\u00e9e\"\").</p> <ul> <li>une fois le processus termin\u00e9 il passe dans l'\u00e9tat arr\u00eat\u00e9.</li> </ul> <p>Le passage de l'\u00e9tat \"pr\u00eat\" vers l'\u00e9tat \"en ex\u00e9ution\" constitue l'op\u00e9ration \"d'\u00e9lection\". Le passage de l'\u00e9tat en ex\u00e9ution vers l'\u00e9tat en attente est l'op\u00e9ration de \"blocage\". Un processus est toujours cr\u00e9\u00e9 dans l'\u00e9tat \"pr\u00eat\". Pour se terminer, un processus doit obligatoirement se trouver dans l'\u00e9tat \"en ex\u00e9ution\". </p>"},{"location":"archi/processus/#evolution-des-processus","title":"Evolution des processus","text":"<p>Dans un syst\u00e8me monot\u00e2che (processeur simple coeur pour simplifier) une seule t\u00e2che peut \u00eatre ex\u00e9cut\u00e9e \u00e0 la fois.</p> <p>Un exemple concret</p> Etapes de mes recettes <p>Imaginons que je doive pr\u00e9parer seule le repas comprenant des boulettes de viande en plat et un g\u00e2teau en dessert Je pourrai choisir de faire l'un d'abord et l'autre ensuite, mais il y aura des temps de latence qui me ferai perdre mon temps. Par exemple pendant que le beurre fond j'attends au lieu de faire autre chose. Voici les \u00e9tapes de la pr\u00e9paration de mes boulettes :</p> <ol> <li>\u00e9mincer l'oignon (n\u00e9cessite le mixeur)</li> <li>peler mes tomates (n\u00e9cessite le microonde)</li> <li>m\u00e9langer la viande, les tomates et l'oignon (n\u00e9cessite le mixeur)</li> <li>Fa\u00e7onner les boulettes (n\u00e9cessite mes mains)</li> <li>Cuire les boulettes (n\u00e9cessite le four)</li> </ol> <p>Et les \u00e9tapes de la pr\u00e9paration de mon gateau :</p> <ol> <li>M\u00e9langer les ingr\u00e9dients secs (mains)</li> <li>faire fondre le beurre (microonde)</li> <li>faire fondre le chocolat (microonde)</li> <li>m\u00e9langer le tout (mains)</li> <li>cuire (four)</li> </ol> <p>Certaines ressources vont devoir \u00eatre partag\u00e9es et certaines \u00e9tapes vont devoir attendre que la ressource se lib\u00e8re. Je ne ferai pas fondre le chocolat en meme temps que le beurre (mon microonde est extr\u00e8mement petit).</p> Ordre de r\u00e9alisation <p>Je vais donc choisir de faire les choses dans cet ordre :</p> <ol> <li>\u00e9mincer l'oignon (n\u00e9cessite le mixeur)</li> <li>M\u00e9langer les ingr\u00e9dients secs (mains)</li> <li>peler mes tomates (n\u00e9cessite le microonde)</li> <li>faire fondre le beurre (microonde) il va falloir attendre la fin de l'\u00e9tape 3 avat de passer \u00e0 la 4</li> <li>m\u00e9langer la viande, les tomates et l'oignon (n\u00e9cessite le mixeur) RAS le mixeur est libre</li> <li>faire fondre le chocolat (microonde) RAS le beurre a fini de fondre</li> <li>Fa\u00e7onner les boulettes (n\u00e9cessite mes mains) les boulettes sont pr\u00eates \u00e0 cuire le four est libre et le gateau n'est pas fini</li> <li>Cuire les boulettes (n\u00e9cessite le four)</li> <li>m\u00e9langer le tout (mains) *pendant que les boulettes cuisent je finis le g\u00e2teau</li> <li>cuire (four)</li> </ol> <p>vocabulaire</p> <p>Chaque \u00e9tape de ma recette est une \u00e9tape de processus est appel\u00e9e thread. Le processus est alors la recette enti\u00e8re.  </p> <p>Les diff\u00e9rentes t\u00e2ches (thread) d'un ordinateur sont r\u00e9alis\u00e9es de cette fa\u00e7on lorsque plusieurs applications sont ouvertes en m\u00eame temps. Chaque programme attend son tour et la disponibilit\u00e9 de la ressource.</p> <p>Comment aurais-je pu aller plus vite?</p> <p>En demandant de l'aide \u00e0 quelqu'un, j'aurai pu r\u00e9aliser les pr\u00e9paration r\u00e9ellement en parall\u00e8le alors qu'ici je les ai r\u00e9aliser en concurrence. C'est le principe du processeur multicoeur. Chaque coeur fera une chose \u00e0 la fois mais les diff\u00e9rents coeurs trvaiallent en parall\u00e8le.  </p> <p>Arr\u00eat d'un processus S'il a fini d'\u00eatre ex\u00e9cut\u00e9 le processus s'arr\u00eate. Si une t\u00e2che fait \"planter\" le processeur (on verra plus tard pour quelle raison) on peut \"tuer\" le processus \u00e0 l'aide d'une commande <code>kill</code>ou le f\u00e2meux <code>fin de t\u00e2che``de Windows.</code></p> <p></p> <p>Un processus peut cr\u00e9er un ou plusieurs processus \u00e0 l'aide d'une commande syst\u00e8me . Imaginons un processus A qui cr\u00e9e un processus B. On dira que A est le p\u00e8re de B et que B est le fils de A. B peut, \u00e0 son tour cr\u00e9\u00e9 un processus C (B sera le p\u00e8re de C et C le fils de B). On peut mod\u00e9liser ces relations p\u00e8re/fils par une structure arborescente.</p> <p>Le tout premier processus s'appelle <code>\u00ecnit</code> et il est cr\u00e9\u00e9 \u00e0 partir de rien.  PID et PPID</p> <p>Chaque processus poss\u00e8de un identifiant appel\u00e9 PID (Process Identification), ce PID est un nombre. Le premier processus cr\u00e9\u00e9 au d\u00e9marrage du syst\u00e8me \u00e0 pour PID 0, le second 1, le troisi\u00e8me 2... Le syst\u00e8me d'exploitation utilise un compteur qui est incr\u00e9ment\u00e9 de 1 \u00e0 chaque cr\u00e9ation de processus, le syst\u00e8me utilise ce compteur pour attribuer les PID aux processus.</p> <p>Chaque processus poss\u00e8de aussi un PPID (Parent Process Identification). Ce PPID permet de connaitre le processus parent d'un processus (par exemple le processus \"init\" vu ci-dessus \u00e0 un PID de 1 et un PPID de 0). \u00c0 noter que le processus 0 ne poss\u00e8de pas de PPID (c'est le seul dans cette situation). </p> <p>Mais qui d\u00e9cide?</p> <p>Il va donc falloir partager le temps de processeur disponible entre tous les processus : c\u2019est le travail de l\u2019ordonnanceur (ou scheduler en anglais). Ce dernier a pour t\u00e2che de s\u00e9lectionner le processus suivant \u00e0 ex\u00e9cuter parmi ceux qui sont pr\u00eats.  </p>"},{"location":"archi/processus/#lordonnanceur","title":"L'ordonnanceur","text":""},{"location":"archi/processus/#linterruption","title":"L'interruption","text":"<p>Pour \u00e9viter qu'une t\u00e2che ne monopolise une ressource ou un processeur de fa\u00e7on trop longue, un programme apel\u00e9 <code>gestionnaire d'interruption</code>interrompt le processus toutes les 100ns (\u00e0 la cr\u00e9ation du premier processeur INTEL c'\u00e9tait toutes les 55ms). Le processeur reprend alors la main et d\u00e9cide si la t\u00e2che peut continuer ou si on passe \u00e0 une autre. Les interruptions peuvent aussiavoir lieu lorsqu'une t\u00e2che change d'\u00e9tat (par exemple une attente d'entr\u00e9e au clavier) ou lorsqu'elle est termin\u00e9e. Les processus peuvent \u00eatre plus ou moins priroritaires. En effet, si votre document met une demi seconde de plus \u00e0 s'enregistrer vous ne verrez pas la diff\u00e9rence. En revanche si votre musique s'interrompt une demie seconde il y a de forte chance pour que vous vous en rendiez compte. Sous Linux, on peut passer des consignes \u00e0 l\u2019ordonnanceur en fixant des priorit\u00e9s aux processus dont on est propri\u00e9taire. Cette priorit\u00e9 est un nombre entre -20 (plus prioritaire) et +20 (moins prioritaire).</p> <p>liste des commandes linux sur les processus</p> commande Description Exemple ps Affiche l\u2019\u00e9tat des processus en cours <code>ps -a</code> : affiche les processus de tous les utilisateurs pstree Affiche un arbre des processus <code>pstree -a</code> d\u00e9sactive le compactage des branches top Affiche une vue dynamique des processus en cours d\u2019ex\u00e9cution <code>top -H</code> affiche les threads en plus des processus kill termine le processus <code>kill 42</code> termine le processus de PID 42 renice redefinit la priorit\u00e9 du processus <code>renice +10 42</code> redefinit \u00e0 10 la priorit\u00e9 du PID 42"},{"location":"archi/processus/#interbloquage-ou-deadlock","title":"Interbloquage (ou deadlock)","text":"<p> Les interblocages sont des situations de la vie quotidienne. Un exemple est celui du carrefour avec priorit\u00e9 \u00e0 droite o\u00f9 chaque v\u00e9hicule est bloqu\u00e9 car il doit laisser le passage au v\u00e9hicule \u00e0 sa droite.  </p> <p>En informatique \u00e9galement, l'interblocage peut se produire lorsque des processus concurrents s'attendent mutuellement. Les processus bloqu\u00e9s dans cet \u00e9tat le sont d\u00e9finitivement. Ce sc\u00e9nario catastrophe peut se produire dans un environnement o\u00f9 des ressources sont partag\u00e9es entre plusieurs processus et l'un d'entre eux d\u00e9tient ind\u00e9finiement une ressource n\u00e9cessaire pour l'autre.</p> <p>Cette situation d'interblocage a \u00e9t\u00e9 th\u00e9oris\u00e9e par l'informatitien Edward Coffman (1934-) qui a \u00e9nonc\u00e9 quatre conditions (appel\u00e9es conditions de coffman) menant \u00e0 l'interblocage :</p> <ul> <li>Exclusion mutuelle : au moins une des ressources du syst\u00e8me doit \u00eatre en acc\u00e8s exclusif.</li> <li>R\u00e9tention des ressources : un processus d\u00e9tient au moins une ressource et requiert une autre ressource d\u00e9tenue par un autre processus</li> <li>Non pr\u00e9emption : Seul le d\u00e9tenteur d'une ressource peut la lib\u00e9rer.</li> <li>Attente circulaire : Chaque processus attend une ressource d\u00e9tenue par un autre processus. P_1 attend une ressource d\u00e9tenue par P_2 qui \u00e0 son tour attend une ressource d\u00e9tenue par P_3 etc... qui attend une ressource d\u00e9tenue par P_1 ce qui clos la boucle.</li> </ul> <p>Exemple</p> <p>Acc\u00e8s aux p\u00e9riph\u00e9riques. Supposons que deux processus A et B veulent imprimer, en utilisant la m\u00eame imprimante, un fichier stock\u00e9 sur une bande magn\u00e9tique. La taille de ce fichier est sup\u00e9rieure \u00e0 la capacit\u00e9 du disque. Chaque processus a besoin d\u2019un acc\u00e8s exclusif au d\u00e9rouleur et \u00e0 l\u2019imprimante. On a une situation d\u2019interblocage si :</p> <ul> <li>Le processus A utilise l\u2019imprimante et demande l\u2019acc\u00e8s au d\u00e9rouleur.</li> <li>Le processus B d\u00e9tient le d\u00e9rouleur de bande et demande l\u2019imprimante. </li> </ul>"},{"location":"archi/processus/#questions","title":"Questions","text":"<ol> <li>Donner les cinq \u00e9tats possible d'un processus.</li> <li>Compl\u00e9ter le sch\u00e9ma suivant ainsi que la l\u00e9gende correspondant aux changements d'\u00e9tat (en trouvant le nom des changements d'\u00e9tat ou une description de quelques mots). </li> <li>En vous basant sur le sch\u00e9ma d'arborescence, donnez le PID (en partant du principe qu'il est cr\u00e9\u00e9 juste apr\u00e8s init) et le PPID du processus \"getty\". </li> <li>Identifiez et explicitez sur l'exemple du carrefour \u00e0 priorit\u00e9 \u00e0 droite les 4 conditions de Coffman menant \u00e0 l'interblocage.  </li> <li>Dans l'exmple donn\u00e9 ci-dessus, Montrer que les conditions d\u2019interlocage de Coffman sont r\u00e9unies</li> <li>Imaginez des situations de la vie quotidienne - comme l'exemple du carrefour - o\u00f9 un interblocage peut survenir.</li> <li>Supposons deux processus A et B qui demandent des acc\u00e8s exclusifs aux enregistrements d\u2019une base de donn\u00e9es E1 et E2. Imaginez un interblocage dans cette situation. </li> </ol>"},{"location":"archi/processus/#fiche-de-cours","title":"Fiche de cours","text":"<p>Faites une fiche r\u00e9sum\u00e9 ou une carte mentale reprenant, la d\u00e9finition d'un processus, l'odonnancement de plusiurs processus et le principe de l'interblocage</p>"},{"location":"archi/routage/","title":"Protocole de routage","text":"<p>Dans un r\u00e9seau, les routeurs jouent un r\u00f4le essentiel dans la transmission des paquets sur Internet : les paquets sont rout\u00e9s individuellement par des algorithmes. Les pertes logiques peuvent \u00eatre compens\u00e9es par des protocoles reposant sur des accus\u00e9s de r\u00e9ception ou des demandes de renvoi, comme TCP. </p>"},{"location":"archi/routage/#quelques-rappels-de-1ere-avant-de-commencer","title":"Quelques rappels de 1\u00e8re avant de commencer \u2026","text":"<p>Revoir si n\u00e9cessaire l\u2019activit\u00e9 sur les r\u00e9seaux de la partie \u00abArchitectures mat\u00e9rielles et OS \u00bb du programme de 1\u00e8re sp\u00e9cialit\u00e9 NSI. </p>"},{"location":"archi/routage/#adressage-ip-dune-machine","title":"Adressage IP d\u2019une machine","text":"<p>Chaque \u00ab objet IP \u00bb est identifi\u00e9 par une adresse IP qui contient :  - l\u2019adresse du r\u00e9seau IP local (extraite gr\u00e2ce au \u00ab netmask \u00bb ou \u00ab masque de sous r\u00e9seau \u00bb) ;  - le num\u00e9ro de la machine dans le r\u00e9seau IP local. Une adresse IPv4 est un identifiant num\u00e9rique \u00e0 32 bits (4 octets).  Chaque \u00ab objet IP \u00bb est physiquement connect\u00e9 \u00e0 un r\u00e9seau local de niveau 2 par ethernet, wifi ou bluetooth.  La communication avec d\u2019autres \u00ab objets IP \u00bb appartenant au m\u00eame r\u00e9seau se fait directement via le r\u00e9seau local de niveau 2 par l\u2019interm\u00e9diaire d\u2019un \u00ab switch \u00bb ou \u00ab commutateur \u00bb.  La communication avec d\u2019autres \u00ab objets IP \u00bb d\u2019autres r\u00e9seaux IP distants se fait via des passerelles de niveau 3 ou routeurs.   </p> <p></p> <p>Remarques</p> <p>Gr\u00e2ce \u00e0 des adresses de 128 bits au lieu de 32 bits, IPv6 dispose d'un espace d'adressage bien plus important qu'IPv4 (pr\u00e8s de 7,9 \u00d7 1028 de fois plus) et r\u00e9sout donc le probl\u00e8me de p\u00e9nurie d\u2019adresses IPv4 publiques li\u00e9e \u00e0 la multiplication des objets connect\u00e9s dans la vie quotidienne.  Les commutateurs (\u00ab switchs \u00bb en anglais) construisent une table d\u2019adresses MAC des machines IP connect\u00e9es \u00e0 eux. Ils se basent sur les adresses MAC pour commuter les trames. Contrairement aux commutateurs, le routeur se basent quant \u00e0 eux sur les adresses IP pour transporter les donn\u00e9es.  La forme de l\u2019adresse MAC ne permet pas de localiser le destinataire distant c\u2019est la raison pour laquelle elle est utilis\u00e9e seulement dans les r\u00e9seaux locaux, contrairement \u00e0 l\u2019adresse IP dont la partie r\u00e9seau et la partie H\u00f4te permettent de localiser l\u2019ordinateur d\u2019une fa\u00e7on pr\u00e9cise quel que soit son emplacement dans le monde. </p>"},{"location":"archi/routage/#principe-du-routage","title":"Principe du routage","text":"<p>Si l'h\u00f4te de destination se trouve sur le m\u00eame r\u00e9seau que l'h\u00f4te source, les paquets de donn\u00e9es sont achemin\u00e9s entre les deux h\u00f4tes sur le support local de niveau 2 via des commutateurs (\u00ab switchs \u00bb) sans n\u00e9cessiter la pr\u00e9sence d\u2019un routeur. Les commutateurs (\u00ab switchs \u00bb) construisent une table d\u2019adresses MAC des machines IP connect\u00e9es \u00e0 eux. Ils se basent sur ces adresses MAC enregistr\u00e9es pour commuter les trames.   Cependant, si l'h\u00f4te de destination et l'h\u00f4te source ne se trouvent pas sur le m\u00eame r\u00e9seau, le r\u00e9seau local achemine le paquet de la source vers son routeur de passerelle de niveau 3. Le routeur examine la partie r\u00e9seau de l'adresse de destination du paquet et achemine le paquet \u00e0 l'interface appropri\u00e9e. Si le r\u00e9seau de destination est connect\u00e9 directement \u00e0 ce routeur, le paquet est transf\u00e9r\u00e9 directement vers cet h\u00f4te. Si le r\u00e9seau de destination n'est pas connect\u00e9 directement, le paquet est achemin\u00e9 vers un second routeur qui constitue le routeur de tron\u00e7on suivant.   Le transfert du paquet devient alors la responsabilit\u00e9 de ce second routeur. De nombreux routeurs ou sauts tout au long du chemin peuvent traiter le paquet avant qu'il n'atteigne sa destination. Contrairement aux commutateurs (\u00ab switchs \u00bb), les routeurs se basent quant \u00e0 eux sur les adresses IP pour transporter les donn\u00e9es.   </p> <p>Aucun paquet ne peut \u00eatre achemin\u00e9 sans route. Que le paquet provienne d'un h\u00f4te ou qu'il soit achemin\u00e9 par un routeur interm\u00e9diaire, le routeur a besoin d'une route pour savoir o\u00f9 l'acheminer. S'il n'existe aucune route vers un r\u00e9seau de destination, le paquet ne peut pas \u00eatre transf\u00e9r\u00e9. Les routeurs utilisent des tables de routage qui contiennent les routes qu'ils connaissent. Ces tables peuvent \u00eatre construites manuellement (routage statique) ou automatiquement (routage dynamique). Dans ce cas, les routeurs s'appuient sur des protocoles sp\u00e9cifiques comme le protocole RIP (Routing Information Protocol) ou OSPF (Open Shortest Path First) par exemple.   </p> <p>Le r\u00e9seau de destination peut \u00eatre \u00e9loign\u00e9 de la passerelle par un certain nombre de routeurs ou de sauts. La route vers ce r\u00e9seau n'indique que le routeur de tron\u00e7on suivant vers lequel le paquet doit \u00eatre transf\u00e9r\u00e9, et non le routeur final. Le processus de routage utilise une route de la table de routage pour \u00ab mapper \u00bb l'adresse du r\u00e9seau de destination au tron\u00e7on suivant, puis transf\u00e8re le paquet \u00e0 cette adresse de tron\u00e7on suivant.   </p> <p></p>"},{"location":"archi/routage/#analyse-simplifiee-dun-reseau","title":"Analyse simplifi\u00e9e d'un r\u00e9seau","text":"<p>Questions</p> <p>1.Identifier les 3 grandes familles d\u2019\u00e9l\u00e9ments interconnect\u00e9s constituant ce r\u00e9seau. Donner la composition de chacune d\u2019entre elle.  2.Rappeler les symboles normalis\u00e9s d\u2019un commutateur et d\u2019un routeur (voir sch\u00e9ma).   3.Quel est le r\u00f4le d\u2019un commutateur (ou switch) ? 4.Quel est le r\u00f4le d\u2019un routeur ?  5.A minima, combien d\u2019interfaces r\u00e9seau doit comporter un routeur ? 6.Identifier les r\u00e9seaux qualifi\u00e9s de locaux.   </p> <p>Quelques exemples de communication entre machine de ce r\u00e9seau sont donn\u00e9s ci-apr\u00e8s. Cas n\u00b0 1 : M1 veut communiquer avec M3 Le paquet est envoy\u00e9 de M1 vers le switch R1, R1 \"constate\" que M3 se trouve bien dans le r\u00e9seau local 1, le paquet est donc envoy\u00e9 directement vers M3. On peut r\u00e9sumer le trajet du paquet par :  M1\u2192R1\u2192M3 </p> <p>Cas n\u00b0 2 : M1 veut communiquer avec M6 Le paquet est envoy\u00e9 de M1 vers le switch R1, R1 \u00ab constate \u00bb que M6 n\u2019est pas sur le r\u00e9seau local 1, R1 envoie donc le paquet vers le routeur A. Le routeur A n'est pas connect\u00e9 directement au r\u00e9seau local R2 (r\u00e9seau local de la machine M6), mais il \"sait\" que le routeur B est connect\u00e9 au r\u00e9seau local 2. Le routeur A envoie le paquet vers le routeur B. Le routeur B est connect\u00e9 au r\u00e9seau local 2, il envoie le paquet au Switch R2. Le Switch R2 envoie le paquet \u00e0 la machine M6.  M1 \u2192 R1 \u2192 Routeur A \u2192 Routeur B \u2192 R2 \u2192 M6 </p> <p>Cas n\u00b0 3 : M1 veut communiquer avec M9  Il existe souvent plusieurs chemins possibles pour relier 2 ordinateurs :  M1 \u2192 R1 \u2192 Routeur A \u2192 Routeur B \u2192 Routeur D \u2192 Routeur E \u2192 R4 \u2192 M9 OU  M1 \u2192 R1 \u2192 Routeur A \u2192 Routeur H \u2192 Routeur F \u2192 Routeur E \u2192 R4 \u2192 M9   </p> <p>Cas n\u00b04 : M13 veut communiquer avec M9 M13 \u2192 R6 \u2192 Routeur G \u2192 Routeur F \u2192 Routeur E \u2192 R4 \u2192 M9  OU  M13 \u2192 R6 \u2192 Routeur G \u2192 Routeur F \u2192 Routeur H \u2192 Routeur C \u2192 Routeur D \u2192 Routeur E \u2192 R4 \u2192 M9   </p> <p>Le chemin n\u00b0 1  \"Routeur F \u2192 Routeur E\" est vraisemblablement plus rapide et donc pr\u00e9f\u00e9rable au chemin n\u00b0 2 \"Routeur F \u2192 Routeur H\". Cependant s\u2019il y avait un probl\u00e8me technique entre le Routeur F et le Routeur E, l\u2019existence du chemin \"Routeur F \u2192 Routeur H\" permettrait tout de m\u00eame d\u2019\u00e9tablir une communication entre M13 et M9. C\u2019est l\u2019existence de tr\u00e8s nombreuses interconnexions et donc de routes possibles entre les diff\u00e9rentes infrastructures qui rendent internet particuli\u00e8rement peu sensible \u00e0 des pannes localis\u00e9es.   </p> <p>Questions</p> <p>7.D\u00e9terminer un chemin possible permettant d\u2019\u00e9tablir une connexion entre la machine M4 et M14. Existe-t-il plusieurs chemins possibles ? </p>"},{"location":"archi/routage/#notion-de-tables-de-routage","title":"Notion de tables de routage","text":"<p>Comment les commutateurs ou les routeurs proc\u00e8dent-ils pour amener les paquets de donn\u00e9es \u00e0 bon port ? Vous savez d\u00e9j\u00e0 que 2 machines appartenant au m\u00eame r\u00e9seau local doivent avoir la m\u00eame adresse r\u00e9seau. Dans le sch\u00e9ma du paragraphe pr\u00e9c\u00e9dent, les machines M1 et M4 n'ont pas la m\u00eame adresse r\u00e9seau car elles n'appartiennent pas au m\u00eame r\u00e9seau local. Si M1 cherche \u00e0 entrer en communication avec M4 alors le switch R1 va constater que M4 n'appartient pas au r\u00e9seau local (gr\u00e2ce \u00e0 son adresse IP) et R1 va donc envoyer le paquet de donn\u00e9es vers le routeur A. Cela sera donc au routeur A de g\u00e9rer le \"probl\u00e8me\" : comment atteindre M4 ?  Chaque routeur poss\u00e8de une table de routage. Une table de routage peut \u00eatre vue comme un tableau qui va contenir des informations permettant au routeur d'envoyer le paquet de donn\u00e9es dans la \"bonne direction\".   </p> <p></p> <p>Question</p> <p>8.Identifier les adresses IP r\u00e9seau des routeurs de l\u2019infrastructure ci-dessus. </p> <p>La table de routage du routeur A doit contenir les informations suivantes :  \u2022 le routeur A est directement reli\u00e9 au r\u00e9seau 172.168.0.0/16 par l'interm\u00e9diaire de son interface eth0  \u2022 le routeur A est directement reli\u00e9 au r\u00e9seau 172.169.0.0/16 par l'interm\u00e9diaire de son interface eth2  \u2022 le routeur A est directement reli\u00e9 au r\u00e9seau 192.168.7.0/24 par l'interm\u00e9diaire de son interface eth1 (le r\u00e9seau 192.168.7.0/24 est un peu particulier car il est uniquement compos\u00e9 des routeurs A et G)    \u2022 le routeur A n'est pas directement reli\u00e9 au r\u00e9seau 10.0.0.0/8 mais par contre il \"sait\" que les paquets \u00e0 destination de ce r\u00e9seau doivent \u00eatre envoy\u00e9 \u00e0 la machine d'adresse IP 192.168.7.2/24 (c'est \u00e0 dire le routeur G qui lui est directement reli\u00e9 au r\u00e9seau 10.0.0.0/8)  </p> <p>On peut r\u00e9sumer les informations pr\u00e9c\u00e9dentes dans la table de routage simplifi\u00e9e de A :  </p> <p>remarque</p> <p>Dans un protocole de routage, la m\u00e9trique est une mesure de la \u00ab distance \u00bb qui s\u00e9pare un routeur d'un r\u00e9seau de destination. En premi\u00e8re approche on l\u2019assimilera au nombre de sauts IP n\u00e9cessaires pour atteindre le r\u00e9seau destination. Ainsi, un r\u00e9seau directement li\u00e9 \u00e0 un routeur aura une m\u00e9trique de 0. </p> <p>Question</p> <p>9.D\u00e9terminez la table de routage du routeur G, en pr\u00e9cisant pour chaque r\u00e9seau \u00e0 atteindre, l'interface du routeur \u00e0 utiliser (et0,eth1, eth2) la passerelle (IP du routeur suivant) si le chemin n'est pas direct et le nombre de sauts.</p> <p>Dans des r\u00e9seaux tr\u00e8s complexes, chaque routeur aura une table de routage qui comportera de tr\u00e8s nombreuses lignes (plusieurs milliers...). En effet chaque routeur devra savoir vers quelle interface r\u00e9seau il faudra envoyer un paquet afin qu'il puisse atteindre sa destination. On peut trouver dans une table de routage plusieurs lignes pour une m\u00eame destination, il peut en effet, \u00e0 partir d'un routeur donn\u00e9, exister plusieurs chemins possibles pour atteindre la destination. Dans le cas o\u00f9 il existe plusieurs chemins possibles pour atteindre la m\u00eame destination, le routeur va choisir le \"chemin le plus court\". Pour choisir ce chemin le plus court, le routeur va utiliser la m\u00e9trique : plus la valeur de la m\u00e9trique est petite, plus le chemin pour atteindre le r\u00e9seau est \"court\".   </p> <p>Comment un routeur arrive \u00e0 remplir sa table de routage ?  La r\u00e9ponse est simple pour les r\u00e9seaux qui sont directement reli\u00e9s au routeur (m\u00e9trique = 0), mais comment cela se passe-t-il pour les autres r\u00e9seaux (m\u00e9trique sup\u00e9rieure \u00e0 z\u00e9ro) ?  Il existe 2 m\u00e9thodes :  \u2022 le routage statique : chaque ligne doit \u00eatre renseign\u00e9e \"\u00e0 la main\". Cette solution est seulement envisageable pour des tr\u00e8s petits r\u00e9seaux de r\u00e9seaux. \u2022 le routage dynamique : tout se fait \"automatiquement\", on utilise des protocoles qui vont permettre de \"d\u00e9couvrir\" les diff\u00e9rentes routes automatiquement afin de pouvoir remplir la table de routage tout aussi automatiquement.   </p>"},{"location":"archi/routage/#les-algorithmes-de-routage","title":"Les algorithmes de routage","text":""},{"location":"archi/routage/#principe","title":"Principe","text":"<p>Un r\u00e9seau de r\u00e9seaux comportant des routeurs peut \u00eatre mod\u00e9lis\u00e9 par un graphe : chaque routeur est un sommet et chaque liaison entre les routeurs ou entre un routeur et un switch est une ar\u00eate. Les algorithmes utilis\u00e9s par les protocoles de routages sont donc des algorithmes issus de la th\u00e9orie de graphes. Un exemple de graphe est donn\u00e9 sur le sch\u00e9ma ci-dessous.   </p> <p></p> <p>Dans la table de routage de D on lit que pour atteindre le routeur H il faut passer par G avec un saut de 1. Le but d\u2019un algorithme de routage est de trouver un chemin dans ce graphe qui relie l'\u00e9metteur au destinataire. Il existe de nombreux algorithmes pour trouver le chemin le plus court entre deux points d'un graphe. Cependant ceux-ci sont rarement utilis\u00e9s tels quels par les algorithmes de routage.  Les algorithmes de routage peuvent aussi tenir compte des performances des diff\u00e9rents chemins entre deux routeurs. La mise \u00e0 jour des tables routage permet alors de trouver des chemins plus courts ou plus rapides pour acheminer une donn\u00e9e \u00e0 une IP pr\u00e9cise. Il suffit pour cela de tenir compte des temps de transferts entre routeurs. Pour cela il suffit d'associer \u00e0 chaque arr\u00eate, c\u2019est-\u00e0-dire \u00e0 chaque chemin entre deux routeurs, un poids (pond\u00e9ration) qui indique sa rapidit\u00e9. Plus la vitesse de transfert est faible entre ces deux routeurs, plus ce nombre sera fort. Pour chaque chemin identifi\u00e9, l'algorithme additionne le temps de transfert de chaque fl\u00e8che. Le but de l'algorithme est de trouver le chemin qui minimise le temps de transfert total.  </p> <p>Question</p> <p>10.Quel est l\u2019objectif d\u2019un algorithme de routage ?  11.Comment mod\u00e9lise-t-on un r\u00e9seau d\u2019un point de vue math\u00e9matique ?   </p>"},{"location":"archi/routage/#le-protocole-rip-routing-information-protocol","title":"Le protocole RIP (Routing Information Protocol)","text":"<p>Le protocole RIP s'appuie sur l'algorithme de Bellman-Ford, algorithme permettant de calculer les plus courts chemins dans un graphe.  </p> <p>Lors de son initialisation, la table de routage d\u2019un routeur appliquant le protocole RIP contient uniquement les r\u00e9seaux qui sont directement reli\u00e9s \u00e0 lui.  Ainsi le routeur A du sch\u00e9ma ci-dessus contient initialement dans sa table de routage uniquement les r\u00e9seaux suivants: \u2022 172.168.0.0/16   \u2022 172.169.0.0/16  \u2022 192.168.7.0/24 et le routeur G :  \u2022 192.168.7.0/24  \u2022 10.0.0.0/8  Chaque routeur du r\u00e9seau qui applique le protocole RIP envoie p\u00e9riodiquement (toutes les 30 secondes) \u00e0 tous ses voisins (routeurs adjacents) un message. Ce message contient la liste de tous les r\u00e9seaux qu'il connait. A chaque \u00e9change de messages, les routeurs adjacents mettent \u00e0 jour leur table de routage :   </p> <p> </p> <p>Pour renseigner la colonne \"m\u00e9trique\", le protocole utilise le nombre de sauts, autrement dit, le nombre de routeurs qui doivent \u00eatre travers\u00e9s pour atteindre le r\u00e9seau cible (dans la table de routage de A, on aura donc une m\u00e9trique de 1 pour le r\u00e9seau 10.0.0.0/8 car depuis A il est n\u00e9cessaire de traverser le routeur G pour atteindre le r\u00e9seau 10.0.0.0/8) </p> <p></p> <p>Notion de protocole \u00e0 vecteur de distance  RIP appartient \u00e0 la famille des protocoles \u00e0 vecteur de distance.  Avec ce type de protocole, les routeurs envoient r\u00e9guli\u00e8rement l'ensemble de leur table de routage aux routeurs voisins, auxquels il est directement connect\u00e9. Ceux-ci mettent alors \u00e0 jour leur propre table de routage en tenant compte des informations envoy\u00e9es. \u00c9videmment, cela consomme beaucoup de d\u00e9bit r\u00e9seau, ce qui est un d\u00e9faut majeur. C'est la raison principale pour laquelle il ne peuvent pas \u00eatre utilis\u00e9s sur des r\u00e9seaux trop importants : les envois prendraient beaucoup trop de temps avec des grosses tables de routage. De plus, les tables de routage mettent beaucoup de temps avant de se stabiliser, ce qui rend le routage tr\u00e8s inefficace au d\u00e9but de l'utilisation du r\u00e9seau.   </p> <p>Message RIP v2  Un message RIP comprend un en-t\u00eate suivi de 1 \u00e0 25 enregistrement(s) de route (24 si un message d'authentification est requis). Un message RIP v2 est envoy\u00e9 en multicast \u00e0 l\u2019IP 224.0.0.9.  </p> <p></p> <p>Les limitations du protocole RIP : \u2022 Pour \u00e9viter les boucles de routage, le nombre de sauts est limit\u00e9 \u00e0 15. Au-del\u00e0, les paquets sont supprim\u00e9s. Au-del\u00e0 de 15 sauts, le protocole RIP affecte une m\u00e9trique  \u00e0 la liaison.    \u2022 RIP ne prend en compte que la distance entre deux machines en ce qui concerne le saut, mais il ne consid\u00e8re pas l'\u00e9tat de la liaison afin de choisir la meilleure bande passante possible. Si l'on consid\u00e8re un r\u00e9seau compos\u00e9 de trois routeurs A, B et C, reli\u00e9s en triangle, RIP pr\u00e9f\u00e9rera passer par la liaison directe A-B m\u00eame si la bande passante n'est que de 56 kbit/s alors qu'elle est de 10 Gbit/s entre A et C et C et B.  De facto, le protocole RIP est aujourd'hui tr\u00e8s rarement utilis\u00e9 dans les grandes infrastructures. En effet, il g\u00e9n\u00e8re, du fait de l'envoi p\u00e9riodique de message, un trafic r\u00e9seau important (surtout si les tables de routages contiennent beaucoup d'entr\u00e9es). On lui pr\u00e9f\u00e8re donc souvent le protocole OSPF qui corrige les limitations \u00e9voqu\u00e9es pr\u00e9c\u00e9demment.  EN SAVOIR PLUS SUR LE PROTOCOLE RIP</p> <p>Questions</p> <p>12.Quel est le principe du protocole RIP ?    13.Quels sont ses principaux inconv\u00e9nients ?  14.En vous basant sur le protocole RIP (m\u00e9trique = nombre de sauts), d\u00e9terminez la table de routage du routeur A appartenant au r\u00e9seau ci-dessous.   15.Quel est, d'apr\u00e8s la table de routage construite du routeur A, le chemin qui sera emprunt\u00e9 par un paquet pour aller d'une machine ayant pour adresse IP 172.18.1.1/16 \u00e0 une machine ayant pour adresse IP 172.16.5.3/16 ? </p> <p> Le protocole OSFP (Open Shortest Path First) Les routeurs OSPF doivent \u00e9tablir une relation de voisinage avant d\u2019\u00e9changer des mises \u00e0 jour de routage. Les voisins OSPF sont dynamiquement d\u00e9couverts en envoyant des paquets Hello sur chaque interface OSPF sur un routeur. Les paquets Hello sont envoy\u00e9s \u00e0 l\u2019adresse IP de multicast 224.0.0.5.   </p> <p> </p> <p>Chaque routeur OSPF re\u00e7oit un identifiant de routeur afin qu\u2019il puisse \u00eatre reconnu.   Contenu d\u2019un paquet HELLO  Les champs suivants dans les paquets Hello doivent \u00eatre identiques sur les deux routeurs afin que les routeurs deviennent voisins :  \u2022 sous-r\u00e9seau (subnet)  \u2022 id de zone (area ID)  \u2022 minuteurs d\u2019intervalle morts (dead-interval) et hello  \u2022 authentification  \u2022 drapeau de bout de zone (area stub flag)  \u2022 MTU (Maximum Transmit Unit)  Par d\u00e9faut, OSPF envoie des paquets hello toutes les 10 secondes sur un r\u00e9seau Ethernet (intervalle Hello). Une minuterie morte (dead timer) correspond \u00e0 quatre fois la valeur de l\u2019intervalle Hello, donc si un routeur sur un r\u00e9seau Ethernet ne re\u00e7oit pas au moins un paquet Hello d\u2019un voisin OSPF pendant 40 secondes, les routeurs d\u00e9clarent que ce dernier est \u201cnon fonctionnel\u201d (down).</p> <p> Quels sont les \u00e9tats possibles des voisins OSFP ? Avant d\u2019\u00e9tablir une relation de voisinage, les routeurs OSPF doivent passer par plusieurs changements d\u2019\u00e9tat :  1. \u00c9tat init \u2013 un routeur a re\u00e7u un message Hello de l\u2019autre routeur OSPF.  2. \u00c9tat 2-way \u2013 le voisin a re\u00e7u le message Hello et a r\u00e9pondu avec un message Hello  3. \u00c9tat Exstart \u2013 d\u00e9but de l\u2019\u00e9change LSDB (Link-State Database) entre les deux routeurs. Les routeurs commencent \u00e0 \u00e9changer des informations sur l\u2019\u00e9tat des liens.  4. \u00c9tat Exchange \u2013 Les paquets DBD (Database Descriptor) sont \u00e9chang\u00e9s. Les DBD contiennent des en-t\u00eates LSA (Link-state Advertisements). Les routeurs utiliseront cette information pour voir quels LSA doivent \u00eatre \u00e9chang\u00e9s.  5. \u00c9tat Loading \u2013 un voisin envoie des LSR (Link State Requests) pour chaque r\u00e9seau qu\u2019il ne conna\u00eet pas. L\u2019autre voisin r\u00e9pond avec les LSU (Link State Updates) qui contiennent des informations sur les r\u00e9seaux demand\u00e9s. Apr\u00e8s que toutes les informations demand\u00e9es ont \u00e9t\u00e9 re\u00e7ues, l\u2019autre voisin passe par le m\u00eame processus  6. \u00c9tat Full \u2013 les deux routeurs ont la base de donn\u00e9es synchronis\u00e9e et sont compl\u00e8tement adjacents l\u2019un \u00e0 l\u2019autre.  En r\u00e9sum\u00e9 : chaque routeur communique la liste des r\u00e9seaux auxquels il est connect\u00e9 par des messages Link-state advertisements (LSA) propag\u00e9s de proche en proche \u00e0 tous les routeurs du r\u00e9seau. L'ensemble des LSA forme une base de donn\u00e9es de l'\u00e9tat des liens Link-State Database (LSDB) pour chaque zone (area), qui est identique pour tous les routeurs de cette zone. Chaque routeur utilise ensuite l'algorithme de Dijkstra, Shortest Path First (SPF) pour d\u00e9terminer la route la plus rapide vers chacun des r\u00e9seaux connus dans la LSDB. Notion de zone / area OSFP  OSPF utilise le concept de zone (area). Une zone est un regroupement logique de r\u00e9seaux et de routeurs contigus. Tous les routeurs dans la m\u00eame zone ont la m\u00eame table de topologie, mais ils ne connaissent pas les routeurs dans les autres zones. Le principal avantage de la cr\u00e9ation de zones est que la taille de la topologie et la table de routage d\u2019un routeur sont r\u00e9duites, qu\u2019il faut moins de temps pour ex\u00e9cuter l\u2019algorithme OSPF et que les mises \u00e0 jour de routage sont \u00e9galement r\u00e9duites.  Chaque zone (area) du r\u00e9seau OSPF doit se connecter \u00e0 la zone de backbone (area 0) : toutes les autres zones y sont connect\u00e9es. Tous les routeurs \u00e0 l\u2019int\u00e9rieur d\u2019une zone doivent avoir le m\u00eame ID de zone pour devenir des voisins OSPF. Un routeur qui a des interfaces dans plus d\u2019une zone (zone 0 et zone 1, par exemple) s\u2019appelle Area Border Router (ABR). Un routeur qui connecte un r\u00e9seau OSPF \u00e0 d\u2019autres domaines de routage (r\u00e9seau EIGRP, par exemple) s\u2019appelle Autonomous System Border Routers (ASBR).  Remarque : le r\u00f4le d\u2019un routeur ABR consiste \u00e0 annoncer des r\u00e9sum\u00e9s de routes aux zones voisines. Le r\u00f4le d\u2019un ASBR est de connecter un domaine de routage OSPF \u00e0 un autre r\u00e9seau externe (par exemple Internet, EIGRP \u2026).   Messages LSA, LSU et LSR </p> <p></p> <p>Les messages LSA (Link-State Advertisments) sont utilis\u00e9es par les routeurs OSPF pour \u00e9changer des informations de topologie. Chaque LSA contient des informations de routage et de topologie pour d\u00e9crire une partie d\u2019un r\u00e9seau OSPF. Lorsque deux voisins d\u00e9cident d\u2019\u00e9changer des routes, ils envoient mutuellement une liste de tous les LSA de leur base de donn\u00e9es de topologie respective. Chaque routeur v\u00e9rifie ensuite sa base de donn\u00e9es de topologie et envoie un message LSR (Link State Request) demandant tous les LSA introuvables dans sa table de topologie. L\u2019autre routeur r\u00e9pond avec la LSU (Link State Update) qui contient tous les LSA demand\u00e9s par l\u2019autre voisin.    </p> <p></p> <p></p> <p>Sur l\u2019exemple ci-contre, apr\u00e8s avoir initialis\u00e9 OSPF sur les deux routeurs, ceux-ci \u00e9changent des LSA pour d\u00e9crire leur base de donn\u00e9es de topologie respective.  1. Le routeur R1 envoie un en-t\u00eate LSA pour son r\u00e9seau directement connect\u00e9 10.0.1.0/24.  2. Le routeur R2 v\u00e9rifie sa base de donn\u00e9es de topologie et d\u00e9termine qu\u2019il ne dispose pas d\u2019informations sur ce r\u00e9seau. Le routeur R2 envoie alors un message de demande d\u2019\u00e9tat de liaison LSR demandant des informations suppl\u00e9mentaires sur ce r\u00e9seau.  3. Le routeur R1 r\u00e9pond avec Link State Update LSU qui contient des informations sur le sous-r\u00e9seau 10.0.1.0/24 (adresse hop suivant, co\u00fbt \u2026).   </p> <p>Notion de protocole \u00e0 \u00e9tat de lien OSFP appartient \u00e0 la famille des protocoles \u00e0 \u00e9tat de lien Ces protocoles sont plus efficaces en termes de d\u00e9bit et de stabilisation des tables de routage. Au lieu d'envoyer la table de routage compl\u00e8te, ils envoient des messages courts, qui donnent des indications sur la connectivit\u00e9 du r\u00e9seau. De mani\u00e8re g\u00e9n\u00e9rale, ces messages sont de simples tests qui v\u00e9rifient que le voisin est toujours accessible, connect\u00e9. Au bout de plusieurs tentatives \u00e9chou\u00e9es, le routeur contact\u00e9 est consid\u00e9r\u00e9 comme inaccessible et le routeur envoie une indication aux autres voisins comme quoi il ne peut plus communiquer avec lui. En clair, chaque routeur indique quel est l'\u00e9tat des liens qu'il entretient avec les autres routeurs : il dit qu'il est connect\u00e9 \u00e0 tel ou tel routeur, que telle connexion a \u00e9t\u00e9 d\u00e9connect\u00e9e, etc. Avec ces protocoles, le volume de donn\u00e9es transmises est plus faible. Pas besoin d'envoyer une table de routage compl\u00e8te, juste quelques messages courts. Outre la forte r\u00e9duction de d\u00e9bit utilis\u00e9, la vitesse de convergence est plus rapide.   </p> <p>M\u00e9trique  Le protocole OSPF, contrairement \u00e0 RIP, n'utilise pas le \"nombre n\u00e9cessaire de sauts\" pour \u00e9tablir la m\u00e9trique, mais la notion de \"co\u00fbt des routes\". Dans les messages \u00e9chang\u00e9s par les routeurs on trouve le co\u00fbt de chaque liaison (plus le co\u00fbt est grand et moins la liaison est int\u00e9ressante). Quand on parle de \"liaison\" on parle simplement du c\u00e2ble qui relie un routeur \u00e0 un autre routeur. Le protocole OSPF permet de connaitre le co\u00fbt de chaque liaison entre routeurs, et donc, de connaitre le co\u00fbt d'une route (en ajoutant le co\u00fbt de chaque liaison travers\u00e9e). On notera que pour effectuer ces calculs, le protocole OSPF s'appuie sur l'algorithme de Dijkstra.  La notion de co\u00fbt est directement li\u00e9e au d\u00e9bit des liaisons entre les routeurs. Le d\u00e9bit correspond au nombre de bits de donn\u00e9es qu'il est possible de faire passer dans un r\u00e9seau par seconde. Le d\u00e9bit est donc donn\u00e9 en bits par seconde (bps), mais on trouve souvent des kilo bits par seconde (kbps) ou encore des m\u00e9ga bits par seconde (Mbps) =&gt; 1 kbps = 1000 bps et 1 M  bps = 1000 kbps. Connaissant le d\u00e9bit d'une liaison, il est possible de calculer le co\u00fbt d'une liaison \u00e0 l'aide de la formule suivante :   Co\u00fbt (en bits / s)  = 10<sup>8</sup> / d\u00e9bit (en bps) </p> <p>Pour obtenir la m\u00e9trique d'une route, il suffit d'additionner les co\u00fbts de chaque liaison (par exemple si pour aller d'un r\u00e9seau 1 \u00e0 un r\u00e9seau 2 on doit traverser une liaison de co\u00fbt 1, puis une liaison de co\u00fbt 10 et enfin une liaison de co\u00fbt 1, la m\u00e9trique de cette route sera de 1 + 10 + 1 = 12). Comme dans le cas du protocole RIP, les routes ayant les m\u00e9triques les plus faibles sont privil\u00e9gi\u00e9es.  EN SAVOIR PLUS SUR LE PROTOCOLE OSFP</p> <p>Questions</p> <p>16.Quel est le principe du protocole OSFP ?  17.Quel est son principal avantage par rapport au protocole RIP ?  18.En vous basant sur le protocole OSPF (m\u00e9trique = somme des co\u00fbts), d\u00e9terminez la table de routage du routeur A pr\u00e9sent dans le r\u00e9seau de la question 13. On donne les d\u00e9bits suivants :  \u2022 liaison routeur A - routeur B : 1 Mbps  \u2022 liaison routeur A - routeur C : 10 Mbps  \u2022 liaison routeur C - routeur B : 10 Mbps  19.Quel est, d'apr\u00e8s la table de routage construite ci-dessus, le chemin qui sera emprunt\u00e9 par un paquet pour aller d'une machine ayant pour adresse IP 172.18.1.1/16 \u00e0 une machine ayant pour adresse IP 172.16.5.3/16 ?     </p> <p>A retenir</p> <p>Faites vous un r\u00e9sum\u00e9 de cours sachant que vous devez savoir : Ce qu'est un routeur, ce qu'est une table de routage, comment est remplie cette table, ce qui diff\u00e9rencie RIP de OSPF et comment ils fonctionnent. Identifier la route emprunt\u00e9e par un paquet suivant le protocole de routage utilis\u00e9 (RIP ou OSPF). Une fiche, une carte mentale, des sch\u00e9mas, \u2026 Vous pouvez vous aider de cette vid\u00e9o : </p>"},{"location":"archi/soc/","title":"Syst\u00e8me On a Chip (syst\u00e8me sur puce)","text":"<p>La r\u00e9duction de taille des \u00e9l\u00e9ments des circuits \u00e9lectroniques a conduit \u00e0 l\u2019av\u00e8nement de syst\u00e8mes sur puce (SoC pour System on a Chip en anglais) qui regroupent dans un seul circuit nombre de fonctions autrefois effectu\u00e9es par des circuits s\u00e9par\u00e9s assembl\u00e9s sur une carte \u00e9lectronique. Un tel syst\u00e8me sur puce est con\u00e7u et mis au point de fa\u00e7on logicielle, ses briques \u00e9lectroniques sont accessibles par des API, comme pour les biblioth\u00e8ques logicielles. </p>"},{"location":"archi/soc/#systeme-sur-puce","title":"Syst\u00e8me sur puce","text":"<p>De l\u2019ordinateur au smartphone / tablette </p> <p>Dans un ordinateur \u201cclassique\u201d tel qu\u2019un PC de bureau, le \u00ab hardware \u00bb est organis\u00e9 autour de 4 \u00e9l\u00e9ments principaux :  </p> <ul> <li>le processeur (CPU \u2013 Central Processing Unit) se charge de r\u00e9aliser les calculs les plus courants, ceux qui permettent par exemple de faire tourner le syst\u00e8me d\u2019exploitation ou un navigateur web. </li> <li>la m\u00e9moire vive (RAM \u2013 Random Access Memory) permet d\u2019enregistrer temporairement les donn\u00e9es trait\u00e9es par le processeur. </li> <li>la carte graphique (ou GPU \u2013 Graphics Processing Unit) se charge d\u2019afficher une image, qu\u2019elle soit en 2D ou bien en 3D comme dans les jeux.  </li> <li>la carte-m\u00e8re (Motherboard) permet l\u2019acheminement des donn\u00e9es entre les composants (CPU, RAM, GPU, disque dur, SSD, cartes r\u00e9seau \u2026) via des \u00ab BUS \u00bb. </li> </ul> <p>Elements d'un ordinateur</p> <p> 1- CPU surmont\u00e9 d\u2019un  dissipateur thermique (ventirad)  2-Barrettes de RAM  3- GPU  4- Carte m\u00e8re   </p> <p> Mais depuis le d\u00e9but de l\u2019\u00e8re des smartphones et des tablettes, on assiste \u00e0 l\u2019\u00e9mergence de syst\u00e8mes tout-en-un appel\u00e9 SoC (System on a Chip) afin d\u2019optimiser la miniaturisation et l\u2019int\u00e9gration des diff\u00e9rents composants. Ces derniers sont alors bien mieux interconnect\u00e9s les uns aux autres, avec par exemple une fr\u00e9quence processeur qui varie en fonction de la fr\u00e9quence de la carte graphique du fait de contraintes thermiques et de consommation. Un Soc pr\u00e9sente donc une structure compl\u00e8tement in\u00e9dite par rapport \u00e0 un ordinateur classique o\u00f9 chaque composant est plus ou moins ind\u00e9pendant. Un \u00ab syst\u00e8me sur une puce \u00bb, souvent d\u00e9sign\u00e9 dans la litt\u00e9rature scientifique par le terme anglais \u00ab system on a chip \u00bb (d'o\u00f9 son abr\u00e9viation SoC), est un syst\u00e8me complet embarqu\u00e9 sur une seule puce (\"circuit int\u00e9gr\u00e9\"), pouvant comprendre de la m\u00e9moire, un ou plusieurs microprocesseurs, des p\u00e9riph\u00e9riques d'interface, ou tout autre composant n\u00e9cessaire \u00e0 la r\u00e9alisation de la fonction attendue.</p> <p>On peut int\u00e9grer de la logique, de la m\u00e9moire (statique, dynamique, flash, ROM, PROM, EPROM, EEPROM), des dispositifs (capteurs) m\u00e9caniques, opto-\u00e9lectroniques, chimiques ou biologiques ou des circuits radio\u2026  D\u2019apr\u00e8s Wikip\u00e9dia  </p> <p>Question</p> <p>1-Qu\u2019est-ce qu\u2019un SoC ?  2-Quels sont les appareils \u00e0 base de SoC ?  3-Au niveau hardware, qu\u2019est-ce qui diff\u00e9rencie fondamentalement un SoC des composants d\u2019un ordinateur ?   </p>"},{"location":"archi/soc/#composition-dun-soc","title":"Composition d\u2019un SoC","text":"<p>\u25fc Le processeur (CPU)  Le processeur ou \u00ab Central Processing Unit \u00bb (CPU) est le c\u0153ur du SoC. Son fonctionnement est identique \u00e0 celui d\u2019un ordinateur. On y retrouve donc plusieurs c\u0153urs cadenc\u00e9s \u00e0 diff\u00e9rentes fr\u00e9quences effectuant des threads et stockant des informations en cache.      \u2022   Les c\u0153urs  Un processeur compte g\u00e9n\u00e9ralement plusieurs c\u0153urs, on parle couramment dans la litt\u00e9rature technique de dual-core, quad-core ou d\u2019octo-core parfois. Ainsi, ces processeurs se composent respectivement de deux, quatre ou huit c\u0153urs. Ceux-ci permettent de lancer en parall\u00e8le plusieurs applications de mani\u00e8re simultan\u00e9e (multit\u00e2che) et permettent l\u2019utilisation d\u2019application lourde comme des jeux.      \u2022   La fr\u00e9quence  La fr\u00e9quence d\u2019un processeur est le nombre de cycles de calculs qu\u2019il peut effectuer chaque seconde. Elle va donc naturellement d\u00e9terminer la dur\u00e9e d\u2019ex\u00e9cution d\u2019une t\u00e2che : plus la fr\u00e9quence du processeur est \u00e9lev\u00e9e, plus l\u2019ex\u00e9cution d\u2019une t\u00e2che est rapide. Mesur\u00e9e en gigahertz (GHz), celle-ci est souvent diff\u00e9rente entre chaque c\u0153ur.      \u2022 Les threads  Les c\u0153urs r\u00e9alisent ce qu\u2019on appelle un thread, litt\u00e9ralement un fil d\u2019ex\u00e9cution, une t\u00e2che qui doit \u00eatre r\u00e9alis\u00e9e par le processeur.      \u2022 Le cache  C\u2019est une petite m\u00e9moire rapide int\u00e9gr\u00e9e au processeur. En effet, celle-ci va permettre de stocker les informations r\u00e9currentes au plus pr\u00e8s du processeur pour \u00e9viter d\u2019avoir \u00e0 aller les chercher sans arr\u00eat dans la RAM.   </p> <p>\u25fc La puce graphique (GPU)  La puce graphique ou \u00ab Graphics Processing Unit \u00bb (GPU) est un \u00e9l\u00e9ment crucial pour les gamers, car c\u2019est lui qui est en charge de calculer les images afin de pouvoir les afficher \u00e0 l\u2019\u00e9cran. Celle-ci prend ainsi en charge les images en 2D et en 3D que ce soit une page web, une vid\u00e9o ou encore une partie endiabl\u00e9e de votre jeu favori. Une carte graphique doit donc r\u00e9aliser un nombre \u00e9lev\u00e9 de t\u00e2ches, puisque qu\u2019elle doit par exemple calculer la couleur \u00e0 afficher sur chaque pixel de l\u2019\u00e9cran de votre smartphone. Par exemple dans le cas d\u2019une image Full HD (1920\u00d71080), le GPU affiche 2 073 600 pixels diff\u00e9rents ou 8 294 400 pixels pour de l\u2019Ultra HD (3840\u00d72160).  Rappelons \u00e9galement que ce calcul est fait selon la fr\u00e9quence de rafraichissement de l\u2019\u00e9cran. Celle-ci peut par exemple varier entre 60 et 120 fois par secondes c\u2019est-\u00e0-dire entre 60 Hz et 120 Hz.   </p> <p>\u25fc La puce neuronale (NPU)  La puce neuronale ou \u00ab Neuronal Processing Unit \u00bb (NPU) est une puce en charge de l\u2019intelligence artificielle des smartphones. Les calculs de l\u2019intelligence artificielle ont longtemps \u00e9t\u00e9 faits par le biais de serveurs dans le cloud (distant). N\u00e9anmoins, depuis quelques ann\u00e9es pour des raisons de rapidit\u00e9 et de respect de la vie priv\u00e9e, les calculs se font d\u00e9sormais directement sur les smartphones. C\u2019est utile par exemple dans \u00ab Google Translate \u00bb pour reconna\u00eetre des caract\u00e8res, pour optimiser les photos ou encore l\u2019autonomie.  \u25fc Le modem (Interface)    Les smartphones embarquent  \u00e9galement dans le SoC une unit\u00e9 r\u00e9seau assurant la prise en charge des diff\u00e9rents protocoles de communication. Cette unit\u00e9 est la partie la plus compliqu\u00e9e \u00e0 d\u00e9velopper et \u00e0 impl\u00e9menter sur un SoC. N\u00e9anmoins, il s\u2019agit d\u2019un \u00e9l\u00e9ment crucial afin d\u2019assurer le nomadisme d\u2019un smartphone en itin\u00e9rance. Le modem int\u00e9gr\u00e9 au SoC g\u00e8re non seulement le Wifi, le Bluetooth, le NFC ou bien encore les technologies mobiles. C\u2019est-\u00e0-dire la 4G, ou plus r\u00e9cemment la 5G mais \u00e9galement de plus vieux r\u00e9seaux tels que la 3G.  \u25fc Le processeur de signal num\u00e9rique (DSP)  Le processeur de signal num\u00e9rique ou \u00ab Digital Signal Processor \u00bb (DSP) est en charge de traiter les signaux num\u00e9riques. Ainsi, il va permettre le filtrage, la compression ou encore l\u2019extraction de diff\u00e9rents signaux tels que la musique ou encore une vid\u00e9o.  \u25fc Le processeur de signal d\u2019images (ISP)  Le processeur d\u2019image ou \u00ab Image Signal Processor \u00bb (ISP) est une puce prenant en charge la cr\u00e9ation d\u2019images num\u00e9riques. En effet de par leurs tailles minuscules, les capteurs photo des smartphones ne sont pas de tr\u00e8s bonne qualit\u00e9 d\u2019un point de vue de l\u2019optique pure. La qualit\u00e9 qu\u2019il est actuellement possible d\u2019obtenir va \u00eatre intimement li\u00e9e \u00e0 cette puce qui va compenser logiquement certaines limitations optiques (zoom num\u00e9rique \u2026).  \u25fc Le processeur de s\u00e9curit\u00e9 (SPU)  Le processeur de s\u00e9curit\u00e9 ou \u00ab Secure Processing Unit \u00bb (SPU) est le \u00ab bouclier \u00bb du smartphone. Son alimentation \u00e9lectrique est ind\u00e9pendante afin de ne pas pouvoir \u00eatre \u00e9teint en cas d\u2019attaque sur celui-ci. Le SPU est d\u2019une importance capitale. En effet celui-ci va stocker les donn\u00e9es biom\u00e9triques, bancaires, la carte SIM ou encore les titres de transport. C\u2019est lui qui contient les cl\u00e9s de chiffrement des donn\u00e9es de l\u2019utilisateur. </p> <p>Question</p> <p>4-Pourquoi les CPU d\u2019un SoC embarquent-ils plusieurs c\u0153urs ?  5-Donner un ordre de grandeur de la fr\u00e9quence du CPU d\u2019un SoC.   6-Sur quel param\u00e8tre influe la fr\u00e9quence du CPU d\u2019un SoC ?  7-Qu\u2019est-ce qu\u2019un thread ?  8-Qu\u2019est-ce que la m\u00e9moire cache d\u2019un CPU ?  9-Dans un SoC, \u00e0 quoi sert le GPU ?   10-Dans un SoC, quel \u00e9l\u00e9ment est charg\u00e9 du traitement des photos prises par la (les) cam\u00e9ra(s) int\u00e9gr\u00e9e(s) au smartphone ?  11-Dans un SoC, quel \u00e9l\u00e9ment permet de lire de l\u2019audio ou de la vid\u00e9o ?  12-Dans un SoC, \u00e0 quoi sert le SPU ?  13-Quel \u00e9l\u00e9ment d\u2019un SOC permet \u00e0 un smartphone de communiquer avec d\u2019autres machines ?   </p>"},{"location":"archi/soc/#avantages-dun-soc-par-rapport-a-systeme-classique","title":"Avantages d\u2019un SoC par rapport \u00e0 syst\u00e8me classique","text":"<p>Outre leur taille miniaturis\u00e9e bien adapt\u00e9e aux terminaux nomades (smartphones et tablettes), les SoC offrent d'autres avantages par rapport aux syst\u00e8mes \"classiques\" rencontr\u00e9s dans les ordinateurs : </p> <p>\u2022les SoC sont con\u00e7us pour consommer beaucoup moins d'\u00e9nergie qu'un syst\u00e8me classique \u00e0 puissance \u00e9quivalente de calculs ;  \u2022cette consommation r\u00e9duite d\u2019\u00e9nergie permet dans la plupart des cas de s'affranchir de la pr\u00e9sence d\u2019un syst\u00e8me de refroidissement actif comme les ventilateurs ou de type \u00ab watercooling \u00bb ; un syst\u00e8me \u00e9quip\u00e9 de SoC est donc silencieux car il chauffe relativement peu ;  \u2022\u00e9tant donn\u00e9 les distances tr\u00e8s faibles entre, par exemple, le CPU et la m\u00e9moire, les donn\u00e9es circulent beaucoup plus vites, ce qui permet d'am\u00e9liorer grandement les performances ; en effet, dans les syst\u00e8mes \"classiques\" les BUS charg\u00e9s d\u2019acheminer les donn\u00e9es  sont souvent des \"goulots d'\u00e9tranglement\" en termes de performances \u00e0 cause de la vitesse limit\u00e9e de circulation des donn\u00e9es.   </p> <p>En revanche, le principal inconv\u00e9nient d\u2019un SoC est que l\u00e0 ou un ordinateur \u00e9quip\u00e9 d'une carte m\u00e8re permet de faire \u00e9voluer les composants individuellement, l'extr\u00eame int\u00e9gration du SoC pr\u00e9sente en revanche l'inconv\u00e9nient de n'autoriser aucune mise \u00e0 jour possible du mat\u00e9riel.   </p> <p>Questions</p> <p>14-Quels sont les principaux avantages d\u2019un SoC ? 15-Citer le principal inconv\u00e9nient d\u2019un SoC.  </p>"},{"location":"archi/soc/#quelques-familles-de-soc-utilisees-dans-les-smartphones","title":"Quelques familles de SoC utilis\u00e9es dans les smartphones","text":"<p> Les nouveaux proc\u00e9d\u00e9s de gravure des semi-conducteurs CMOS telle que la lithographie extr\u00eame ultraviolette, ont permis de r\u00e9duire significativement la taille des composants \u00e9lectroniques constituants les SoC. Ainsi, on dispose aujourd\u2019hui de la m\u00eame puissance dans un smartphone que celle embarqu\u00e9e dans un ordinateur il y a quelques ann\u00e9es de cela. Ceci s\u2019est cependant fait au prix d\u2019une complexit\u00e9 technologique croissante. L\u2019actuelle g\u00e9n\u00e9ration de SoC est grav\u00e9e en 7 nm (1 nm = 10-9 m) depuis juillet 2019. Le SoC A13 Bionic d\u2019Apple est par exemple compos\u00e9 de 8,5 milliards de transistors r\u00e9partis sur une surface de 98,48 mm<sup>2</sup> ! La prochaine g\u00e9n\u00e9ration grav\u00e9e en 2 nm a vu le jour chez IBM en 2021. </p> <p>Au sein de la g\u00e9n\u00e9ration actuelle de smartphone on trouve une grande vari\u00e9t\u00e9 de SoC en fonction des diff\u00e9rents constructeurs : </p> <p>  Pour les derniers mod\u00e8les de smartphones 2019-2020, la principale difficult\u00e9 technologique est d\u2019int\u00e9grer aux SoCs les modems 5G qui sont complexes \u00e0 fabriquer. Pour l\u2019instant ces derniers sont g\u00e9n\u00e9ralement grav\u00e9s en 10 nm sur une puce ind\u00e9pendante du SoC. Le prochain d\u00e9fi technologique sera d\u2019int\u00e9grer les modems 5G directement dans le SoC grav\u00e9 en 7 nm puis 5 nm. </p> <p>Question</p> <p>16-Pour les mod\u00e8les 2019-2020 de t\u00e9l\u00e9phones portables, quelle est la finesse de gravures des SoC ?  17-Quel est l\u2019ordre de grandeur de la surface d\u2019un SoC ?  18-Quel est l\u2019ordre de grandeur du nombre de transistors pr\u00e9sents sur un SoC ?  19-Quel est l\u2019ordre de grandeur de la densit\u00e9 moyenne de transistors par mm2 dans un Soc ?  20-Quelle sera la finesse de gravure des SoC pour la prochaine g\u00e9n\u00e9ration de smartphone ?  21-Quelle est la principale difficult\u00e9 technologique rencontr\u00e9e \u00e0 l\u2019heure actuelle par les concepteurs de SoC ?   </p>"},{"location":"archi/soc/#larchitecture-arm","title":"L\u2019architecture ARM","text":"<p>Dot\u00e9s d'une architecture relativement plus simple que d'autres familles de processeurs, et b\u00e9n\u00e9ficiant d'une faible consommation \u00e9lectrique, les processeurs ARM (Advanced Risc Machine) sont devenus dominants dans le domaine de l'informatique embarqu\u00e9e, en particulier la t\u00e9l\u00e9phonie mobile et les tablettes. Les architectures ARM reposent sur des processeurs \u00e0 jeux d\u2019instructions r\u00e9duit RISC (Reduced Instruction Set Computer) 32 bits (ARMv1 \u00e0 ARMv7) ou 64 bits (ARMv8).  Aujourd'hui, ARM est surtout connu pour ses syst\u00e8mes sur puce (SoC), int\u00e9grant sur une seule puce : microprocesseur, processeur graphique (GPU), DSP, FPU, et contr\u00f4leur de p\u00e9riph\u00e9riques. Ceux-ci sont  pr\u00e9sents dans la majorit\u00e9 des smartphones et tablettes.  ARM propose des architectures qui sont vendues sous licence de propri\u00e9t\u00e9 intellectuelle aux concepteurs. Ils proposent diff\u00e9rentes options dans lesquelles les constructeurs peuvent prendre ce qui les int\u00e9resse pour compl\u00e9ter avec leurs options propres ou de concepteurs tiers. ARM propose ainsi pour les SoC les plus r\u00e9cents les microprocesseurs Cortex (Cortex-A pour les dispositifs portables de type smartphones et tablettes, Cortex-M pour le couplage \u00e0 un microcontr\u00f4leur, Cortex-R pour les microprocesseurs temps r\u00e9el), des processeurs graphiques (Mali), des bus AMBA sous licence libre, ainsi que les divers autres composants n\u00e9cessaires \u00e0 la composition du SoC complet. Certains constructeurs, tels que Nvidia, pr\u00e9f\u00e8rent produire leur propre processeur graphique, d'autres, comme Samsung, pr\u00e9f\u00e8rent prendre dans certains cas un processeur graphique de prestataire tiers ou d'ARM selon les mod\u00e8les, et d'autres, comme Apple, modifient certains composants du microprocesseur en m\u00e9langeant plusieurs architectures processeur ARM. </p> <p>(wikip\u00e9dia)  </p> <p>Une particularit\u00e9 des processeurs ARM est leur mode de vente. En effet, ARM Ltd. ne fabrique ni ne vend ses processeurs sous forme de circuits int\u00e9gr\u00e9s. La soci\u00e9t\u00e9 vend les licences de ses processeurs de mani\u00e8re qu'ils soient grav\u00e9s dans le silicium par d'autres fabricants. Aujourd'hui, la plupart des grands fondeurs de puces proposent de l'architecture ARM.   </p> <p></p> <p>Question</p> <p>22-Quel est l'avantage \u00e0 ne pas vendre des processeurs directement ? 23-Faites quelques recherches sur les probl\u00e8mes d'approvisionnement des semi-conducteurs  </p> <p>A retenir !!</p> <p>Faites une fiche ou une carte mentale sachant que vous devez savoir ce qu'est un SoC, ce qu'il contient, ses avantages par rapport \u00e0 un syst\u00e8me classique et o\u00f9 est ce qu'on les trouve.</p>"},{"location":"archi/soc/#exercices","title":"Exercices","text":""},{"location":"archi/soc/#exercice-n1","title":"Exercice n\u00b01\u00a0:","text":"<ol> <li>D\u00e9crire en quelques phrases ce qu'est un SoC.  </li> <li>Sch\u00e9matiser le Soc.  </li> </ol>"},{"location":"archi/soc/#exercice-n2","title":"Exercice n\u00b02:","text":"<p>A partir de l'article du site elektormagazine.fr.  1. Relevez les diff\u00e9rentes caract\u00e9ristiques du SoC du Raspberry Pi 3 mod\u00e8le B+.  2. Les comparez au SoC du Raspberry Pi 4.   3. Quelles sont les principales \u00e9volutions qui contribuent \u00e0 ce gain?   </p>"},{"location":"archi/soc/#exercice-n3","title":"Exercice n\u00b03 :","text":"<p> La photo ci-dessus montre le d\u00e9tail d'un SoC Kirin 990. Identifier les diff\u00e9rentes parties de ce SoC.</p>"},{"location":"archi/soc/#exercice-n4","title":"Exercice n\u00b04 :","text":"<p>  Faire une analogie entre les 2 colonnes (un ordinateur et vous qui \u00eates install\u00e9 chez vous \u00e0 votre bureau).  </p>"},{"location":"archi/soc/#exercice-n5","title":"Exercice n\u00b05 :","text":"<ol> <li>Quel est le nom du SoC de votre smarphone ?  </li> <li>Quelles en sont les fonctionnalit\u00e9es ?  </li> <li>Quelles sont les caract\u00e9ristiques du processeur ?    </li> </ol>"},{"location":"archi/soc/#exercice-n6","title":"Exercice n\u00b06 :","text":"<p>Depuis le tout premier circuit int\u00e9gr\u00e9 (le 4004) jusqu'\u00e0 nos jours, cette loi s'est toujours v\u00e9rifi\u00e9e m\u00eame si on s'en \u00e9loigne actuellement. Voici un exemple avec quelques processeurs d'Intel : 1971 : Intel 4004 : 2 300 transistors 1978 : Intel 8086 : 29 000 transistors 1982 : Intel 80286 275 000 transistors 1989 : Intel 80486 : 1 160 000 transistors 1993 : Pentium : 3 100 000 transistors 1995 : Pentium Pro : 5 500 000 transistors 1997 : Pentium II : 27 000 000 transistors 2001 : Pentium 4 : 42 000 000 transistors 2004 : Pentium Extreme Edition : 169 000 000 transistors 2006 : Core 2 Quad : 582 000 000 transistors 2010 : Core i7 : 1 170 000 000 transistors Le nombre de transistors sur un processeur suit la loi de Moore. Faire une recherche sur cette loi.  </p>"}]}