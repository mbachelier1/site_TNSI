{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Terminale NSI au lyc\u00e9e Henri Avril \u2693\ufe0e Le programme est d\u00e9coup\u00e9 en 5 parties : Structures de donn\u00e9es \u2693\ufe0e Listes piles et files Programmation Orient\u00e9e Objet Les arbres binaires Les graphes Bases de donn\u00e9es \u2693\ufe0e Mod\u00e8le relationnel Langage SQL Projet R\u00e9seaux et syst\u00e8me d'exploitation \u2693\ufe0e Gestion des processus Syst\u00e8me sur puce S\u00e9curiser les donn\u00e9es Enigma Programmation \u2693\ufe0e R\u00e9cursivit\u00e9 Modularit\u00e9 Algorithmie \u2693\ufe0e Les arbres binaires Les graphes Diviser pour r\u00e9gner Programmation dynamique Recherche textuelle","title":"Accueil"},{"location":"index.html#terminale-nsi-au-lycee-henri-avril","text":"Le programme est d\u00e9coup\u00e9 en 5 parties :","title":"Terminale NSI au lyc\u00e9e Henri Avril"},{"location":"index.html#structures-de-donnees","text":"Listes piles et files Programmation Orient\u00e9e Objet Les arbres binaires Les graphes","title":"Structures de donn\u00e9es"},{"location":"index.html#bases-de-donnees","text":"Mod\u00e8le relationnel Langage SQL Projet","title":"Bases de donn\u00e9es"},{"location":"index.html#reseaux-et-systeme-dexploitation","text":"Gestion des processus Syst\u00e8me sur puce S\u00e9curiser les donn\u00e9es Enigma","title":"R\u00e9seaux et syst\u00e8me d'exploitation"},{"location":"index.html#programmation","text":"R\u00e9cursivit\u00e9 Modularit\u00e9","title":"Programmation"},{"location":"index.html#algorithmie","text":"Les arbres binaires Les graphes Diviser pour r\u00e9gner Programmation dynamique Recherche textuelle","title":"Algorithmie"},{"location":"allure.html","text":"Terminale NSI au lyc\u00e9e Henri Avril \u2693\ufe0e Les th\u00e8mes du programme \u2693\ufe0e Le programme est d\u00e9coup\u00e9 en 5 parties : Structures de donn\u00e9es Bases de donn\u00e9es R\u00e9seaux et syst\u00e8me d'exploitation Programmation Algorithmie . Administration de la base via formulaire php \u2693\ufe0e 1 2 for i in range ( 10 ): print ( \"Salut \u00e0 tous !\" ) 1 < h1 > ldmfkhsmudfj </ h1 > 1 2 3 4 5 6 7 8 9 10 11 12 13 14 html , body { margin : 0 ; padding : 0 ; } body { background-color : white ; font-family : Verdana , sans-serif ; font-size : 100 % ; } h1 { font-size : 200 % ; color : navy ; text-align : center ; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var year = 2016 ; // des chiffres var president = \"Fran\u00e7ois H\" ; // des mots var candidats = [ \"Pierre\" , \"Paul\" , \"Jacques\" ]; // une liste de noms candidats [ 0 ]; // \"Pierre\" candidats [ 1 ]; // \"Paul\" var notes = [ 12 , 18 , 20 ]; // une liste de notes notes [ 0 ]; // 12 ```c #include<stdio.h> int main(){ int i; for(i = 0; i < 10; i++){ printf(\"Salut \u00e0 tous ! \\ n\"); } return 0; } 1 SELECT * FROM client ; 1 2 3 4 5 6 7 8 #include <stdio.h> int main (){ int i ; for ( i = 0 ; i < 10 ; i ++ ){ printf ( \"Salut \u00e0 tous ! \\n \" ); } return 0 ; } 1 SELECT * FROM client ; definiton toutes les lignes commencent par un chevron note une note summary summary example example important Important info info fail fail attention attention danger danger bug bug faq et pourquoi pas done done cite cite un bouton creux Un bouton pleins lien Question A votre avis de quelle nature sont les listes en python. onglet 1 des tableaux des listes cha\u00een\u00e9es onglet2 \u2705 des tableaux \u274c des listes cha\u00een\u00e9es","title":"Terminale NSI au lyc\u00e9e Henri Avril"},{"location":"allure.html#terminale-nsi-au-lycee-henri-avril","text":"","title":"Terminale NSI au lyc\u00e9e Henri Avril"},{"location":"allure.html#les-themes-du-programme","text":"Le programme est d\u00e9coup\u00e9 en 5 parties : Structures de donn\u00e9es Bases de donn\u00e9es R\u00e9seaux et syst\u00e8me d'exploitation Programmation Algorithmie .","title":"Les th\u00e8mes du programme"},{"location":"allure.html#administration-de-la-base-via-formulaire-php","text":"1 2 for i in range ( 10 ): print ( \"Salut \u00e0 tous !\" ) 1 < h1 > ldmfkhsmudfj </ h1 > 1 2 3 4 5 6 7 8 9 10 11 12 13 14 html , body { margin : 0 ; padding : 0 ; } body { background-color : white ; font-family : Verdana , sans-serif ; font-size : 100 % ; } h1 { font-size : 200 % ; color : navy ; text-align : center ; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var year = 2016 ; // des chiffres var president = \"Fran\u00e7ois H\" ; // des mots var candidats = [ \"Pierre\" , \"Paul\" , \"Jacques\" ]; // une liste de noms candidats [ 0 ]; // \"Pierre\" candidats [ 1 ]; // \"Paul\" var notes = [ 12 , 18 , 20 ]; // une liste de notes notes [ 0 ]; // 12 ```c #include<stdio.h> int main(){ int i; for(i = 0; i < 10; i++){ printf(\"Salut \u00e0 tous ! \\ n\"); } return 0; } 1 SELECT * FROM client ; 1 2 3 4 5 6 7 8 #include <stdio.h> int main (){ int i ; for ( i = 0 ; i < 10 ; i ++ ){ printf ( \"Salut \u00e0 tous ! \\n \" ); } return 0 ; } 1 SELECT * FROM client ; definiton toutes les lignes commencent par un chevron note une note summary summary example example important Important info info fail fail attention attention danger danger bug bug faq et pourquoi pas done done cite cite un bouton creux Un bouton pleins lien Question A votre avis de quelle nature sont les listes en python. onglet 1 des tableaux des listes cha\u00een\u00e9es onglet2 \u2705 des tableaux \u274c des listes cha\u00een\u00e9es","title":"Administration de la base via formulaire php"},{"location":"BDD/langageSQL.html","text":"Le langage SQL \u2693\ufe0e Les bases du langage SQL \u2693\ufe0e Bloc de s\u00e9lection \u2693\ufe0e Nous allons illustrer les exemples en partant d'une table Etudiant : Pour s\u00e9lectionner des informations dans une base de donn\u00e9es, on utilise le bloc suivant. Les instructions SELECT et FROM sont indispensables et permettent de dire ce que l'on veut affciher (* si on veut tout afficher) et dans quelle table on travaille. Par exemple : 1 SELECT * FROM Etudiant ; Permet d'afficher la table en entier. Si on ne veut que les noms et les pr\u00e9noms : 1 2 SELECT Nom , Prenom FROM Etudiant ; On peut ajouter le mot cl\u00e9 DISTINCT \u00e0 la suite de SELECT pour \u00e9viter les doublons. Utilisation des filtres et des tris \u2693\ufe0e On veut afficher les noms et pr\u00e9noms des \u00e9tudiants dont l'age est inf\u00e9rieur \u00e0 19 ans. 1 2 3 SELECT Nom , Prenom FROM Etudiant WHERE age < 19 ; On veut afficher les noms et pr\u00e9noms des \u00e9tudiants dont l'age est sup\u00e9rieur \u00e0 19 ans dans l'ordre alphab\u00e9tique des noms 1 2 3 4 SELECT Nom , Prenom FROM Etudiant WHERE age > 19 ORDER BY nom ; On ajoutera le mot cl\u00e9 desc \u00e0 la fin de la derni\u00e8re ligne de la requ\u00eate pour l'ordre inverse. Compter les occurrences \u2693\ufe0e La commande count permet de compter le nombre de valeurs non nulles pr\u00e9sentes dans la table pour un attribut donn\u00e9. Cette commande renvoie 2. 1 2 3 SELECT count ( id ) FROM Etudiants WHERE age = 19 ; Modification de la table : INSERT, UPDATE, DELETE \u2693\ufe0e Pour ajouter une entr\u00e9e dans la base de donn\u00e9es : 1 2 3 4 INSERT INTO Etudiants ( id , nom , prenom , sexe , age ) VALUES ( 6 , 'Einstein' , 'Albert' , 'H' , 142 ), ( 7 , 'De Beauvoir' , 'Simone' , 'F' , 113 ); Pour supprimer une entr\u00e9e : 1 2 DELETE FROM Etudiants WHERE nom = 'Einstein' ; Modifier une donn\u00e9e : 1 2 3 UPDATE Etudiants SET age = 23 WHERE nom = 'De Beauvoir' ; Calculs simples \u2693\ufe0e Nous avons cr\u00e9\u00e9 la table Notes pour r\u00e9f\u00e9rencer les notes des \u00e9tudiants aux examens : Les \u00e9tudiants ayant suivi une partie de leur enseignement de stats \u00e0 distance, l'universit\u00e9 a d\u00e9cid\u00e9 d'augmenter la note de 2points. On affiche le num\u00e9ro de l'\u00e9tudiant ainsi que se nouvelle note de stats : 1 2 SELECT etudiant , ( stats + 2 ) as nvstat FROM Notes ; Puis on affiche la moyenne de l'examen pour les maths : 1 2 SELECT AVG ( math ) FROM Notes ; Ou par \u00e9tudiant : 1 2 SELECT etudiant , (( stats + math + physique + anglais ) / 4 ) as moyenne FROM Notes ; Jointures : fusion de tables \u2693\ufe0e Jointure interne \u2693\ufe0e La jointure interne li\u00e9 les donn\u00e9es d'une table \u00e0 l'autre. On pr\u00e9cise l'ordre dans lequel on veut voir appara\u00eetre les tables (\u00e9tudiants \u00e0 gauche et notes \u00e0 droite) 1 2 3 SELECT * FROM Etudiants INNER JOIN Notes ON Etudiants . id = Notes . etudiant ; Remarque On remarque que un \u00e9tudiant n'a pas de notes donc ne figure pas dans la jointure. Jointure externe \u2693\ufe0e Pour palier \u00e0 ce probl\u00e8me on utilise la jointure externe. il y a plusieurs possibilit\u00e9s : On veut toute la table de droite m\u00eame si elle n'a pas de correspondance avec la table de gauche (right outer join) On veut la totalit\u00e9 des deux tables m\u00eame les lignes sans correspondance (full outer join) Seule la jointure gauche est tol\u00e9r\u00e9e par DB Browser mais d'autres logiciels permettent de faire une RIGHT OUTER JOIN et une FULL OUTER JOIN 1 2 3 SELECT * FROM Etudiants LEFT OUTER JOIN Notes ON Etudiants . id = Notes . etudiant ; Attention Seule la jointure gauche est tol\u00e9r\u00e9e par DB Browser mais d'autres logiciels permettent de faire une RIGHT OUTER JOIN et une FULL OUTER JOIN Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Langage SQL "},{"location":"BDD/langageSQL.html#le-langage-sql","text":"","title":"Le langage SQL"},{"location":"BDD/langageSQL.html#les-bases-du-langage-sql","text":"","title":"Les bases du langage SQL"},{"location":"BDD/langageSQL.html#bloc-de-selection","text":"Nous allons illustrer les exemples en partant d'une table Etudiant : Pour s\u00e9lectionner des informations dans une base de donn\u00e9es, on utilise le bloc suivant. Les instructions SELECT et FROM sont indispensables et permettent de dire ce que l'on veut affciher (* si on veut tout afficher) et dans quelle table on travaille. Par exemple : 1 SELECT * FROM Etudiant ; Permet d'afficher la table en entier. Si on ne veut que les noms et les pr\u00e9noms : 1 2 SELECT Nom , Prenom FROM Etudiant ; On peut ajouter le mot cl\u00e9 DISTINCT \u00e0 la suite de SELECT pour \u00e9viter les doublons.","title":"Bloc de s\u00e9lection"},{"location":"BDD/langageSQL.html#utilisation-des-filtres-et-des-tris","text":"On veut afficher les noms et pr\u00e9noms des \u00e9tudiants dont l'age est inf\u00e9rieur \u00e0 19 ans. 1 2 3 SELECT Nom , Prenom FROM Etudiant WHERE age < 19 ; On veut afficher les noms et pr\u00e9noms des \u00e9tudiants dont l'age est sup\u00e9rieur \u00e0 19 ans dans l'ordre alphab\u00e9tique des noms 1 2 3 4 SELECT Nom , Prenom FROM Etudiant WHERE age > 19 ORDER BY nom ; On ajoutera le mot cl\u00e9 desc \u00e0 la fin de la derni\u00e8re ligne de la requ\u00eate pour l'ordre inverse.","title":"Utilisation des filtres et des tris"},{"location":"BDD/langageSQL.html#compter-les-occurrences","text":"La commande count permet de compter le nombre de valeurs non nulles pr\u00e9sentes dans la table pour un attribut donn\u00e9. Cette commande renvoie 2. 1 2 3 SELECT count ( id ) FROM Etudiants WHERE age = 19 ;","title":"Compter les occurrences"},{"location":"BDD/langageSQL.html#modification-de-la-table-insert-update-delete","text":"Pour ajouter une entr\u00e9e dans la base de donn\u00e9es : 1 2 3 4 INSERT INTO Etudiants ( id , nom , prenom , sexe , age ) VALUES ( 6 , 'Einstein' , 'Albert' , 'H' , 142 ), ( 7 , 'De Beauvoir' , 'Simone' , 'F' , 113 ); Pour supprimer une entr\u00e9e : 1 2 DELETE FROM Etudiants WHERE nom = 'Einstein' ; Modifier une donn\u00e9e : 1 2 3 UPDATE Etudiants SET age = 23 WHERE nom = 'De Beauvoir' ;","title":"Modification de la table : INSERT, UPDATE, DELETE"},{"location":"BDD/langageSQL.html#calculs-simples","text":"Nous avons cr\u00e9\u00e9 la table Notes pour r\u00e9f\u00e9rencer les notes des \u00e9tudiants aux examens : Les \u00e9tudiants ayant suivi une partie de leur enseignement de stats \u00e0 distance, l'universit\u00e9 a d\u00e9cid\u00e9 d'augmenter la note de 2points. On affiche le num\u00e9ro de l'\u00e9tudiant ainsi que se nouvelle note de stats : 1 2 SELECT etudiant , ( stats + 2 ) as nvstat FROM Notes ; Puis on affiche la moyenne de l'examen pour les maths : 1 2 SELECT AVG ( math ) FROM Notes ; Ou par \u00e9tudiant : 1 2 SELECT etudiant , (( stats + math + physique + anglais ) / 4 ) as moyenne FROM Notes ;","title":"Calculs simples"},{"location":"BDD/langageSQL.html#jointures-fusion-de-tables","text":"","title":"Jointures : fusion de tables"},{"location":"BDD/langageSQL.html#jointure-interne","text":"La jointure interne li\u00e9 les donn\u00e9es d'une table \u00e0 l'autre. On pr\u00e9cise l'ordre dans lequel on veut voir appara\u00eetre les tables (\u00e9tudiants \u00e0 gauche et notes \u00e0 droite) 1 2 3 SELECT * FROM Etudiants INNER JOIN Notes ON Etudiants . id = Notes . etudiant ; Remarque On remarque que un \u00e9tudiant n'a pas de notes donc ne figure pas dans la jointure.","title":"Jointure interne"},{"location":"BDD/langageSQL.html#jointure-externe","text":"Pour palier \u00e0 ce probl\u00e8me on utilise la jointure externe. il y a plusieurs possibilit\u00e9s : On veut toute la table de droite m\u00eame si elle n'a pas de correspondance avec la table de gauche (right outer join) On veut la totalit\u00e9 des deux tables m\u00eame les lignes sans correspondance (full outer join) Seule la jointure gauche est tol\u00e9r\u00e9e par DB Browser mais d'autres logiciels permettent de faire une RIGHT OUTER JOIN et une FULL OUTER JOIN 1 2 3 SELECT * FROM Etudiants LEFT OUTER JOIN Notes ON Etudiants . id = Notes . etudiant ; Attention Seule la jointure gauche est tol\u00e9r\u00e9e par DB Browser mais d'autres logiciels permettent de faire une RIGHT OUTER JOIN et une FULL OUTER JOIN Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Jointure externe"},{"location":"BDD/modele_relationnel.html","text":"Mod\u00e8le relationnel \u2693\ufe0e Vocabulaire \u2693\ufe0e Nous allons nous baser sur la table suivante pour d\u00e9finir le vocabulaire n\u00e9cessaire : Relation Dans le mod\u00e8le relationnel, les donn\u00e9es sont stock\u00e9es dans des tables, aussi appel\u00e9es relations. !!! Example 'exemple' : La relation pr\u00e9sent\u00e9e ci-dessus est appel\u00e9e voiture . Attribut Le nom d'une colonne d'une relation est appel\u00e9 attribut . La relation voiture poss\u00e8de trois attributs: marque , couleur et plaque . Un enregistrement (ligne) d'une relation est appel\u00e9 n-uplet. Attribut ID voiture, marque de la table voiture. ID carburant, type de la table carburant. Domaine Le domaine d'un attribut est l'ensemble des valeurs qui peuvent \u00eatre prises par cet attribut. Une base de donn\u00e9e sqlite il n'y a que cinq domaines de valeurs possibles: NULL. La valeur est une valeur NULL. INTEGER. La valeur est un entier sign\u00e9, stock\u00e9 dans 1, 2, 3, 4, 6 ou 8 octets en fonction de l'amplitude de la valeur. REAL. La valeur est une valeur \u00e0 virgule flottante, stock\u00e9e sous forme de nombre \u00e0 virgule flottante IEEE de 8 octets. TEXT. La valeur est une cha\u00eene de texte, stock\u00e9e \u00e0 l'aide du codage de la base de donn\u00e9es (UTF-8, UTF-16BE ou UTF-16LE). BLOB. La valeur est une donn\u00e9e binaire brute, stock\u00e9 exactement comme elle a \u00e9t\u00e9 entr\u00e9e. En PhpMyAdmin il y a beaucoup plus de types avec notamment des formats pour les dates (voir projet). Ce tableau r\u00e9capitule le lien entre le vocabulaire rigoureux en mod\u00e8le relationnel et les termes utilis\u00e9s lors du traitement des tables. Cl\u00e9s primaires et secondaires \u2693\ufe0e Chaque ligne de la table doit comporter un attribut qui l'identifie de fa\u00e7on unique, on l'appelle la cl\u00e9 primaire . Exemple Dans la table voiture l'attribut plaque pourrait constituer la cl\u00e9 primaire. En s'inscrivant sur un site, on vous impose d'utiliser un identifiant unique pour cr\u00e9er votre ligne dans la base de donn\u00e9es. L'email d'un utilisateur peut servir de cl\u00e9 primaire, mais ce n'est pas conseill\u00e9. Attention Il est pr\u00e9f\u00e9rable d'utiliser une cl\u00e9 primaire ind\u00e9pendante des donn\u00e9es de la table pour ne pas perdre d\u2019information lors d'une \u00e9ventuelle mise \u00e0 jour. Une cl\u00e9 secondaire ou cl\u00e9 \u00e9trang\u00e8re est une cl\u00e9 utilis\u00e9e dans une table pour faire r\u00e9f\u00e9rence \u00e0 un enregistrement d'une autre table. Repr\u00e9sentaion des relations \u2693\ufe0e On peut repr\u00e9senter le lien entre plusieurs tables de donn\u00e9es ainsi : Ce sch\u00e9ma est appel\u00e9 sch\u00e9ma relationnel . Il fait appara\u00eetre le lien entre les tables, les cl\u00e9s primaires et \u00e9trang\u00e8res et les domaines de chaque attribut. On peut aussi le noter plus simplement sous la forme du nom de la relation suivi de la liste de ses attributs. Dans cette notation, les cl\u00e9s primaires apparaissent soulign\u00e9es, les cl\u00e9s \u00e9trang\u00e8res pr\u00e9c\u00e9d\u00e9es (ou suivies) d'un # . On peut \u00e9galement pr\u00e9ciser les domaines des diff\u00e9rents attributs : Contraintes \u2693\ufe0e Pour \u00e9viter au maximum les erreurs on s'assurera que: la cl\u00e9 primaire est unique et non nulle. Si une table fait r\u00e9f\u00e9rence \u00e0 une information d'une autre table, cette derni\u00e8re doit exister de fa\u00e7on certaine. On \u00e9vitera les informations concernant deux objets diff\u00e9rents, on pr\u00e9f\u00e9rera multiplier les tables. Dans l'exemple ci-dessous, on pr\u00e9f\u00e8re mettre deux tables en relation plut\u00f4t que de mettre les informations concernant les ventes et les informations concernant les produits dans la m\u00eame table : Anomalies \u2693\ufe0e On peut relever diff\u00e9rents types d'anomalies qui seront source d'erreur. On fera donc en sorte de les \u00e9viter au maximum. Anomalie de redondance : On retrouve plusieurs fois la m\u00eame information (ici les infos li\u00e9es \u00e0 un r\u00e9alisateur). Par exemple la date de naissance et le nom de Alfred Hitchcock. Il aurait mieux valut une relation s\u00e9par\u00e9e concernant les r\u00e9alisateurs, et que la relation des films fasse r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire des r\u00e9alisateurs. Anomalie d'insertion : L'absence de cl\u00e9 primaire permet d'ins\u00e9rer plusieurs fois le m\u00eame film avec des descripteurs diff\u00e9rents. La question est de savoir ce qui est unique dans cette description. Le titre peut \u00eatre utilis\u00e9 pour deux films diff\u00e9rents, un r\u00e9alisateur peut avoir fait plusieurs films, et m\u00eame deux r\u00e9alisateurs avoir le m\u00eame nom et m\u00eame ann\u00e9e de naissance. Anomalie de suppression : La suppression de l'unique film d'un r\u00e9alisateur supprime automatiquement les informations du r\u00e9alisateur. Anomalie de mise \u00e0 jour : La modification de l'ann\u00e9e de naissance d'un r\u00e9alisateur oblige \u00e0 faire la mise \u00e0 jour sur plusieurs lignes. Un petit r\u00e9sum\u00e9 vid\u00e9o : \u2693\ufe0e Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Mod\u00e8le relationnel"},{"location":"BDD/modele_relationnel.html#modele-relationnel","text":"","title":"Mod\u00e8le relationnel"},{"location":"BDD/modele_relationnel.html#vocabulaire","text":"Nous allons nous baser sur la table suivante pour d\u00e9finir le vocabulaire n\u00e9cessaire : Relation Dans le mod\u00e8le relationnel, les donn\u00e9es sont stock\u00e9es dans des tables, aussi appel\u00e9es relations. !!! Example 'exemple' : La relation pr\u00e9sent\u00e9e ci-dessus est appel\u00e9e voiture . Attribut Le nom d'une colonne d'une relation est appel\u00e9 attribut . La relation voiture poss\u00e8de trois attributs: marque , couleur et plaque . Un enregistrement (ligne) d'une relation est appel\u00e9 n-uplet. Attribut ID voiture, marque de la table voiture. ID carburant, type de la table carburant. Domaine Le domaine d'un attribut est l'ensemble des valeurs qui peuvent \u00eatre prises par cet attribut. Une base de donn\u00e9e sqlite il n'y a que cinq domaines de valeurs possibles: NULL. La valeur est une valeur NULL. INTEGER. La valeur est un entier sign\u00e9, stock\u00e9 dans 1, 2, 3, 4, 6 ou 8 octets en fonction de l'amplitude de la valeur. REAL. La valeur est une valeur \u00e0 virgule flottante, stock\u00e9e sous forme de nombre \u00e0 virgule flottante IEEE de 8 octets. TEXT. La valeur est une cha\u00eene de texte, stock\u00e9e \u00e0 l'aide du codage de la base de donn\u00e9es (UTF-8, UTF-16BE ou UTF-16LE). BLOB. La valeur est une donn\u00e9e binaire brute, stock\u00e9 exactement comme elle a \u00e9t\u00e9 entr\u00e9e. En PhpMyAdmin il y a beaucoup plus de types avec notamment des formats pour les dates (voir projet). Ce tableau r\u00e9capitule le lien entre le vocabulaire rigoureux en mod\u00e8le relationnel et les termes utilis\u00e9s lors du traitement des tables.","title":"Vocabulaire"},{"location":"BDD/modele_relationnel.html#cles-primaires-et-secondaires","text":"Chaque ligne de la table doit comporter un attribut qui l'identifie de fa\u00e7on unique, on l'appelle la cl\u00e9 primaire . Exemple Dans la table voiture l'attribut plaque pourrait constituer la cl\u00e9 primaire. En s'inscrivant sur un site, on vous impose d'utiliser un identifiant unique pour cr\u00e9er votre ligne dans la base de donn\u00e9es. L'email d'un utilisateur peut servir de cl\u00e9 primaire, mais ce n'est pas conseill\u00e9. Attention Il est pr\u00e9f\u00e9rable d'utiliser une cl\u00e9 primaire ind\u00e9pendante des donn\u00e9es de la table pour ne pas perdre d\u2019information lors d'une \u00e9ventuelle mise \u00e0 jour. Une cl\u00e9 secondaire ou cl\u00e9 \u00e9trang\u00e8re est une cl\u00e9 utilis\u00e9e dans une table pour faire r\u00e9f\u00e9rence \u00e0 un enregistrement d'une autre table.","title":"Cl\u00e9s primaires et secondaires"},{"location":"BDD/modele_relationnel.html#representaion-des-relations","text":"On peut repr\u00e9senter le lien entre plusieurs tables de donn\u00e9es ainsi : Ce sch\u00e9ma est appel\u00e9 sch\u00e9ma relationnel . Il fait appara\u00eetre le lien entre les tables, les cl\u00e9s primaires et \u00e9trang\u00e8res et les domaines de chaque attribut. On peut aussi le noter plus simplement sous la forme du nom de la relation suivi de la liste de ses attributs. Dans cette notation, les cl\u00e9s primaires apparaissent soulign\u00e9es, les cl\u00e9s \u00e9trang\u00e8res pr\u00e9c\u00e9d\u00e9es (ou suivies) d'un # . On peut \u00e9galement pr\u00e9ciser les domaines des diff\u00e9rents attributs :","title":"Repr\u00e9sentaion des relations"},{"location":"BDD/modele_relationnel.html#contraintes","text":"Pour \u00e9viter au maximum les erreurs on s'assurera que: la cl\u00e9 primaire est unique et non nulle. Si une table fait r\u00e9f\u00e9rence \u00e0 une information d'une autre table, cette derni\u00e8re doit exister de fa\u00e7on certaine. On \u00e9vitera les informations concernant deux objets diff\u00e9rents, on pr\u00e9f\u00e9rera multiplier les tables. Dans l'exemple ci-dessous, on pr\u00e9f\u00e8re mettre deux tables en relation plut\u00f4t que de mettre les informations concernant les ventes et les informations concernant les produits dans la m\u00eame table :","title":"Contraintes"},{"location":"BDD/modele_relationnel.html#anomalies","text":"On peut relever diff\u00e9rents types d'anomalies qui seront source d'erreur. On fera donc en sorte de les \u00e9viter au maximum. Anomalie de redondance : On retrouve plusieurs fois la m\u00eame information (ici les infos li\u00e9es \u00e0 un r\u00e9alisateur). Par exemple la date de naissance et le nom de Alfred Hitchcock. Il aurait mieux valut une relation s\u00e9par\u00e9e concernant les r\u00e9alisateurs, et que la relation des films fasse r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire des r\u00e9alisateurs. Anomalie d'insertion : L'absence de cl\u00e9 primaire permet d'ins\u00e9rer plusieurs fois le m\u00eame film avec des descripteurs diff\u00e9rents. La question est de savoir ce qui est unique dans cette description. Le titre peut \u00eatre utilis\u00e9 pour deux films diff\u00e9rents, un r\u00e9alisateur peut avoir fait plusieurs films, et m\u00eame deux r\u00e9alisateurs avoir le m\u00eame nom et m\u00eame ann\u00e9e de naissance. Anomalie de suppression : La suppression de l'unique film d'un r\u00e9alisateur supprime automatiquement les informations du r\u00e9alisateur. Anomalie de mise \u00e0 jour : La modification de l'ann\u00e9e de naissance d'un r\u00e9alisateur oblige \u00e0 faire la mise \u00e0 jour sur plusieurs lignes.","title":"Anomalies"},{"location":"BDD/modele_relationnel.html#un-petit-resume-video","text":"Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Un petit r\u00e9sum\u00e9 vid\u00e9o :"},{"location":"BDD/projet_SQL.html","text":"Projet SQL \u2693\ufe0e Ce projet sur SQL va vous apprendre \u00e0 administrer une base de donn\u00e9es en utilisant une page php. Il va donc nous falloir un serveur. Uwamp \u00e0 t\u00e9l\u00e9charger ici . le logiciel ne m\u00e9morise pas les requ\u00eates. Certaines seront exigeables pour le rendu du projet, pensez donc \u00e0 les copier puis les coller dans un ficher .txt ou doc Installer Uwamp \u2693\ufe0e D\u00e9compressez-le sur votre cl\u00e9 USB. Ex\u00e9cuter UwAmp.exe et autorisez \u00e0 communiquer sur les r\u00e9seaux priv\u00e9s Si tout va bien vous devriez voir cette fen\u00eatre : Cliquez sur PhpMyAdmin Entrer l'utilisateur : root et le mot de passe : root puis ex\u00e9cuter. Cr\u00e9er une base de donn\u00e9es appel\u00e9e mongarage , soit en cliquant sur l'onglet SQL et en tapant la requ\u00eate soit en cliquant sur 'Nouvelle base de donn\u00e9es'. Compl\u00e9ments SQL avec phpmyadmin \u2693\ufe0e Le langage SQL utilis\u00e9 dans phpmyadmin est un peu plus complet que celui de DB Browser. On pourra faire des jointure externe droite par exemple et la mani\u00e8re de d\u00e9finir les formats de donn\u00e9es. Formats petit texte : CHAR(nombre de caract\u00e8res max) ou VARCHAR en utilisant la cr\u00e9ation sans requ\u00eates. entier : INT(nombre de chiffres max) long texte : TEXT date : DATE ou DATETIME si on veut aussi l'heure. La base de donn\u00e9es \u2693\ufe0e Nous allons cr\u00e9er les tables de fa\u00e7on \u00e0 obtenir le mod\u00e8le suivant : On pourra utiliser comme exemple la commande suivante : 1 2 3 4 5 6 CREATE TABLE client ( NoClient INT NOT NULL AUTO_INCREMENT PRIMARY KEY , nom CHAR ( 25 ), prenom CHAR ( 25 ), adresse CHAR ( 50 ), telephone CHAR ( 15 )) CHARSET = utf8 ; Informations sur les commandes : CHARSET=utf8 permet de d\u00e9finir l'encodage du texte (important lorsque l'on traite des noms en fran\u00e7ais) AUTO_INCREMENT : permet de d\u00e9finir que cette valeur sera automatiquement incr\u00e9ment\u00e9e \u00e0 la cr\u00e9ation de la ligne (inutile de le renseigner lors de la requ\u00eate INSERT on le remplacera pas NULL . PRIMARY KEY : d\u00e9finit la cl\u00e9 primaire de la table Cr\u00e9ation de la cl\u00e9 secondaire entre la table client et la table v\u00e9hicule : 1 ALTER TABLE vehicule ADD FOREIGN KEY ( NoClient ) REFERENCES client ( NoClient ); Pour v\u00e9rifier la cr\u00e9ation de vos table et des liens cliquer sur l'onglet PLUS puis concepteur. Vous avez aussi la possibilit\u00e9 de cr\u00e9er vos tables et vos liens en direct sur l'interface mais il faudra faire quelques recherches pr\u00e9alables. Ajouter des donn\u00e9es \u2693\ufe0e En utilisant les requ\u00eates (que vous copierez dans un fichier texte) cr\u00e9er un client : nom : FERRARI prenom : Piero adresse : 20 rue de Milan MODENE telephone : 01 02 03 04 05 Puis nous lui ajouterons deux v\u00e9hicules : une Ferrari F8Spider immatricul\u00e9e FE-123-RR et une Ferrari Monza SP1 immatricul\u00e9e AR-321-RI. Importer des donn\u00e9es \u2693\ufe0e T\u00e9l\u00e9charger les tables client.csv et vehicule.csv . Importer les informations dans les tables et v\u00e9rifier en ouvrant le fichier .csv et e cliquant sur l'onglet AFFICHER : Compl\u00e9ter la base de donn\u00e9es avec les tables permettant d'obtenir ceci: on commencera par cr\u00e9er la table reparation avant celle de travaux. T\u00e9l\u00e9charger les fichiers reparation.csv et travaux.csv et importer les donn\u00e9es. Exercice 1 : Les requ\u00eates \u2693\ufe0e Cr\u00e9er la requ\u00eate SQl permettant : Faire une copie d'\u00e9cran des r\u00e9sultats en plus de la copie des requ\u00eates. d'afficher les informations client de Penelope CRUZ. d'afficher \u00e0 la fois les informations client de Omar SY et les informations li\u00e9es \u00e0 son ou ses v\u00e9hicules. une liste des imatriculations des v\u00e9hicules ayant fait l'objet de travaux le '2020/03/20'. Trouver le num\u00e9ro de t\u00e9l\u00e9phone du propri\u00e9taire de la voiture immatricul\u00e9e EE-111-FF. Donner la liste des immatriculations, le cout et la dur\u00e9e dont le prix des travaux (cout x duree) est sup\u00e9rieur \u00e0 50\u20ac. Exercice 2 : Exploitation de la base de donn\u00e9es en php. \u2693\ufe0e Cr\u00e9er un dossier mongarage dans le dossier www du serveur Wamp. Cr\u00e9er un fichier r_client.php dans le dossier mongarage en collant le code ci-dessous dans le fichier, permettant d'interroger de la base de donn\u00e9es et d'afficher les coordonn\u00e9es compl\u00e8tes du client : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 <!doctype html> <head> <meta charset=\"utf-8\"> <title>Client</title> </head> <body> <br> <form action=\"r_client.php\" method=\"get\"> <label>Entrer le nom de client</label> : <input type=\"text\" name=\"nom\" /> <input type=\"submit\" value=\"Envoyer\" /> </form> <br> <?php $servername = \"localhost\" ; $username = \"root\" ; $password = \"root\" ; $dbname = \"mongarage\" ; $html = '' ; if ( empty ( $_GET [ 'nom' ]) == False ) { $nom = $_GET [ 'nom' ]; // Etablir la connexion \u00e0 la base de donn\u00e9e $conn = new mysqli ( $servername , $username , $password , $dbname ); // V\u00e9rification de la connexion if ( $conn -> connect_error ) { die ( \"Echec de connexion : \" . $conn -> connect_error ); } // Cr\u00e9ation de la requ\u00eate $sql = 'SELECT * FROM Client WHERE nom=\"' . $nom . '\";' ; $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ) { // affiche chaque client du m\u00eame nom dans une table $html = \"<table style: border='1'><tr><th>Nom</th><th>pr\u00e9nom</th><th>adresse</th><th>n\u00b0 T\u00e9l\u00e9phone</th></tr>\" ; while ( $row = $result -> fetch_assoc ()) { $html = $html . \"<tr><td>\" . $row [ \"nom\" ] . \"</td><td>\" . $row [ \"prenom\" ] . \"</td><td>\" . $row [ \"adresse\" ] . \"</td><td>\" . $row [ \"telephone\" ] . \"</td></tr>\" ; } $html = $html . \"</table><br>\" ; } else { $html = \"<p>Aucun r\u00e9sultat</p>\" ; } $conn -> close (); //clos la connexion avec la base de donn\u00e9es echo $html ; } ?> </body> </html> La variable $row est un tableau index\u00e9 pour lequel $row['nom'] contient le nom du r\u00e9sultat de la requ\u00eate de la ligne courante. On fait une boucle pour pacourir ligne par ligne le r\u00e9sultat de la requ\u00eate. La variable $row change alors de contenu \u00e0 chaque ligne de r\u00e9sultat. Tester le code. Partie 1 Cr\u00e9er un fichier r-immat.php permettant d'afficher les coordonn\u00e9es du client par une recherche de plaque d'immatriculation. On notera que pour r\u00e9utiliser le contenu d'une variable php dans une requ\u00eate SQL on l'entoure de points, de simple quote puis de guillemets comme lors de la req\u00fbete du fichier pr\u00e9c\u00e9dent. La requ\u00eate elle-m\u00eame est entour\u00e9 de quote et rang\u00e9e dans une variable. Attention aux points virgule. 1 $sql='SELECT * FROM Client WHERE nom=\"'.$nom.'\";'; Partie 2: Cr\u00e9er un fichier e_repare.php permettant de faire un \u00e9tat de toutes les r\u00e9parations effectu\u00e9es sur un v\u00e9hicule. Deux requ\u00eates sont n\u00e9cessaires : 1 2 Une premi\u00e8re reprend le code php pr\u00e9c\u00e9dent pour afficher le propri\u00e9taire, Une deuxi\u00e8me sur les tables travaux et Reparation pour faire un \u00e9tat indiquant les r\u00e9parations faites sur cette voiture (en bonus facultatif: la somme totale des r\u00e9parations.) Partie 3 Compl\u00e9ter le code de la page n_client.php ci-dessous permettant de cr\u00e9er un nouveau client dans la base. R\u00e9sultat : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 <!doctype html> <head> <meta charset=\"utf-8\" /> <title>Client</title> </head> <body> <form action=\"n_client.php\" method=\"get\"> <br><label>Nom</label> : <input type=\"text\" name=\"nom\" /><br> <br><label>Pr\u00e9nom</label> : <input type=\"text\" name=\"prenom\" /><br> <br><label>Adresse</label> : <input type=\"text\" name=\"adresse\" /><br> <br><label>No de t\u00e9l\u00e9phone</label> : <input type=\"text\" name=\"tel\" /><br> <br><label>Marque du v\u00e9hicule</label> : <input type=\"text\" name=\"marque\" /><br> <br><label>Mod\u00e8le</label> : <input type=\"text\" name=\"modele\" /><br> <br><label>Immatriculation</label> : <input type=\"text\" name=\"immat\" /><br> <br><input type=\"submit\" value=\"Envoyer\" /> </form> <br> <?php $servername = \"localhost\" ; $username = \"root\" ; $password = \"root\" ; $dbname = \"mongarage\" ; $html = '' ; if ( empty ( $_GET [ 'nom' ]) == False && empty ( $_GET [ 'prenom' ]) == False && empty ( $_GET [ 'adresse' ]) == False && empty ( $_GET [ 'tel' ]) == False && empty ( $_GET [ 'marque' ]) == False && empty ( $_GET [ 'modele' ]) == False && empty ( $_GET [ 'immat' ]) == False ) { $nom = $_GET [ 'nom' ]; $prenom = $_GET [ 'prenom' ]; $adresse = $_GET [ 'adresse' ]; $tel = $_GET [ 'tel' ]; $marque = $_GET [ 'marque' ]; $modele = $_GET [ 'modele' ]; $immat = $_GET [ 'immat' ]; // Etablir la connexion \u00e0 la base de donn\u00e9e $conn = new mysqli ( $servername , $username , $password , $dbname ); // Cr\u00e9ation de la commande SQL permettant d'ajouter le nouvel client $sql =... $result = $conn -> query ( $sql ); if ( $result == True ) { // affiche le message de r\u00e9ussite de l'ajout de donn\u00e9es dans la base $html = \"<p>Nouveau client enregistr\u00e9</p>\" ; } else { $html = \"<p>Erreur dans la requ\u00eate client</p>\" ; } // Cr\u00e9ation de la requ\u00eate SQL permettant de r\u00e9cup\u00e9rer le num\u00e9ro du client cr\u00e9\u00e9e pr\u00e9cedemment par l'auto incr\u00e9mentation $sql =... $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ) { // m\u00e9morise le NoClient $row = $result -> fetch_assoc (); } // Cr\u00e9ation de la commande SQL permettant d'ajouter le nouveau v\u00e9hicule dans la table vehicule $sql =... $result = $conn -> query ( $sql ); if ( $result == True ) { // affiche le message de r\u00e9ussite $html = \"<p>Nouveau v\u00e9hicule enregistr\u00e9</p>\" ; } else { $html = \"<p>Erreur dans la requ\u00eate v\u00e9hicule</p>\" ; } } else { $html = \"<p>Merci de remplir tous les champs</p>\" ; } echo $html ; ?> </body> </html> Enregistrez vos fichiers dans le dossier www. Zippez ce dossier et le rendre au professeur en temps voulu. Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Projet SQL "},{"location":"BDD/projet_SQL.html#projet-sql","text":"Ce projet sur SQL va vous apprendre \u00e0 administrer une base de donn\u00e9es en utilisant une page php. Il va donc nous falloir un serveur. Uwamp \u00e0 t\u00e9l\u00e9charger ici . le logiciel ne m\u00e9morise pas les requ\u00eates. Certaines seront exigeables pour le rendu du projet, pensez donc \u00e0 les copier puis les coller dans un ficher .txt ou doc","title":"Projet SQL"},{"location":"BDD/projet_SQL.html#installer-uwamp","text":"D\u00e9compressez-le sur votre cl\u00e9 USB. Ex\u00e9cuter UwAmp.exe et autorisez \u00e0 communiquer sur les r\u00e9seaux priv\u00e9s Si tout va bien vous devriez voir cette fen\u00eatre : Cliquez sur PhpMyAdmin Entrer l'utilisateur : root et le mot de passe : root puis ex\u00e9cuter. Cr\u00e9er une base de donn\u00e9es appel\u00e9e mongarage , soit en cliquant sur l'onglet SQL et en tapant la requ\u00eate soit en cliquant sur 'Nouvelle base de donn\u00e9es'.","title":"Installer Uwamp"},{"location":"BDD/projet_SQL.html#complements-sql-avec-phpmyadmin","text":"Le langage SQL utilis\u00e9 dans phpmyadmin est un peu plus complet que celui de DB Browser. On pourra faire des jointure externe droite par exemple et la mani\u00e8re de d\u00e9finir les formats de donn\u00e9es. Formats petit texte : CHAR(nombre de caract\u00e8res max) ou VARCHAR en utilisant la cr\u00e9ation sans requ\u00eates. entier : INT(nombre de chiffres max) long texte : TEXT date : DATE ou DATETIME si on veut aussi l'heure.","title":"Compl\u00e9ments SQL avec phpmyadmin"},{"location":"BDD/projet_SQL.html#la-base-de-donnees","text":"Nous allons cr\u00e9er les tables de fa\u00e7on \u00e0 obtenir le mod\u00e8le suivant : On pourra utiliser comme exemple la commande suivante : 1 2 3 4 5 6 CREATE TABLE client ( NoClient INT NOT NULL AUTO_INCREMENT PRIMARY KEY , nom CHAR ( 25 ), prenom CHAR ( 25 ), adresse CHAR ( 50 ), telephone CHAR ( 15 )) CHARSET = utf8 ; Informations sur les commandes : CHARSET=utf8 permet de d\u00e9finir l'encodage du texte (important lorsque l'on traite des noms en fran\u00e7ais) AUTO_INCREMENT : permet de d\u00e9finir que cette valeur sera automatiquement incr\u00e9ment\u00e9e \u00e0 la cr\u00e9ation de la ligne (inutile de le renseigner lors de la requ\u00eate INSERT on le remplacera pas NULL . PRIMARY KEY : d\u00e9finit la cl\u00e9 primaire de la table Cr\u00e9ation de la cl\u00e9 secondaire entre la table client et la table v\u00e9hicule : 1 ALTER TABLE vehicule ADD FOREIGN KEY ( NoClient ) REFERENCES client ( NoClient ); Pour v\u00e9rifier la cr\u00e9ation de vos table et des liens cliquer sur l'onglet PLUS puis concepteur. Vous avez aussi la possibilit\u00e9 de cr\u00e9er vos tables et vos liens en direct sur l'interface mais il faudra faire quelques recherches pr\u00e9alables.","title":"La base de donn\u00e9es"},{"location":"BDD/projet_SQL.html#ajouter-des-donnees","text":"En utilisant les requ\u00eates (que vous copierez dans un fichier texte) cr\u00e9er un client : nom : FERRARI prenom : Piero adresse : 20 rue de Milan MODENE telephone : 01 02 03 04 05 Puis nous lui ajouterons deux v\u00e9hicules : une Ferrari F8Spider immatricul\u00e9e FE-123-RR et une Ferrari Monza SP1 immatricul\u00e9e AR-321-RI.","title":"Ajouter des donn\u00e9es"},{"location":"BDD/projet_SQL.html#importer-des-donnees","text":"T\u00e9l\u00e9charger les tables client.csv et vehicule.csv . Importer les informations dans les tables et v\u00e9rifier en ouvrant le fichier .csv et e cliquant sur l'onglet AFFICHER : Compl\u00e9ter la base de donn\u00e9es avec les tables permettant d'obtenir ceci: on commencera par cr\u00e9er la table reparation avant celle de travaux. T\u00e9l\u00e9charger les fichiers reparation.csv et travaux.csv et importer les donn\u00e9es.","title":"Importer des donn\u00e9es"},{"location":"BDD/projet_SQL.html#exercice-1-les-requetes","text":"Cr\u00e9er la requ\u00eate SQl permettant : Faire une copie d'\u00e9cran des r\u00e9sultats en plus de la copie des requ\u00eates. d'afficher les informations client de Penelope CRUZ. d'afficher \u00e0 la fois les informations client de Omar SY et les informations li\u00e9es \u00e0 son ou ses v\u00e9hicules. une liste des imatriculations des v\u00e9hicules ayant fait l'objet de travaux le '2020/03/20'. Trouver le num\u00e9ro de t\u00e9l\u00e9phone du propri\u00e9taire de la voiture immatricul\u00e9e EE-111-FF. Donner la liste des immatriculations, le cout et la dur\u00e9e dont le prix des travaux (cout x duree) est sup\u00e9rieur \u00e0 50\u20ac.","title":"Exercice 1 : Les requ\u00eates"},{"location":"BDD/projet_SQL.html#exercice-2-exploitation-de-la-base-de-donnees-en-php","text":"Cr\u00e9er un dossier mongarage dans le dossier www du serveur Wamp. Cr\u00e9er un fichier r_client.php dans le dossier mongarage en collant le code ci-dessous dans le fichier, permettant d'interroger de la base de donn\u00e9es et d'afficher les coordonn\u00e9es compl\u00e8tes du client : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 <!doctype html> <head> <meta charset=\"utf-8\"> <title>Client</title> </head> <body> <br> <form action=\"r_client.php\" method=\"get\"> <label>Entrer le nom de client</label> : <input type=\"text\" name=\"nom\" /> <input type=\"submit\" value=\"Envoyer\" /> </form> <br> <?php $servername = \"localhost\" ; $username = \"root\" ; $password = \"root\" ; $dbname = \"mongarage\" ; $html = '' ; if ( empty ( $_GET [ 'nom' ]) == False ) { $nom = $_GET [ 'nom' ]; // Etablir la connexion \u00e0 la base de donn\u00e9e $conn = new mysqli ( $servername , $username , $password , $dbname ); // V\u00e9rification de la connexion if ( $conn -> connect_error ) { die ( \"Echec de connexion : \" . $conn -> connect_error ); } // Cr\u00e9ation de la requ\u00eate $sql = 'SELECT * FROM Client WHERE nom=\"' . $nom . '\";' ; $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ) { // affiche chaque client du m\u00eame nom dans une table $html = \"<table style: border='1'><tr><th>Nom</th><th>pr\u00e9nom</th><th>adresse</th><th>n\u00b0 T\u00e9l\u00e9phone</th></tr>\" ; while ( $row = $result -> fetch_assoc ()) { $html = $html . \"<tr><td>\" . $row [ \"nom\" ] . \"</td><td>\" . $row [ \"prenom\" ] . \"</td><td>\" . $row [ \"adresse\" ] . \"</td><td>\" . $row [ \"telephone\" ] . \"</td></tr>\" ; } $html = $html . \"</table><br>\" ; } else { $html = \"<p>Aucun r\u00e9sultat</p>\" ; } $conn -> close (); //clos la connexion avec la base de donn\u00e9es echo $html ; } ?> </body> </html> La variable $row est un tableau index\u00e9 pour lequel $row['nom'] contient le nom du r\u00e9sultat de la requ\u00eate de la ligne courante. On fait une boucle pour pacourir ligne par ligne le r\u00e9sultat de la requ\u00eate. La variable $row change alors de contenu \u00e0 chaque ligne de r\u00e9sultat. Tester le code. Partie 1 Cr\u00e9er un fichier r-immat.php permettant d'afficher les coordonn\u00e9es du client par une recherche de plaque d'immatriculation. On notera que pour r\u00e9utiliser le contenu d'une variable php dans une requ\u00eate SQL on l'entoure de points, de simple quote puis de guillemets comme lors de la req\u00fbete du fichier pr\u00e9c\u00e9dent. La requ\u00eate elle-m\u00eame est entour\u00e9 de quote et rang\u00e9e dans une variable. Attention aux points virgule. 1 $sql='SELECT * FROM Client WHERE nom=\"'.$nom.'\";'; Partie 2: Cr\u00e9er un fichier e_repare.php permettant de faire un \u00e9tat de toutes les r\u00e9parations effectu\u00e9es sur un v\u00e9hicule. Deux requ\u00eates sont n\u00e9cessaires : 1 2 Une premi\u00e8re reprend le code php pr\u00e9c\u00e9dent pour afficher le propri\u00e9taire, Une deuxi\u00e8me sur les tables travaux et Reparation pour faire un \u00e9tat indiquant les r\u00e9parations faites sur cette voiture (en bonus facultatif: la somme totale des r\u00e9parations.) Partie 3 Compl\u00e9ter le code de la page n_client.php ci-dessous permettant de cr\u00e9er un nouveau client dans la base. R\u00e9sultat : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 <!doctype html> <head> <meta charset=\"utf-8\" /> <title>Client</title> </head> <body> <form action=\"n_client.php\" method=\"get\"> <br><label>Nom</label> : <input type=\"text\" name=\"nom\" /><br> <br><label>Pr\u00e9nom</label> : <input type=\"text\" name=\"prenom\" /><br> <br><label>Adresse</label> : <input type=\"text\" name=\"adresse\" /><br> <br><label>No de t\u00e9l\u00e9phone</label> : <input type=\"text\" name=\"tel\" /><br> <br><label>Marque du v\u00e9hicule</label> : <input type=\"text\" name=\"marque\" /><br> <br><label>Mod\u00e8le</label> : <input type=\"text\" name=\"modele\" /><br> <br><label>Immatriculation</label> : <input type=\"text\" name=\"immat\" /><br> <br><input type=\"submit\" value=\"Envoyer\" /> </form> <br> <?php $servername = \"localhost\" ; $username = \"root\" ; $password = \"root\" ; $dbname = \"mongarage\" ; $html = '' ; if ( empty ( $_GET [ 'nom' ]) == False && empty ( $_GET [ 'prenom' ]) == False && empty ( $_GET [ 'adresse' ]) == False && empty ( $_GET [ 'tel' ]) == False && empty ( $_GET [ 'marque' ]) == False && empty ( $_GET [ 'modele' ]) == False && empty ( $_GET [ 'immat' ]) == False ) { $nom = $_GET [ 'nom' ]; $prenom = $_GET [ 'prenom' ]; $adresse = $_GET [ 'adresse' ]; $tel = $_GET [ 'tel' ]; $marque = $_GET [ 'marque' ]; $modele = $_GET [ 'modele' ]; $immat = $_GET [ 'immat' ]; // Etablir la connexion \u00e0 la base de donn\u00e9e $conn = new mysqli ( $servername , $username , $password , $dbname ); // Cr\u00e9ation de la commande SQL permettant d'ajouter le nouvel client $sql =... $result = $conn -> query ( $sql ); if ( $result == True ) { // affiche le message de r\u00e9ussite de l'ajout de donn\u00e9es dans la base $html = \"<p>Nouveau client enregistr\u00e9</p>\" ; } else { $html = \"<p>Erreur dans la requ\u00eate client</p>\" ; } // Cr\u00e9ation de la requ\u00eate SQL permettant de r\u00e9cup\u00e9rer le num\u00e9ro du client cr\u00e9\u00e9e pr\u00e9cedemment par l'auto incr\u00e9mentation $sql =... $result = $conn -> query ( $sql ); if ( $result -> num_rows > 0 ) { // m\u00e9morise le NoClient $row = $result -> fetch_assoc (); } // Cr\u00e9ation de la commande SQL permettant d'ajouter le nouveau v\u00e9hicule dans la table vehicule $sql =... $result = $conn -> query ( $sql ); if ( $result == True ) { // affiche le message de r\u00e9ussite $html = \"<p>Nouveau v\u00e9hicule enregistr\u00e9</p>\" ; } else { $html = \"<p>Erreur dans la requ\u00eate v\u00e9hicule</p>\" ; } } else { $html = \"<p>Merci de remplir tous les champs</p>\" ; } echo $html ; ?> </body> </html> Enregistrez vos fichiers dans le dossier www. Zippez ce dossier et le rendre au professeur en temps voulu. Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Exercice 2 : Exploitation de la base de donn\u00e9es en php."},{"location":"Programmation/modularite.html","text":"Modularit\u00e9 \u2693\ufe0e Rappels \u2693\ufe0e Utilisation d'un module \u2693\ufe0e Vous avez d\u00e9j\u00e0 utilis\u00e9 les modules math et random par exemple. Nous rappelons que l'on peut appeler un module ainsi : 1 2 3 4 # import du module import statistics # affiche l'aide help ( statistics ) Utilisation du module 1 2 3 4 import statistics notes = [ 11 , 14 , 18 , 5 , 12 , 13 , 15 ] print ( \"Moyenne:\" , statistics . mean ( notes )) print ( \"\u00c9cart-type:\" , statistics . stdev ( notes )) On peut aussi utiliser un alias : 1 2 3 4 import statistics as stat notes = [ 11 , 14 , 18 , 5 , 12 , 13 , 15 ] print ( \"Moyenne:\" , stat . mean ( notes )) print ( \"\u00c9cart-type:\" , stat . stdev ( notes )) Ou encore sans avoir \u00e0 \u00e9crire de pr\u00e9fixe : 1 2 3 4 form statistics import mean , stdev notes = [ 11 , 14 , 18 , 5 , 12 , 13 , 15 ] print ( \"Moyenne:\" , mean ( notes )) print ( \"\u00c9cart-type:\" , stdev ( notes )) Attention Cette derni\u00e8re m\u00e9thode est priviligi\u00e9e car elle permet d'importer uniqument les fonctions n\u00e9cessaires et donc de gagner en temps d'\u00e9xecution si on utilise un module important. En rempla\u00e7ant la liste des fonctions par * on impore tout le module. Aide d'un module On peut invoquer l'aide sur un module c'est-\u00e0-dire sa description, la liste de ses fonctions et l'aide sur chacune des fonctions. Il faut que le module soit import\u00e9 : 1 2 >>> import module >>> help ( module ) Assertions \u2693\ufe0e Pour tester les fonctions, on peut ajouter des tests en cours de code, sans que celui-ci n soit pris en compte Ce sont des lignes que l'on peut supprimer sans changer la sructure du code. Elles permettent de tester les conditions critiques et permettent de stopper le programme si l'une d'elle se produit (ce qui ne doit pas arriver si le programme est correctement impl\u00e9ment\u00e9). 1 2 3 def avg ( notes ): assert notes . length > 0 , 'une note minimum requise' return sum ( notes ) / len ( notes ) Si on teste ceci, tout va bien : 1 2 notes = [ 8 , 9 , 10 ] print ( avg ( notes )) En revanche, ceci fait stopper le programme : 1 2 notes = [] print ( avg ( notes )) Bloc try ... except... \u2693\ufe0e On peut anticiper les probl\u00e8mes que posent l'utilisation des modules comme par exemple un argument de fonction qi ne serait pas du bon type de donn\u00e9e. Pour cela on utilise des tests qui permettent de revenir au d\u00e9but de la fonction tout en signanlant \u00e0 l'utilisateur l'ereur commise. Par exemple : 1 2 3 4 5 try : x = int ( input ( \"Please enter a number: \" )) break except ValueError : print ( \"Oops! That was no valid number. Try again...\" ) Ce code permet de tester que l'entr\u00e9e de l'utilisateur est bien un entier. Si l'on veut que le programme rep\u00e8te la demande jusqu'\u00e0 ce que l'entr\u00e9e soit correcte, on peut placer une boucle infinie. 1 2 3 4 5 6 while True : try : x = int ( input ( \"Please enter a number: \" )) break except ValueError : print ( \"Oops! That was no valid number. Try again...\" ) Quelques exemples d'erreurs d\u00e9tectables NameError : acc\u00e8s \u00e0 une variable inexistante IndexError : acc\u00e8s \u00e0 un indice non valide KeyError : acc\u00e8s \u00e0 une cl\u00e9 de dictionnaire non valide ZeroDivisionError : division par z\u00e9ro TypeError : op\u00e9ration appliqu\u00e9 \u00e0 des valeurs incompatibles un exemple complet 1 2 3 4 5 6 7 8 9 try : numerateur = int ( input ( \"Entrez un num\u00e9rateur : \" )) denominateur = int ( input ( \"Entrez un d\u00e9nominateur : \" )) resultat = numerateur / denominateur print ( \"Le resultat de la division est\" , resultat ) except ValueError : print ( \"D\u00e9sol\u00e9, les valeurs saisies ne sont pas des nombres.\" ) except ZeroDivisionError : print ( \"D\u00e9sol\u00e9, la division par z\u00e9ro n'est pas permise.\" ) Cr\u00e9er son propore module \u2693\ufe0e Un module est un dossier comprenant une ou plusieurs biblioth\u00e8ques (ou library) qui sont en fait des fichiers .py . Par exemple le module matplotlib contient entre autre, le fichier pylab.py et pyplot.py . La Documentation du module \u2693\ufe0e Il faudra documenter le module de fa\u00e7on explicite . Chaque fonction devra comporter des docstrings qui explique clairement le type d'arguments attendus et le type de donn\u00e9es retourn\u00e9es. les noms de fonctions et des variables doivent \u00eatre explicites pour la meilleur compr\u00e9hension de tous. Vous pouvez cr\u00e9er une documentation \u00e0 part (de pr\u00e9f\u00e9rence en anglais) pour d\u00e9tailler encore plus les recommandations. Voici un exemple de module cr\u00e9er sur les suites de fibonacci (voir reproduction des lapins au chapitre R\u00e9cursivit\u00e9 ). Pour afficher cette description, on utilisera la fonction help() . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 \"\"\" Module fibo relatif \u00e0 la cr\u00e9ation de nombres de Fibionacci Pour rappel, la suite de Fibonacci est une suite d'entiers dans laquelle chaque terme est la somme des deux termes qui le pr\u00e9c\u00e8dent.(voir: https://fr.wikipedia.org/wiki/Suite_de_Fibonacci) Ce module pr\u00e9sente deux fonctions: - fib_print: affiche les nombres de Fibionacii - fib_to_array: renvoie la liste des nombres de Fibionacci \"\"\" def fib_print ( n ): \"\"\"Affiche les nombres de Fibionacii Arguments --------- n: int dernier rang de la suite de Fibonacci affich\u00e9 \"\"\" a , b = 0 , 1 while a < n : print ( a , end = ' ' ) a , b = b , a + b print () def fib_to_array ( n ): \"\"\"Renvoie la liste des nombres de Fibionacii Arguments --------- n: int dernier rang de la suite de Fibonacci renvoy\u00e9 dans la liste Returns ------- list La liste des nombres de Fibionnaci jusqu'au rang n \"\"\" result = [] a , b = 0 , 1 while a < n : result . append ( a ) a , b = b , a + b return result Les fonctions \u2693\ufe0e Les fonctions doivent contenir des tests de fa\u00e7on \u00e0 ce que lorsqu'une erreur soit d\u00e9tect\u00e9e, elle fasse afficher un message d'erreur compr\u00e9hensible par l'utilisateur. Elles doivent \u00eatre document\u00e9es pr\u00e9cisement. Fonctions priv\u00e9es On peut avoir besoin dans le module de cr\u00e9er des fonctions priv\u00e9es, c'est-\u00e0-dire qu'elle ne sera pas forc\u00e9ment accessible de l'ext\u00e9rieure mais ne sera utilis\u00e9e que \u00e0 l'int\u00e9rieur du module : 1 2 3 4 5 #module def __mafontion ( mon_param\u00e8tre ): return un truc #programme principal __mafonction ( mavariable ) #renvoie une erreur Finir le fichier \u2693\ufe0e Lors de l'ex\u00e9cution d'un programme, python cr\u00e9e une variable appel\u00e9e __name__ . Lorsque le fichier principal est ex\u00e9cut\u00e9, cette variable pour ce fichier prend la valeur __main__ . Le code si dessous permet de d\u00e9tecter si le fichier dans lequel il apparait est le programme ex\u00e9cut\u00e9 directement ou un programme appel\u00e9 par le prorgramme principal. Tout ce qui se trouve dans la boucle ne sera ex\u00e9cut\u00e9 que si CE programme est ex\u00e9cut\u00e9 et pas s'il est appel\u00e9 par un autre 1 2 if __name__ == \"__main__\" : print ( \"Execut\u00e9 si le programme est invoqu\u00e9 directement\" ) Votre module devra donc se finir ainsi si vous ajoutez des tests devant s'afficher. Cr\u00e9ation MB. (r\u00e9)utilisation et modification libre mais non commerciale CC-BY-NC 2021","title":"Modularit\u00e9"},{"location":"Programmation/modularite.html#modularite","text":"","title":"Modularit\u00e9"},{"location":"Programmation/modularite.html#rappels","text":"","title":"Rappels"},{"location":"Programmation/modularite.html#utilisation-dun-module","text":"Vous avez d\u00e9j\u00e0 utilis\u00e9 les modules math et random par exemple. Nous rappelons que l'on peut appeler un module ainsi : 1 2 3 4 # import du module import statistics # affiche l'aide help ( statistics ) Utilisation du module 1 2 3 4 import statistics notes = [ 11 , 14 , 18 , 5 , 12 , 13 , 15 ] print ( \"Moyenne:\" , statistics . mean ( notes )) print ( \"\u00c9cart-type:\" , statistics . stdev ( notes )) On peut aussi utiliser un alias : 1 2 3 4 import statistics as stat notes = [ 11 , 14 , 18 , 5 , 12 , 13 , 15 ] print ( \"Moyenne:\" , stat . mean ( notes )) print ( \"\u00c9cart-type:\" , stat . stdev ( notes )) Ou encore sans avoir \u00e0 \u00e9crire de pr\u00e9fixe : 1 2 3 4 form statistics import mean , stdev notes = [ 11 , 14 , 18 , 5 , 12 , 13 , 15 ] print ( \"Moyenne:\" , mean ( notes )) print ( \"\u00c9cart-type:\" , stdev ( notes )) Attention Cette derni\u00e8re m\u00e9thode est priviligi\u00e9e car elle permet d'importer uniqument les fonctions n\u00e9cessaires et donc de gagner en temps d'\u00e9xecution si on utilise un module important. En rempla\u00e7ant la liste des fonctions par * on impore tout le module. Aide d'un module On peut invoquer l'aide sur un module c'est-\u00e0-dire sa description, la liste de ses fonctions et l'aide sur chacune des fonctions. Il faut que le module soit import\u00e9 : 1 2 >>> import module >>> help ( module )","title":"Utilisation d'un module"},{"location":"Programmation/modularite.html#assertions","text":"Pour tester les fonctions, on peut ajouter des tests en cours de code, sans que celui-ci n soit pris en compte Ce sont des lignes que l'on peut supprimer sans changer la sructure du code. Elles permettent de tester les conditions critiques et permettent de stopper le programme si l'une d'elle se produit (ce qui ne doit pas arriver si le programme est correctement impl\u00e9ment\u00e9). 1 2 3 def avg ( notes ): assert notes . length > 0 , 'une note minimum requise' return sum ( notes ) / len ( notes ) Si on teste ceci, tout va bien : 1 2 notes = [ 8 , 9 , 10 ] print ( avg ( notes )) En revanche, ceci fait stopper le programme : 1 2 notes = [] print ( avg ( notes ))","title":"Assertions"},{"location":"Programmation/modularite.html#bloc-try-except","text":"On peut anticiper les probl\u00e8mes que posent l'utilisation des modules comme par exemple un argument de fonction qi ne serait pas du bon type de donn\u00e9e. Pour cela on utilise des tests qui permettent de revenir au d\u00e9but de la fonction tout en signanlant \u00e0 l'utilisateur l'ereur commise. Par exemple : 1 2 3 4 5 try : x = int ( input ( \"Please enter a number: \" )) break except ValueError : print ( \"Oops! That was no valid number. Try again...\" ) Ce code permet de tester que l'entr\u00e9e de l'utilisateur est bien un entier. Si l'on veut que le programme rep\u00e8te la demande jusqu'\u00e0 ce que l'entr\u00e9e soit correcte, on peut placer une boucle infinie. 1 2 3 4 5 6 while True : try : x = int ( input ( \"Please enter a number: \" )) break except ValueError : print ( \"Oops! That was no valid number. Try again...\" ) Quelques exemples d'erreurs d\u00e9tectables NameError : acc\u00e8s \u00e0 une variable inexistante IndexError : acc\u00e8s \u00e0 un indice non valide KeyError : acc\u00e8s \u00e0 une cl\u00e9 de dictionnaire non valide ZeroDivisionError : division par z\u00e9ro TypeError : op\u00e9ration appliqu\u00e9 \u00e0 des valeurs incompatibles un exemple complet 1 2 3 4 5 6 7 8 9 try : numerateur = int ( input ( \"Entrez un num\u00e9rateur : \" )) denominateur = int ( input ( \"Entrez un d\u00e9nominateur : \" )) resultat = numerateur / denominateur print ( \"Le resultat de la division est\" , resultat ) except ValueError : print ( \"D\u00e9sol\u00e9, les valeurs saisies ne sont pas des nombres.\" ) except ZeroDivisionError : print ( \"D\u00e9sol\u00e9, la division par z\u00e9ro n'est pas permise.\" )","title":"Bloc try ... except..."},{"location":"Programmation/modularite.html#creer-son-propore-module","text":"Un module est un dossier comprenant une ou plusieurs biblioth\u00e8ques (ou library) qui sont en fait des fichiers .py . Par exemple le module matplotlib contient entre autre, le fichier pylab.py et pyplot.py .","title":"Cr\u00e9er son propore module"},{"location":"Programmation/modularite.html#la-documentation-du-module","text":"Il faudra documenter le module de fa\u00e7on explicite . Chaque fonction devra comporter des docstrings qui explique clairement le type d'arguments attendus et le type de donn\u00e9es retourn\u00e9es. les noms de fonctions et des variables doivent \u00eatre explicites pour la meilleur compr\u00e9hension de tous. Vous pouvez cr\u00e9er une documentation \u00e0 part (de pr\u00e9f\u00e9rence en anglais) pour d\u00e9tailler encore plus les recommandations. Voici un exemple de module cr\u00e9er sur les suites de fibonacci (voir reproduction des lapins au chapitre R\u00e9cursivit\u00e9 ). Pour afficher cette description, on utilisera la fonction help() . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 \"\"\" Module fibo relatif \u00e0 la cr\u00e9ation de nombres de Fibionacci Pour rappel, la suite de Fibonacci est une suite d'entiers dans laquelle chaque terme est la somme des deux termes qui le pr\u00e9c\u00e8dent.(voir: https://fr.wikipedia.org/wiki/Suite_de_Fibonacci) Ce module pr\u00e9sente deux fonctions: - fib_print: affiche les nombres de Fibionacii - fib_to_array: renvoie la liste des nombres de Fibionacci \"\"\" def fib_print ( n ): \"\"\"Affiche les nombres de Fibionacii Arguments --------- n: int dernier rang de la suite de Fibonacci affich\u00e9 \"\"\" a , b = 0 , 1 while a < n : print ( a , end = ' ' ) a , b = b , a + b print () def fib_to_array ( n ): \"\"\"Renvoie la liste des nombres de Fibionacii Arguments --------- n: int dernier rang de la suite de Fibonacci renvoy\u00e9 dans la liste Returns ------- list La liste des nombres de Fibionnaci jusqu'au rang n \"\"\" result = [] a , b = 0 , 1 while a < n : result . append ( a ) a , b = b , a + b return result","title":"La Documentation du module"},{"location":"Programmation/modularite.html#les-fonctions","text":"Les fonctions doivent contenir des tests de fa\u00e7on \u00e0 ce que lorsqu'une erreur soit d\u00e9tect\u00e9e, elle fasse afficher un message d'erreur compr\u00e9hensible par l'utilisateur. Elles doivent \u00eatre document\u00e9es pr\u00e9cisement. Fonctions priv\u00e9es On peut avoir besoin dans le module de cr\u00e9er des fonctions priv\u00e9es, c'est-\u00e0-dire qu'elle ne sera pas forc\u00e9ment accessible de l'ext\u00e9rieure mais ne sera utilis\u00e9e que \u00e0 l'int\u00e9rieur du module : 1 2 3 4 5 #module def __mafontion ( mon_param\u00e8tre ): return un truc #programme principal __mafonction ( mavariable ) #renvoie une erreur","title":"Les fonctions"},{"location":"Programmation/modularite.html#finir-le-fichier","text":"Lors de l'ex\u00e9cution d'un programme, python cr\u00e9e une variable appel\u00e9e __name__ . Lorsque le fichier principal est ex\u00e9cut\u00e9, cette variable pour ce fichier prend la valeur __main__ . Le code si dessous permet de d\u00e9tecter si le fichier dans lequel il apparait est le programme ex\u00e9cut\u00e9 directement ou un programme appel\u00e9 par le prorgramme principal. Tout ce qui se trouve dans la boucle ne sera ex\u00e9cut\u00e9 que si CE programme est ex\u00e9cut\u00e9 et pas s'il est appel\u00e9 par un autre 1 2 if __name__ == \"__main__\" : print ( \"Execut\u00e9 si le programme est invoqu\u00e9 directement\" ) Votre module devra donc se finir ainsi si vous ajoutez des tests devant s'afficher. Cr\u00e9ation MB. (r\u00e9)utilisation et modification libre mais non commerciale CC-BY-NC 2021","title":"Finir le fichier"},{"location":"Programmation/projet_modularite.html","text":"Projet : Module incertitude \u2693\ufe0e L'objectif est de cr\u00e9er un module incertitude permettant \u00e0 nos amis physicien de faire les calculs n\u00e9cessaires \u00e0 l'\u00e9valuation des erreurs de mesures. On ne s'interessera ici qu'aux incertitudes de type A c'est-\u00e0-dire issue d'une s\u00e9rie de mesure. En bonus, on pourra traiter les diff\u00e9rentes incertitudes de type B, issue d'un mesure unique. Principe des incertitudes de type A \u2693\ufe0e Lorsque l'on fait une mesure en physique, il y a toujours une incertitude li\u00e9e \u00e0 l'appareil utilis\u00e9 ou \u00e0 la pr\u00e9cision de la manipulation de l'op\u00e9rateur. Il existe aussi une ineritude al\u00e9atoire, qui fait que si on rep\u00e8te la mesure un grand nombre de fois, on ne trouve pas tujours exactement la m\u00eame valeur. Les incertitudes de types A sont ces derni\u00e8res. On peut dire \u00e0 l'aide d'une s\u00e9rie de mesures que la aleur vraie est comprise dans un intervalle que l'on d\u00e9termine gr\u00e2ce \u00e0 des calculs sur la s\u00e9rie de mesures. Incertitude Pour calculer l'incertitude, il faut d\u00e9j\u00e0 calculer l'\u00e9cart type, le multiplier par un coeficient d'\u00e9largissement et diviser par la racine carr\u00e9 du nombre de mesures. Coefficient d'\u00e9largissement Un intervalle de confiance \u00e0 95% signifie que l'intervalle que l'on va calculer, contiendra \u00e0 coup s\u00fbr 95% des mesures. Ce coefficient k, d\u00e9pend du nombre de mesures et de l'intervalle de confiance. Par exemple, pour un intervalle de confiance de 95% (le plus couramment utilis\u00e9) avec 9 mesures r\u00e9alis\u00e9e, k vaudra 2,31. Intervalle L'incertitude U trouv\u00e9e par le calcul nous permet de dire que 95% des mesures se sitent dans l'intervalle [moyenne-U ; moyenne+U]. L'objectif de ce projet est de cr\u00e9er un module permettant de calculer cet intervalle \u00e0 partir d'une s\u00e9rie de mesures. Fonctions contenues dans le module. \u2693\ufe0e Dans une biblioth\u00e8que nomm\u00e9e typeA.py contenu dans le dossier \u00ecncertitude on devra trouver les fonctions suivantes : fonction moyenne() Cette fonction prend une liste de mesures en param\u00e8tre et retourne la moyenne des valeurs. DIY Ne pas importer de modules de calcul de moyenne ou autre, vous devez l'impl\u00e9menter vous-m\u00eame. La seule tol\u00e9rance sera pour la fonction sqrt mais qui peut \u00eatre remplac\u00e9 par une puissance 0,5. fonction _ecart_type() La formule de l'\u00e9cart type est donn\u00e9e ci-contre. Cette fonction doit prendre en param\u00e8tre une liste de mesures et renvoyer la valeur de l'\u00e9cart type. fonction _nb_mesures() Cette fonction prend en param\u00e8tre une liste de mesures et renvoie le nombre de mesures dans la liste. fonction _valeur_plus_proche(valeur,Tableau): Lorsque l'on regarde le tableau des coefficients d'\u00e9largissement, on peut voir que toutes les quantit\u00e9s de mesures n'y figurent pas. il y a trop peu de diff\u00e9rence avec les valeurs donn\u00e9es pour que cela soit significatif. On cherchera donc le nombre de mesures le plus proche que celui qu'on poss\u00e8de. Cette fonction prend en param\u00e8tre une valeur et un tableau, et renvoie la valeur du tableau la plus proche de la valeur valeur . fonction incertitude() Cette fonction utilisera les autres pour calculer l'incertitude telle qu'elle est expliqu\u00e9 plus haut. Elle prend en param\u00e8tre la liste de mesures et un bool\u00e9en confiance qui par d\u00e9faut vaudra False ce qui signifie que l'on se place dans un intervalle de confiance de 95%. Si on ex\u00e9cute la fonction avec confiance=True on aura un intervalle de confiance de 98%. Cette fonction devra retourner la valeur de l'incertitude calcul\u00e9e. Quelques aides pr\u00e9cieuses valeurs de k (1ere ligne contient le nombre de mesures, les deuxi\u00e8me et troisi\u00e8me lignes les valeurs de k pour 95% et 98%) : 1 2 3 4 #Tableau regroupant les valeurs de k coeff_elargissement = [[ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 12 , 14 , 16 , 18 , 20 ], [ 12.7 , 4.3 , 3.18 , 2.78 , 2.57 , 2.45 , 2.37 , 2.31 , 2.26 , 2.20 , 2.16 , 2.13 , 2.11 , 2.09 ], [ 63.7 , 9.93 , 5.84 , 4.60 , 4.03 , 3.71 , 3.50 , 3.36 , 3.25 , 3.11 , 3.01 , 2.95 , 2.90 , 2.86 ]] Comment fixer une valeur de param\u00e8tre par d\u00e9faut : 1 2 3 4 5 6 def incertitude ( Liste , confiance = False ): pass # si on ex\u00e9cute la fonction sans pr\u00e9ciser la valeur de confiance elle vaudra False; incertitude ( L ) #ou si on ne veut pas de la valeur par d\u00e9faut incertitude ( L , True ) Fichier de test \u2693\ufe0e Pour ne pas d\u00e9naturer votre code, vous pouvez cr\u00e9er un fichier tests.py qui contiendra tous les tests que vous avez fait pour tester toutes les situations de vos fonctions. Cela permet de s'y retrouver plus facilement et d'organiser son travail. Cela permet aussi \u00e0 la personne qui utilise (ndlr : corrige) votre travail de gagner du temps et de la lisibilit\u00e9 Bonus : calcul des incertitudes de type B \u2693\ufe0e Les incertitudes de type B sont des incertitudes issues d'une mesure unique. Elles sont calcul\u00e9es d'une mani\u00e8re particuli\u00e8re en fonction de la situation. Cas de la lecture double graduation Lorsqu'on lit une graduation \u00e0 l'aide d'une r\u00e8gle l'erreur peut venir de la lecture de la graduation mais aussi du positionnement du z\u00e9ro. On a donc plus de chance de faire une mesure impr\u00e9cise. L'incertitude se calcule ainsi : \\[U= \\dfrac{2 \\times Unit\u00e9DeGraduation}{\\sqrt{6}}\\] Cas de la lecture simple graduation Une lecture \u00e0 simple graduation serait celle d'un barom\u00e8tre \u00e0 aiguille ou d'un thermom\u00e8tre analogique. L'utilisation d'une burette en est aussi un bon exemple. Voici comment se calcule l'incertitude : \\[U= \\dfrac{2 \\times Unit\u00e9DeGraduation}{\\sqrt{12}}\\] Cas d'un appareil num\u00e9rique Le constructeur d'un appareil donne au minimum la tol\u00e9rance de la mesure. C'est le pourcentage d'erreur sur la mesure. Un appareil num\u00e9rique poss\u00e8de \u00e9galement une incertitude li\u00e9e au dernier chiffre. On l'appelle le digit. Pour une mesure donnant 4,586V le dernier digit sera la plus petite unit\u00e9 mesur\u00e9e soit 0,001V. Le pourcentage de la mesure correspondant \u00e0 celui de la tol\u00e9rance donn\u00e9e. Par exemple une mesure de 4,6V avec une tol\u00e9rence de 5%, le pourcentage sera de 5% de 4,6 soit 0,23. \\[U= \\dfrac{2 \\times PourcentageDeLaMesure + 2 \\times digit}{\\sqrt{3}}\\] Cas d'un appareil quelconque On calculera l'incertitude par la formule : \\[U= \\dfrac{PourcentageDeLaMesure}{\\sqrt{3}}\\] Vous devez cr\u00e9er le fichier typeB.py contenant les fonctions double_lecture(graduation, mesure) , simple_lecture(graduation, mesure) , tolerance_donnee(tolerance,mesure) et appareil_numerique(digit,tolerance,mesure) . Il est important que les param\u00e8tre digit et graduation soient renseign\u00e9s dans la m\u00eame unit\u00e9 que la mesure. Cette information pourra \u00eatre donn\u00e9e \u00e0 l'utilsation de la fonciton et/ou dans la documentation. Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Projet : Cr\u00e9er un module"},{"location":"Programmation/projet_modularite.html#projet-module-incertitude","text":"L'objectif est de cr\u00e9er un module incertitude permettant \u00e0 nos amis physicien de faire les calculs n\u00e9cessaires \u00e0 l'\u00e9valuation des erreurs de mesures. On ne s'interessera ici qu'aux incertitudes de type A c'est-\u00e0-dire issue d'une s\u00e9rie de mesure. En bonus, on pourra traiter les diff\u00e9rentes incertitudes de type B, issue d'un mesure unique.","title":"Projet : Module incertitude"},{"location":"Programmation/projet_modularite.html#principe-des-incertitudes-de-type-a","text":"Lorsque l'on fait une mesure en physique, il y a toujours une incertitude li\u00e9e \u00e0 l'appareil utilis\u00e9 ou \u00e0 la pr\u00e9cision de la manipulation de l'op\u00e9rateur. Il existe aussi une ineritude al\u00e9atoire, qui fait que si on rep\u00e8te la mesure un grand nombre de fois, on ne trouve pas tujours exactement la m\u00eame valeur. Les incertitudes de types A sont ces derni\u00e8res. On peut dire \u00e0 l'aide d'une s\u00e9rie de mesures que la aleur vraie est comprise dans un intervalle que l'on d\u00e9termine gr\u00e2ce \u00e0 des calculs sur la s\u00e9rie de mesures. Incertitude Pour calculer l'incertitude, il faut d\u00e9j\u00e0 calculer l'\u00e9cart type, le multiplier par un coeficient d'\u00e9largissement et diviser par la racine carr\u00e9 du nombre de mesures. Coefficient d'\u00e9largissement Un intervalle de confiance \u00e0 95% signifie que l'intervalle que l'on va calculer, contiendra \u00e0 coup s\u00fbr 95% des mesures. Ce coefficient k, d\u00e9pend du nombre de mesures et de l'intervalle de confiance. Par exemple, pour un intervalle de confiance de 95% (le plus couramment utilis\u00e9) avec 9 mesures r\u00e9alis\u00e9e, k vaudra 2,31. Intervalle L'incertitude U trouv\u00e9e par le calcul nous permet de dire que 95% des mesures se sitent dans l'intervalle [moyenne-U ; moyenne+U]. L'objectif de ce projet est de cr\u00e9er un module permettant de calculer cet intervalle \u00e0 partir d'une s\u00e9rie de mesures.","title":"Principe des incertitudes de type A"},{"location":"Programmation/projet_modularite.html#fonctions-contenues-dans-le-module","text":"Dans une biblioth\u00e8que nomm\u00e9e typeA.py contenu dans le dossier \u00ecncertitude on devra trouver les fonctions suivantes : fonction moyenne() Cette fonction prend une liste de mesures en param\u00e8tre et retourne la moyenne des valeurs. DIY Ne pas importer de modules de calcul de moyenne ou autre, vous devez l'impl\u00e9menter vous-m\u00eame. La seule tol\u00e9rance sera pour la fonction sqrt mais qui peut \u00eatre remplac\u00e9 par une puissance 0,5. fonction _ecart_type() La formule de l'\u00e9cart type est donn\u00e9e ci-contre. Cette fonction doit prendre en param\u00e8tre une liste de mesures et renvoyer la valeur de l'\u00e9cart type. fonction _nb_mesures() Cette fonction prend en param\u00e8tre une liste de mesures et renvoie le nombre de mesures dans la liste. fonction _valeur_plus_proche(valeur,Tableau): Lorsque l'on regarde le tableau des coefficients d'\u00e9largissement, on peut voir que toutes les quantit\u00e9s de mesures n'y figurent pas. il y a trop peu de diff\u00e9rence avec les valeurs donn\u00e9es pour que cela soit significatif. On cherchera donc le nombre de mesures le plus proche que celui qu'on poss\u00e8de. Cette fonction prend en param\u00e8tre une valeur et un tableau, et renvoie la valeur du tableau la plus proche de la valeur valeur . fonction incertitude() Cette fonction utilisera les autres pour calculer l'incertitude telle qu'elle est expliqu\u00e9 plus haut. Elle prend en param\u00e8tre la liste de mesures et un bool\u00e9en confiance qui par d\u00e9faut vaudra False ce qui signifie que l'on se place dans un intervalle de confiance de 95%. Si on ex\u00e9cute la fonction avec confiance=True on aura un intervalle de confiance de 98%. Cette fonction devra retourner la valeur de l'incertitude calcul\u00e9e. Quelques aides pr\u00e9cieuses valeurs de k (1ere ligne contient le nombre de mesures, les deuxi\u00e8me et troisi\u00e8me lignes les valeurs de k pour 95% et 98%) : 1 2 3 4 #Tableau regroupant les valeurs de k coeff_elargissement = [[ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 12 , 14 , 16 , 18 , 20 ], [ 12.7 , 4.3 , 3.18 , 2.78 , 2.57 , 2.45 , 2.37 , 2.31 , 2.26 , 2.20 , 2.16 , 2.13 , 2.11 , 2.09 ], [ 63.7 , 9.93 , 5.84 , 4.60 , 4.03 , 3.71 , 3.50 , 3.36 , 3.25 , 3.11 , 3.01 , 2.95 , 2.90 , 2.86 ]] Comment fixer une valeur de param\u00e8tre par d\u00e9faut : 1 2 3 4 5 6 def incertitude ( Liste , confiance = False ): pass # si on ex\u00e9cute la fonction sans pr\u00e9ciser la valeur de confiance elle vaudra False; incertitude ( L ) #ou si on ne veut pas de la valeur par d\u00e9faut incertitude ( L , True )","title":"Fonctions contenues dans le module."},{"location":"Programmation/projet_modularite.html#fichier-de-test","text":"Pour ne pas d\u00e9naturer votre code, vous pouvez cr\u00e9er un fichier tests.py qui contiendra tous les tests que vous avez fait pour tester toutes les situations de vos fonctions. Cela permet de s'y retrouver plus facilement et d'organiser son travail. Cela permet aussi \u00e0 la personne qui utilise (ndlr : corrige) votre travail de gagner du temps et de la lisibilit\u00e9","title":"Fichier de test"},{"location":"Programmation/projet_modularite.html#bonus-calcul-des-incertitudes-de-type-b","text":"Les incertitudes de type B sont des incertitudes issues d'une mesure unique. Elles sont calcul\u00e9es d'une mani\u00e8re particuli\u00e8re en fonction de la situation. Cas de la lecture double graduation Lorsqu'on lit une graduation \u00e0 l'aide d'une r\u00e8gle l'erreur peut venir de la lecture de la graduation mais aussi du positionnement du z\u00e9ro. On a donc plus de chance de faire une mesure impr\u00e9cise. L'incertitude se calcule ainsi : \\[U= \\dfrac{2 \\times Unit\u00e9DeGraduation}{\\sqrt{6}}\\] Cas de la lecture simple graduation Une lecture \u00e0 simple graduation serait celle d'un barom\u00e8tre \u00e0 aiguille ou d'un thermom\u00e8tre analogique. L'utilisation d'une burette en est aussi un bon exemple. Voici comment se calcule l'incertitude : \\[U= \\dfrac{2 \\times Unit\u00e9DeGraduation}{\\sqrt{12}}\\] Cas d'un appareil num\u00e9rique Le constructeur d'un appareil donne au minimum la tol\u00e9rance de la mesure. C'est le pourcentage d'erreur sur la mesure. Un appareil num\u00e9rique poss\u00e8de \u00e9galement une incertitude li\u00e9e au dernier chiffre. On l'appelle le digit. Pour une mesure donnant 4,586V le dernier digit sera la plus petite unit\u00e9 mesur\u00e9e soit 0,001V. Le pourcentage de la mesure correspondant \u00e0 celui de la tol\u00e9rance donn\u00e9e. Par exemple une mesure de 4,6V avec une tol\u00e9rence de 5%, le pourcentage sera de 5% de 4,6 soit 0,23. \\[U= \\dfrac{2 \\times PourcentageDeLaMesure + 2 \\times digit}{\\sqrt{3}}\\] Cas d'un appareil quelconque On calculera l'incertitude par la formule : \\[U= \\dfrac{PourcentageDeLaMesure}{\\sqrt{3}}\\] Vous devez cr\u00e9er le fichier typeB.py contenant les fonctions double_lecture(graduation, mesure) , simple_lecture(graduation, mesure) , tolerance_donnee(tolerance,mesure) et appareil_numerique(digit,tolerance,mesure) . Il est important que les param\u00e8tre digit et graduation soient renseign\u00e9s dans la m\u00eame unit\u00e9 que la mesure. Cette information pourra \u00eatre donn\u00e9e \u00e0 l'utilsation de la fonciton et/ou dans la documentation. Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Bonus : calcul des incertitudes de type B"},{"location":"Programmation/recursivite.html","text":"La r\u00e9cursivit\u00e9 \u2693\ufe0e Qu'est ce que la r\u00e9cursivit\u00e9? \u2693\ufe0e Indispensable en informatique, la r\u00e9cursivit\u00e9 permet de simplifier beaucoup de fonctions. D\u00e9finition Une fonction r\u00e9cursive est une fonction qui s'appelle elle-m\u00eame. Calcul de factoriel n! \u2693\ufe0e La fonction factorielle en math\u00e9matiques permet de calculer le produit de tous les entiers pr\u00e9c\u00e9dant le nombre courant. n ! = n x (n-1)x(n-2) x .. x 2 x 1. Par exemple 3 ! = 3 x 2 x 1 = 6 8 ! = 8 x 7 x 6 x 5 x 4 x 3 x 2 x 1 = 40320 Par convention On prendra 0! = 1 Cr\u00e9er la fonction factorielle \u2693\ufe0e Pour tester les codes, on peut utiliser un bac \u00e0 sable . c'est une interface o\u00f9 l'on peut faire des tests rapides sans sauvegarder. Cela \u00e9vite la multiplication des fichiers test.py ou tests.py sur votre machine. Vous pouvez utiliser celle-ci par exemple : Tester ceci : Console Basthon mais aussi : Python tutor qui a le gros avantage de d\u00e9tailler ligne par ligne l'\u00e9volutionn du code et ainsi compendre ce qu'il se passe. Tester ceci : 1 2 3 4 5 6 7 8 9 10 def factorielle ( n ): i = n res = 1 while i != 0 : res = res * i i = i - 1 return res print ( factorielle ( 1 )) print ( factorielle ( 8 )) On peut en r\u00e9alit\u00e9 d\u00e9couper la fonction factorielle : n ! = n x (n-1) ! et ce quelque soit la valeur de n. Je peux donc calculer (n-1) ! en faisant (n-1) x (n-2) ! Nous allons donc faire appel \u00e0 la fonction factorielle pour ex\u00e9cuter la fonction factorielle . Tester ceci : 1 2 3 4 5 6 7 8 def factorielle_recursif ( n ): if n == 0 : return 1 #condition d'arr\u00eat pour \u00e9viter la boucle infinie else : return n * factorielle_recursif ( n - 1 ) print ( factorielle_recursif ( 1 )) print ( factorielle_recursif ( 8 )) Condition d'arr\u00eat Il est imp\u00e9ratif d'avoir une condition d'arr\u00eat de la boucle, pour \u00e9viter la boucle infinie. Ici il s'agit de remonter les entiers jusqu'\u00e0 ce que l'on arrive \u00e0 0 dont on conna\u00eet la valeur de la fonction factorielle. Toutes fonction r\u00e9cursive doit poss\u00e9der une condition d'arr\u00eat. Oubli du return Il est fr\u00e9quent lorsqu'on d\u00e9bute avec cette pratique d'ex\u00e9cuter la fonction en omettant le mot cl\u00e9 return . La fonction ne renverra rien sans forc\u00e9ment donner un message d'erreur. Alors si cela ne \"marche pas\" c'est la premi\u00e8re chose \u00e0 v\u00e9rifier. Application Ouvrir une console basthon. Ecrire une fonction qui prend une liste d'entiers en param\u00e8tre et en retourne la somme en utilisant la r\u00e9cursivit\u00e9. Que fait-elle 1 2 3 4 5 6 fonction fonction ( n ) SI n = 0 ALORS retourne FINSI fonction ( n //2) Ecrire ( n % 2 ) Coder cette fonction en python et dire ce qu'elle fait. Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"R\u00e9cursivit\u00e9"},{"location":"Programmation/recursivite.html#la-recursivite","text":"","title":"La r\u00e9cursivit\u00e9"},{"location":"Programmation/recursivite.html#quest-ce-que-la-recursivite","text":"Indispensable en informatique, la r\u00e9cursivit\u00e9 permet de simplifier beaucoup de fonctions. D\u00e9finition Une fonction r\u00e9cursive est une fonction qui s'appelle elle-m\u00eame.","title":"Qu'est ce que la r\u00e9cursivit\u00e9?"},{"location":"Programmation/recursivite.html#calcul-de-factoriel-n","text":"La fonction factorielle en math\u00e9matiques permet de calculer le produit de tous les entiers pr\u00e9c\u00e9dant le nombre courant. n ! = n x (n-1)x(n-2) x .. x 2 x 1. Par exemple 3 ! = 3 x 2 x 1 = 6 8 ! = 8 x 7 x 6 x 5 x 4 x 3 x 2 x 1 = 40320 Par convention On prendra 0! = 1","title":"Calcul de factoriel n!"},{"location":"Programmation/recursivite.html#creer-la-fonction-factorielle","text":"Pour tester les codes, on peut utiliser un bac \u00e0 sable . c'est une interface o\u00f9 l'on peut faire des tests rapides sans sauvegarder. Cela \u00e9vite la multiplication des fichiers test.py ou tests.py sur votre machine. Vous pouvez utiliser celle-ci par exemple : Tester ceci : Console Basthon mais aussi : Python tutor qui a le gros avantage de d\u00e9tailler ligne par ligne l'\u00e9volutionn du code et ainsi compendre ce qu'il se passe. Tester ceci : 1 2 3 4 5 6 7 8 9 10 def factorielle ( n ): i = n res = 1 while i != 0 : res = res * i i = i - 1 return res print ( factorielle ( 1 )) print ( factorielle ( 8 )) On peut en r\u00e9alit\u00e9 d\u00e9couper la fonction factorielle : n ! = n x (n-1) ! et ce quelque soit la valeur de n. Je peux donc calculer (n-1) ! en faisant (n-1) x (n-2) ! Nous allons donc faire appel \u00e0 la fonction factorielle pour ex\u00e9cuter la fonction factorielle . Tester ceci : 1 2 3 4 5 6 7 8 def factorielle_recursif ( n ): if n == 0 : return 1 #condition d'arr\u00eat pour \u00e9viter la boucle infinie else : return n * factorielle_recursif ( n - 1 ) print ( factorielle_recursif ( 1 )) print ( factorielle_recursif ( 8 )) Condition d'arr\u00eat Il est imp\u00e9ratif d'avoir une condition d'arr\u00eat de la boucle, pour \u00e9viter la boucle infinie. Ici il s'agit de remonter les entiers jusqu'\u00e0 ce que l'on arrive \u00e0 0 dont on conna\u00eet la valeur de la fonction factorielle. Toutes fonction r\u00e9cursive doit poss\u00e9der une condition d'arr\u00eat. Oubli du return Il est fr\u00e9quent lorsqu'on d\u00e9bute avec cette pratique d'ex\u00e9cuter la fonction en omettant le mot cl\u00e9 return . La fonction ne renverra rien sans forc\u00e9ment donner un message d'erreur. Alors si cela ne \"marche pas\" c'est la premi\u00e8re chose \u00e0 v\u00e9rifier. Application Ouvrir une console basthon. Ecrire une fonction qui prend une liste d'entiers en param\u00e8tre et en retourne la somme en utilisant la r\u00e9cursivit\u00e9. Que fait-elle 1 2 3 4 5 6 fonction fonction ( n ) SI n = 0 ALORS retourne FINSI fonction ( n //2) Ecrire ( n % 2 ) Coder cette fonction en python et dire ce qu'elle fait. Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Cr\u00e9er la fonction factorielle"},{"location":"Structure/POO.html","text":"Programmation Orient\u00e9e Objet (POO) \u2693\ufe0e Tous les bouts de codes sont \u00e0 tester dans un progrmme python pour se rendre compte du r\u00e9sultat La programmation orient\u00e9e objet est une m\u00e9thode de programmation qui consiste \u00e0 cr\u00e9er des objets qui auront des caract\u00e9ristiques et des m\u00e9thodes bien sp\u00e9cifiques \u00e0 ce type d'objet. Par exemple, les cha\u00eene de caract\u00e8res en python sont des objets. On peut en cr\u00e9er une, la supprimer, acc\u00e9der \u00e0 sa longueur, ajouter des \u00e9l\u00e9ments, compter des occurences, ... Le type str en python est en r\u00e9alit\u00e9 un objet avec ses propres caract\u00e9ristiques et m\u00e9thodes. Nous allons prendre un exemple et le d\u00e9velopper pas \u00e0 pas. Dans cet exemple, nous allons utilis\u00e9 la gestion d'un parc automobile. Chaque voiture du parc aura les caract\u00e9ristiques suivantes : marque, mod\u00e8le, couleur, ann\u00e9e, propri\u00e9taire, prix neuf . On pourra modifier ces caract\u00e9ristiques en vendant ou repeignant et d\u00e9terminer sa c\u00f4te en fonction de l'ann\u00e9e. Cr\u00e9ation de la classe \u2693\ufe0e La classe est le moule qui va nous permettre de abriquer des objets ayant acc\u00e8s aux m\u00eames caract\u00e9ristiques et m\u00e9thodes. 1 2 3 4 5 6 7 class Voiture : marque = \"Peugeot\" #on cr\u00e9\u00e9 un moule appel\u00e9 voiture dont l'attribut marque vaut \"Peugeot\" #On cr\u00e9e des voitures \u00e0 partir ce moule voiture_de_papa = Voiture () voiture_de_maman = Voiture () voiture_de_papa . marque #affiche la marque renseign\u00e9e lors de la cr\u00e9ation de la voiture (ici par d\u00e9fault Peugeot). On peut modifier la valeur de l'attribut : 1 voiture_de_maman . marque = \"citroen\" Vocabulaire voiture_de_maman et voiture_de_papa sont des instances de la classe Voiture . Ce sont des obets fabriqu\u00e9s \u00e0 partir du moule Voiture . M\u00e9thode et self \u2693\ufe0e Une m\u00e9thode prend toujours en premier param\u00e8tre l'objet lui-m\u00eame par l'interm\u00e9diare de l'argument self . L'appel de la m\u00e9thode se fait \u00e9galement avec la notation : nom_instance.methode(...) 1 2 3 4 5 6 7 8 class Voiture : marque = \"Peugeot\" def ajoute_modele ( self , modele ): self . marque = self . marque + ' ' + modele return self . marque voiture_de_maman = Voiture () voiture_de_maman . ajoute_modele ( \"c4\" ) voiture_de_maman . marque Constructeur \u2693\ufe0e Le constructeur __init__ permet de cr\u00e9er des objets dont les attributs seront diff\u00e9rents. On va prendre un exemple : 1 2 3 4 5 6 7 8 9 class Personne : def __init__ ( self , nom , age ): self . nom = nom self . age = age jim = Personne ( \"Jim\" , 27 ) print ( jim . nom ) print ( jim . age ) Remarque Pour afficher la totalit\u00e9 des attributs de la classe en une seule fois, on serai tent\u00e9 de faire print(jim) . Mais le r\u00e9sultat n'est as concluant. La m\u00e9thode print() appelle une m\u00e9thode de classe appel\u00e9e __repr__ . On va modifier cette m\u00e9thode pour que tout l'objet s'affiche. 1 2 3 4 5 6 7 8 9 10 class Personne : def __init__ ( self , nom , age ): self . nom = nom self . age = age def __repr__ ( self ): return f \" { self . nom } est une Personne de { self . age } ans.\" john = Personne ( \"John\" , 32 ) print ( john ) M\u00e9thodes sp\u00e9cifiques \u00e0 l'objet \u2693\ufe0e On peut cr\u00e9er des m\u00e9thodes dans la classes permettant par exemple de modifier certains attributs. Etudier le code suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Personne : def __init__ ( self , nom , annee ): self . nom = nom self . annee = annee self . age = None def calculer_age ( self , annee_courante ): self . age = annee_courante - self . annee return f \" { self . nom } a { self . age } ans\" def renommer ( self , nouveau_nom ): self . nom = nouveau_nom def __repr__ ( self ): return f \" { self . nom } est une Personne n\u00e9 en { self . annee } .\" pierre = Personne ( \"pierre\" , 1985 ) print ( pierre ) pierre . renommer ( \"paul\" ) print ( pierre . nom ) print ( pierre . calculer_age ( 2021 )) print ( pierre . age ) La m\u00e9thode renommer() permet de modifier la valeur de l'attribut nom de l'instance cr\u00e9\u00e9e. La m\u00e9thode calculer_age permet de mettre l'\u00e2ge \u00e0 jour. ann\u00e9e courante On pourrait m\u00eame faire appel au module datetime pour acc\u00e9der \u00e0 l'ann\u00e9e courante et mettre \u00e0 jour l'\u00e2ge automatiquement. 1 2 3 4 import datetime date = datetime . datetime . now () annee_courante = date . year print ( pierre . calculer_age ( annee_courante )) Getteurs et setters : les bonnes pratiques \u2693\ufe0e En r\u00e9alit\u00e9, si l'on souhaite modifier les attributs : get_nom_attribut : pour le r\u00e9cup\u00e9rer. set_nom_attribut : pour le modifier. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 class Personne : def __init__ ( self , nom , age ): self . nom = nom self . age = age def get_nom ( self ): return self . nom def set_nom ( self , nom ): self . nom = nom def get_age ( self ): return self . age def set_age ( self , age ): self . age = age def __repr__ ( self ): return f \" { self . nom } est une Personne de { self . age } ans.\" john = Personne ( \"John\" , 32 ) print ( \"Au d\u00e9but\" ) print ( john ) print ( \"Modification des attributs avec les setters\" ) john . set_nom ( \"Jean\" ) john . set_age ( 12 ) print ( john ) print ( \"R\u00e9cup\u00e9ration des attributs avec les getters\" ) john . get_nom (), john . get_age () A retenir \u2693\ufe0e La POO permet la fabrication d'objets issus d'un m\u00eame moule mais personnalisable en modifiant certaines caract\u00e9ristiques et d'adapter le programme \u00e0 chaque situation. Tout python est en fait encapsul\u00e9 dans des objets. vocabulaire \u2693\ufe0e La classe : c'est le moule \u00e0 partir du quel on fabrique les objets. L' objet est une instance de la classe , un m\u00eame moule peut fabriquer plusieurs objets. Les attributs : caract\u00e9ristiques personnalisables des objets. Les m\u00e9thodes sont des actions que l'on peut r\u00e9aliser sur les objets. Cr\u00e9er une classe \u2693\ufe0e Sans consructeur 1 2 3 4 5 class Sandwich : sauce = \"blanche\" pain = \"pita\" legume = \"tomate\" viande \"steack hach\u00e9\" Tous les objets cr\u00e9\u00e9s auront les m\u00eames attributs que l'on pourra modifier ensuite. On peut remplacer les valeurs par d\u00e9faut par None. Avec constructeur 1 2 3 4 5 6 class Sandwich : def __init__ ( self , sauce , viande , pain , legume ): self . sauce = sauce self . pain = pain self . viande = viande self . legume = legume On donne aux objets des attributs pr\u00e9cis d\u00e8s la cr\u00e9ation A chaque utilisation de la m\u00e9thode self est remplac\u00e9 par le nom de l'instance. cr\u00e9er une instance de classe \u2693\ufe0e Chaque sandwich cr\u00e9\u00e9 est une instance de la classe sandwich . 1 vegie = Sandwich ( \"blanche\" , \"staeck de soja\" , \"pita\" , \"salade\" ) Remarque Sans constructeur, on ne mettra pas d'arguments mais les valeurs des attributs seront celles d\u00e9finies par d\u00e9faut. Instance de classe Vegie est une instance de la classe sandwich. Cr\u00e9er et appeler uen m\u00e9thode \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Sandwich : def __init__ ( self , sauce , viande , pain , legume ): self . sauce = sauce self . pain = pain self . viande = viande self . legume = legume def afficher ( self ): L = [] L . append ( self . sauce ) L . append ( self . pain ) L . append ( self . viande ) L . append ( self . legume ) return L vegie = Sandwich ( \"blanche\" , \"staeck de soja\" , \"pita\" , \"salade\" ) #on appelle la m\u00e9thode print ( vegie . afficher ()) Cet appel affiche : ['blanche', 'pita', 'steack de soja', 'salade'] Getteurs et setters \u2693\ufe0e C'est la mani\u00e8re la plus \"propre\" d'acc\u00e9der et de modifier les attributs d'instance. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class Sandwich : def __init__ ( self , sauce , viande , pain , legume ): self . sauce = sauce self . pain = pain self . viande = viande self . legume = legume def get_pain ( self ): return self . get_pain def set_pain ( self , pain ): #remplace la valeur pr\u00e9c\u00e9dente de l'attribut pain par celui pass\u00e9 en argument self . pain = pain def afficher ( self ): L = [] L . append ( self . sauce ) L . append ( self . pain ) L . append ( self . viande ) L . append ( self . legume ) return L vegie = Sandwich ( \"blanche\" , \"staeck de soja\" , \"pita\" , \"salade\" ) print ( vegie . get_pain ()) vegie . set_pain ( \"galette\" ) print ( vegie . get_pain ()) Le premier appel affiche 'pita' le second 'galette'. r\u00e9capitulatif de la syntaxe 1 2 class MaClasse : attribut = \u2026 Cr\u00e9er une instance de classe : 1 instance = MaClasse ( args ) Cr\u00e9er une m\u00e9thode : 1 2 def methode ( self , args ): return \u2026 Appeler une m\u00e9thode sur une instance : 1 objet . methode () Acc\u00e9der \u00e0 un attribut d'une instance : 1 instance . attribut Constructeur : 1 2 3 def __init__ ( self , arg1 , arg2 ): self . attribut1 = arg1 self . attribut2 = arg2 Acc\u00e9der \u00e0 un attribut d'instance (getters) 1 2 3 def get_attribut ( self ): return self . attribut instance . get_attribut () Modifier un attribut d'instance 1 2 3 def set_attribut ( self , arg ): self . attribut = arg instance . set_attribut ( arg )","title":"Programmation Orient\u00e9e Objet"},{"location":"Structure/POO.html#programmation-orientee-objet-poo","text":"Tous les bouts de codes sont \u00e0 tester dans un progrmme python pour se rendre compte du r\u00e9sultat La programmation orient\u00e9e objet est une m\u00e9thode de programmation qui consiste \u00e0 cr\u00e9er des objets qui auront des caract\u00e9ristiques et des m\u00e9thodes bien sp\u00e9cifiques \u00e0 ce type d'objet. Par exemple, les cha\u00eene de caract\u00e8res en python sont des objets. On peut en cr\u00e9er une, la supprimer, acc\u00e9der \u00e0 sa longueur, ajouter des \u00e9l\u00e9ments, compter des occurences, ... Le type str en python est en r\u00e9alit\u00e9 un objet avec ses propres caract\u00e9ristiques et m\u00e9thodes. Nous allons prendre un exemple et le d\u00e9velopper pas \u00e0 pas. Dans cet exemple, nous allons utilis\u00e9 la gestion d'un parc automobile. Chaque voiture du parc aura les caract\u00e9ristiques suivantes : marque, mod\u00e8le, couleur, ann\u00e9e, propri\u00e9taire, prix neuf . On pourra modifier ces caract\u00e9ristiques en vendant ou repeignant et d\u00e9terminer sa c\u00f4te en fonction de l'ann\u00e9e.","title":"Programmation Orient\u00e9e Objet (POO)"},{"location":"Structure/POO.html#creation-de-la-classe","text":"La classe est le moule qui va nous permettre de abriquer des objets ayant acc\u00e8s aux m\u00eames caract\u00e9ristiques et m\u00e9thodes. 1 2 3 4 5 6 7 class Voiture : marque = \"Peugeot\" #on cr\u00e9\u00e9 un moule appel\u00e9 voiture dont l'attribut marque vaut \"Peugeot\" #On cr\u00e9e des voitures \u00e0 partir ce moule voiture_de_papa = Voiture () voiture_de_maman = Voiture () voiture_de_papa . marque #affiche la marque renseign\u00e9e lors de la cr\u00e9ation de la voiture (ici par d\u00e9fault Peugeot). On peut modifier la valeur de l'attribut : 1 voiture_de_maman . marque = \"citroen\" Vocabulaire voiture_de_maman et voiture_de_papa sont des instances de la classe Voiture . Ce sont des obets fabriqu\u00e9s \u00e0 partir du moule Voiture .","title":"Cr\u00e9ation de la classe"},{"location":"Structure/POO.html#methode-et-self","text":"Une m\u00e9thode prend toujours en premier param\u00e8tre l'objet lui-m\u00eame par l'interm\u00e9diare de l'argument self . L'appel de la m\u00e9thode se fait \u00e9galement avec la notation : nom_instance.methode(...) 1 2 3 4 5 6 7 8 class Voiture : marque = \"Peugeot\" def ajoute_modele ( self , modele ): self . marque = self . marque + ' ' + modele return self . marque voiture_de_maman = Voiture () voiture_de_maman . ajoute_modele ( \"c4\" ) voiture_de_maman . marque","title":"M\u00e9thode et self"},{"location":"Structure/POO.html#constructeur","text":"Le constructeur __init__ permet de cr\u00e9er des objets dont les attributs seront diff\u00e9rents. On va prendre un exemple : 1 2 3 4 5 6 7 8 9 class Personne : def __init__ ( self , nom , age ): self . nom = nom self . age = age jim = Personne ( \"Jim\" , 27 ) print ( jim . nom ) print ( jim . age ) Remarque Pour afficher la totalit\u00e9 des attributs de la classe en une seule fois, on serai tent\u00e9 de faire print(jim) . Mais le r\u00e9sultat n'est as concluant. La m\u00e9thode print() appelle une m\u00e9thode de classe appel\u00e9e __repr__ . On va modifier cette m\u00e9thode pour que tout l'objet s'affiche. 1 2 3 4 5 6 7 8 9 10 class Personne : def __init__ ( self , nom , age ): self . nom = nom self . age = age def __repr__ ( self ): return f \" { self . nom } est une Personne de { self . age } ans.\" john = Personne ( \"John\" , 32 ) print ( john )","title":"Constructeur"},{"location":"Structure/POO.html#methodes-specifiques-a-lobjet","text":"On peut cr\u00e9er des m\u00e9thodes dans la classes permettant par exemple de modifier certains attributs. Etudier le code suivant : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Personne : def __init__ ( self , nom , annee ): self . nom = nom self . annee = annee self . age = None def calculer_age ( self , annee_courante ): self . age = annee_courante - self . annee return f \" { self . nom } a { self . age } ans\" def renommer ( self , nouveau_nom ): self . nom = nouveau_nom def __repr__ ( self ): return f \" { self . nom } est une Personne n\u00e9 en { self . annee } .\" pierre = Personne ( \"pierre\" , 1985 ) print ( pierre ) pierre . renommer ( \"paul\" ) print ( pierre . nom ) print ( pierre . calculer_age ( 2021 )) print ( pierre . age ) La m\u00e9thode renommer() permet de modifier la valeur de l'attribut nom de l'instance cr\u00e9\u00e9e. La m\u00e9thode calculer_age permet de mettre l'\u00e2ge \u00e0 jour. ann\u00e9e courante On pourrait m\u00eame faire appel au module datetime pour acc\u00e9der \u00e0 l'ann\u00e9e courante et mettre \u00e0 jour l'\u00e2ge automatiquement. 1 2 3 4 import datetime date = datetime . datetime . now () annee_courante = date . year print ( pierre . calculer_age ( annee_courante ))","title":"M\u00e9thodes sp\u00e9cifiques \u00e0 l'objet"},{"location":"Structure/POO.html#getteurs-et-setters-les-bonnes-pratiques","text":"En r\u00e9alit\u00e9, si l'on souhaite modifier les attributs : get_nom_attribut : pour le r\u00e9cup\u00e9rer. set_nom_attribut : pour le modifier. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 class Personne : def __init__ ( self , nom , age ): self . nom = nom self . age = age def get_nom ( self ): return self . nom def set_nom ( self , nom ): self . nom = nom def get_age ( self ): return self . age def set_age ( self , age ): self . age = age def __repr__ ( self ): return f \" { self . nom } est une Personne de { self . age } ans.\" john = Personne ( \"John\" , 32 ) print ( \"Au d\u00e9but\" ) print ( john ) print ( \"Modification des attributs avec les setters\" ) john . set_nom ( \"Jean\" ) john . set_age ( 12 ) print ( john ) print ( \"R\u00e9cup\u00e9ration des attributs avec les getters\" ) john . get_nom (), john . get_age ()","title":"Getteurs et setters : les bonnes pratiques"},{"location":"Structure/POO.html#a-retenir","text":"La POO permet la fabrication d'objets issus d'un m\u00eame moule mais personnalisable en modifiant certaines caract\u00e9ristiques et d'adapter le programme \u00e0 chaque situation. Tout python est en fait encapsul\u00e9 dans des objets.","title":"A retenir"},{"location":"Structure/POO.html#vocabulaire","text":"La classe : c'est le moule \u00e0 partir du quel on fabrique les objets. L' objet est une instance de la classe , un m\u00eame moule peut fabriquer plusieurs objets. Les attributs : caract\u00e9ristiques personnalisables des objets. Les m\u00e9thodes sont des actions que l'on peut r\u00e9aliser sur les objets.","title":"vocabulaire"},{"location":"Structure/POO.html#creer-une-classe","text":"Sans consructeur 1 2 3 4 5 class Sandwich : sauce = \"blanche\" pain = \"pita\" legume = \"tomate\" viande \"steack hach\u00e9\" Tous les objets cr\u00e9\u00e9s auront les m\u00eames attributs que l'on pourra modifier ensuite. On peut remplacer les valeurs par d\u00e9faut par None. Avec constructeur 1 2 3 4 5 6 class Sandwich : def __init__ ( self , sauce , viande , pain , legume ): self . sauce = sauce self . pain = pain self . viande = viande self . legume = legume On donne aux objets des attributs pr\u00e9cis d\u00e8s la cr\u00e9ation A chaque utilisation de la m\u00e9thode self est remplac\u00e9 par le nom de l'instance.","title":"Cr\u00e9er une classe"},{"location":"Structure/POO.html#creer-une-instance-de-classe","text":"Chaque sandwich cr\u00e9\u00e9 est une instance de la classe sandwich . 1 vegie = Sandwich ( \"blanche\" , \"staeck de soja\" , \"pita\" , \"salade\" ) Remarque Sans constructeur, on ne mettra pas d'arguments mais les valeurs des attributs seront celles d\u00e9finies par d\u00e9faut. Instance de classe Vegie est une instance de la classe sandwich.","title":"cr\u00e9er une instance de classe"},{"location":"Structure/POO.html#creer-et-appeler-uen-methode","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Sandwich : def __init__ ( self , sauce , viande , pain , legume ): self . sauce = sauce self . pain = pain self . viande = viande self . legume = legume def afficher ( self ): L = [] L . append ( self . sauce ) L . append ( self . pain ) L . append ( self . viande ) L . append ( self . legume ) return L vegie = Sandwich ( \"blanche\" , \"staeck de soja\" , \"pita\" , \"salade\" ) #on appelle la m\u00e9thode print ( vegie . afficher ()) Cet appel affiche : ['blanche', 'pita', 'steack de soja', 'salade']","title":"Cr\u00e9er et appeler uen m\u00e9thode"},{"location":"Structure/POO.html#getteurs-et-setters","text":"C'est la mani\u00e8re la plus \"propre\" d'acc\u00e9der et de modifier les attributs d'instance. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class Sandwich : def __init__ ( self , sauce , viande , pain , legume ): self . sauce = sauce self . pain = pain self . viande = viande self . legume = legume def get_pain ( self ): return self . get_pain def set_pain ( self , pain ): #remplace la valeur pr\u00e9c\u00e9dente de l'attribut pain par celui pass\u00e9 en argument self . pain = pain def afficher ( self ): L = [] L . append ( self . sauce ) L . append ( self . pain ) L . append ( self . viande ) L . append ( self . legume ) return L vegie = Sandwich ( \"blanche\" , \"staeck de soja\" , \"pita\" , \"salade\" ) print ( vegie . get_pain ()) vegie . set_pain ( \"galette\" ) print ( vegie . get_pain ()) Le premier appel affiche 'pita' le second 'galette'. r\u00e9capitulatif de la syntaxe 1 2 class MaClasse : attribut = \u2026 Cr\u00e9er une instance de classe : 1 instance = MaClasse ( args ) Cr\u00e9er une m\u00e9thode : 1 2 def methode ( self , args ): return \u2026 Appeler une m\u00e9thode sur une instance : 1 objet . methode () Acc\u00e9der \u00e0 un attribut d'une instance : 1 instance . attribut Constructeur : 1 2 3 def __init__ ( self , arg1 , arg2 ): self . attribut1 = arg1 self . attribut2 = arg2 Acc\u00e9der \u00e0 un attribut d'instance (getters) 1 2 3 def get_attribut ( self ): return self . attribut instance . get_attribut () Modifier un attribut d'instance 1 2 3 def set_attribut ( self , arg ): self . attribut = arg instance . set_attribut ( arg )","title":"Getteurs et setters"},{"location":"Structure/arbres.html","text":"Les arbres binaires \u2693\ufe0e Vocabulaire \u2693\ufe0e Un arbre est une structure permettant de r\u00e9pr\u00e9senter des relations en informatique. Chaue \u00e9l\u00e9ment de l'arbre est app\u00e9l\u00e9 un noeud . Une feuille est un neoud n'ayant pas de descendant. la racine est le noeud de d\u00e9part, qui n'a pas d'acsendant. N\u0153uds descendants (ou fils) : n\u0153uds li\u00e9s \u00e0 un n\u0153ud ascendant en s'\u00e9loignant de la racine. Les propri\u00e9t\u00e9s d'un arbre \u2693\ufe0e La Hauteur de l'arbre est le nombre d'arr\u00eates maximale entre la racine et les feuilles. La taille de l'arbre : nombre de n\u0153uds. La profondeur d'un n\u0153ud est le nombre d'arr\u00eates entre le n\u0153ud et la racine. exemple Dans l'exemple ci-dessus, la taille de l'arbre est de 10, la hauteur est de 3 et la profondeur du noeud 10 est 2. La racine est le noeud 2 en haut, 2, 10, 1, 11 et 4 sont des feuilles. Arbre binaire \u2693\ufe0e Un arbre est g\u00e9n\u00e9ralement orient\u00e9 de la racine aux feuilles. Il est consid\u00e9r\u00e9 comme binaire lorsqu'un neud ne peut pas avoir plus de deux descendants. Exemples \u2693\ufe0e arbre binaire Seul le deuxi\u00e8me est un arbre binaire","title":"Arbres"},{"location":"Structure/arbres.html#les-arbres-binaires","text":"","title":"Les arbres binaires"},{"location":"Structure/arbres.html#vocabulaire","text":"Un arbre est une structure permettant de r\u00e9pr\u00e9senter des relations en informatique. Chaue \u00e9l\u00e9ment de l'arbre est app\u00e9l\u00e9 un noeud . Une feuille est un neoud n'ayant pas de descendant. la racine est le noeud de d\u00e9part, qui n'a pas d'acsendant. N\u0153uds descendants (ou fils) : n\u0153uds li\u00e9s \u00e0 un n\u0153ud ascendant en s'\u00e9loignant de la racine.","title":"Vocabulaire"},{"location":"Structure/arbres.html#les-proprietes-dun-arbre","text":"La Hauteur de l'arbre est le nombre d'arr\u00eates maximale entre la racine et les feuilles. La taille de l'arbre : nombre de n\u0153uds. La profondeur d'un n\u0153ud est le nombre d'arr\u00eates entre le n\u0153ud et la racine. exemple Dans l'exemple ci-dessus, la taille de l'arbre est de 10, la hauteur est de 3 et la profondeur du noeud 10 est 2. La racine est le noeud 2 en haut, 2, 10, 1, 11 et 4 sont des feuilles.","title":"Les propri\u00e9t\u00e9s d'un arbre"},{"location":"Structure/arbres.html#arbre-binaire","text":"Un arbre est g\u00e9n\u00e9ralement orient\u00e9 de la racine aux feuilles. Il est consid\u00e9r\u00e9 comme binaire lorsqu'un neud ne peut pas avoir plus de deux descendants.","title":"Arbre binaire"},{"location":"Structure/arbres.html#exemples","text":"arbre binaire Seul le deuxi\u00e8me est un arbre binaire","title":"Exemples"},{"location":"Structure/graphes.html","text":"Les graphes \u2693\ufe0e Activit\u00e9 de pr\u00e9sentation \u2693\ufe0e Bilan \u2693\ufe0e D\u00e9fintion \u2693\ufe0e Un graphe est la repr\u00e9sentation th\u00e9orique d'une situation r\u00e9elle mais abstraite. Exemples Plan de m\u00e9tro r\u00e9seau routier r\u00e9seau d'amis ou d'influence sur les r\u00e9seaux sociaux ... Vocabulaire \u2693\ufe0e Les noeuds sont appel\u00e9s sommets , reli\u00e9s par des ar\u00eates . Les ar\u00eates sont aussi appel\u00e9es arcs si elles sont orient\u00e9es. Graphe non-orient\u00e9 : les ar\u00eates sont parcourues dans les deux sens. graphe orient\u00e9 : les arcs ne peuvent \u00eatre parcourus que dans un sens. Graphe connexe : un graphe est connexe si on peut aller d'un sommet \u00e0 l'autre quel que soit le chemin emprunt\u00e9. Graphe complet un graphe est dit complet si chaque sommet est directement reli\u00e9 \u00e0 tous les autres. voisins : Les voisins d'un sommet sont les sommets reli\u00e9s par une seule arr\u00eate. successeur : les successeurs sont les voisins d'apr\u00e8s. pr\u00e9d\u00e9cesseurs : Les pr\u00e9d\u00e9cesseurs sont les voisins pr\u00e9c\u00e9dent. matrice d'adjacence \u2693\ufe0e La matrice d'adjacence est un tableau \u00e0 double entr\u00e9e qui d\u00e9finit les liens entre les noeuds. Si le graphe est orient\u00e9, les colonnes sont les successeurs du noeud de la ligne courante. Si le graphe est non-orient\u00e9, la matrice est sym\u00e9trique et les informations sont donn\u00e9es en double (il faudra en tenir compte au moment de l'impl\u00e9mentation si l'on veut limiter la complexit\u00e9 de notre programme). Repr\u00e9senter en python la matrice d'adjacence \u2693\ufe0e On peut repr\u00e9senter la matrice en python avec diff\u00e9rentes structure, comme : la liste le dictionnaire l'instance de classe Exercices sur les graphes \u2693\ufe0e Impl\u00e9menter les graphes en python \u2693\ufe0e Se rendre sur Capytale et saisir le code d'activit\u00e9 24b4-33046.","title":"Les graphes"},{"location":"Structure/graphes.html#les-graphes","text":"","title":"Les graphes"},{"location":"Structure/graphes.html#activite-de-presentation","text":"","title":"Activit\u00e9 de pr\u00e9sentation"},{"location":"Structure/graphes.html#bilan","text":"","title":"Bilan"},{"location":"Structure/graphes.html#defintion","text":"Un graphe est la repr\u00e9sentation th\u00e9orique d'une situation r\u00e9elle mais abstraite. Exemples Plan de m\u00e9tro r\u00e9seau routier r\u00e9seau d'amis ou d'influence sur les r\u00e9seaux sociaux ...","title":"D\u00e9fintion"},{"location":"Structure/graphes.html#vocabulaire","text":"Les noeuds sont appel\u00e9s sommets , reli\u00e9s par des ar\u00eates . Les ar\u00eates sont aussi appel\u00e9es arcs si elles sont orient\u00e9es. Graphe non-orient\u00e9 : les ar\u00eates sont parcourues dans les deux sens. graphe orient\u00e9 : les arcs ne peuvent \u00eatre parcourus que dans un sens. Graphe connexe : un graphe est connexe si on peut aller d'un sommet \u00e0 l'autre quel que soit le chemin emprunt\u00e9. Graphe complet un graphe est dit complet si chaque sommet est directement reli\u00e9 \u00e0 tous les autres. voisins : Les voisins d'un sommet sont les sommets reli\u00e9s par une seule arr\u00eate. successeur : les successeurs sont les voisins d'apr\u00e8s. pr\u00e9d\u00e9cesseurs : Les pr\u00e9d\u00e9cesseurs sont les voisins pr\u00e9c\u00e9dent.","title":"Vocabulaire"},{"location":"Structure/graphes.html#matrice-dadjacence","text":"La matrice d'adjacence est un tableau \u00e0 double entr\u00e9e qui d\u00e9finit les liens entre les noeuds. Si le graphe est orient\u00e9, les colonnes sont les successeurs du noeud de la ligne courante. Si le graphe est non-orient\u00e9, la matrice est sym\u00e9trique et les informations sont donn\u00e9es en double (il faudra en tenir compte au moment de l'impl\u00e9mentation si l'on veut limiter la complexit\u00e9 de notre programme).","title":"matrice d'adjacence"},{"location":"Structure/graphes.html#representer-en-python-la-matrice-dadjacence","text":"On peut repr\u00e9senter la matrice en python avec diff\u00e9rentes structure, comme : la liste le dictionnaire l'instance de classe","title":"Repr\u00e9senter en python la matrice d'adjacence"},{"location":"Structure/graphes.html#exercices-sur-les-graphes","text":"","title":"Exercices sur les graphes"},{"location":"Structure/graphes.html#implementer-les-graphes-en-python","text":"Se rendre sur Capytale et saisir le code d'activit\u00e9 24b4-33046.","title":"Impl\u00e9menter les graphes en python"},{"location":"Structure/listes_piles_files.html","text":"Listes, piles et files \u2693\ufe0e Les listes cha\u00een\u00e9es \u2693\ufe0e Qu'est ce qu'une liste cha\u00een\u00e9e ? \u2693\ufe0e Une liste cha\u00een\u00e9e est un objet dont chaque \u00e9l\u00e9ment contient deux \u00e9l\u00e9ments : le contenu et l'adresse de l'\u00e9l\u00e9ment suivant. Une liste cha\u00een\u00e9e est diff\u00e9rente d'un tableau dans le sens o\u00f9 les \u00e9l\u00e9ments de votre liste sont r\u00e9partis dans la m\u00e9moire et reli\u00e9s entre eux par des pointeurs. Vous pouvez ajouter et enlever des \u00e9l\u00e9ments d'une liste cha\u00een\u00e9e \u00e0 n'importe quel endroit, \u00e0 n'importe quel instant, sans devoir recr\u00e9er la liste enti\u00e8re. Ins\u00e9rer ou supprimer un \u00e9l\u00e9ment dans une liste \u2693\ufe0e Pour ins\u00e9rer ou supprimer un \u00e9l\u00e9ment dans une liste cha\u00een\u00e9e il suffit de modifier le pointeur des \u00e9l\u00e9ments autour. Quelques op\u00e9rations que l'on peut faire avec les listes cha\u00een\u00e9es : Ajouter/retirer un \u00e9l\u00e9ment au d\u00e9but, \u00e0 la fin, \u00e0 l'int\u00e9rieur Concat\u00e9ner de deux listes Scinder une liste en deux Acc\u00e9der au n-i\u00e8me \u00e9l\u00e9ment Rechercher la pr\u00e9sence d'un \u00e9l\u00e9ment On les impl\u00e9mentera en python en utilisant des dictionnaires plus tard. Question A votre avis de quelle nature sont les listes en python. Choisir la bonne r\u00e9ponse des tableaux des listes cha\u00een\u00e9es Solution \u2705 des tableaux \u274c des listes cha\u00een\u00e9es attention Ne pas confondre la notion abstraite de liste cha\u00een\u00e9e en programmation et la liste en phyton. En python quand on ins\u00e8re un \u00e9l\u00e9ment dans uns liste, il faut d\u00e9caler les index de tous les autres \u00e9l\u00e9ments. Les piles \u2693\ufe0e D\u00e9finition : La structure de pile est un cas particulier de liste cha\u00een\u00e9e dans lequel on acc\u00e8de uniquement au premier \u00e9l\u00e9ment de la liste : celui que l'on nomme le sommet de la pile. On repr\u00e9sente en g\u00e9n\u00e9ral cette structure sous forme verticale. On peut prendre pour exemple une pile d'assiettes : La derni\u00e8re assiette rang\u00e9e sera la premi\u00e8re que l'on ressortira. On parle parfois de pile LIFO (Last In First Out : dernier entr\u00e9, premier sorti). exemples d'utilisation courantes Les piles sont extr\u00eamement utiles en informatique et vous les utilisez quotidiennement, parfois m\u00eame sans vous en rendre compte : La fonction annuler (Ctrl-Z) de votre traitement de textes par exemple est une pile : Quand vous tapez Ctrl-Z, vous annulez la derni\u00e8re op\u00e9ration effectu\u00e9e. Quand vous faites une nouvelle op\u00e9ration, celle-ci est m\u00e9moris\u00e9e au sommet de la pile. Vous ne pouvez pas annuler l'avant derni\u00e8re op\u00e9ration sauf \u00e0 annuler la derni\u00e8re. Le bouton retour de votre navigateur internet fonctionne \u00e9galement \u00e0 l'aide d'une pile. Les pages web consult\u00e9es lors de votre navigation sur une page sont empil\u00e9es et le bouton retour permet d'acc\u00e9der \u00e0 la derni\u00e8re page pr\u00e9sente sur la pile. Certaines calculatrices fonctionnent \u00e0 l'aide d\u2019une pile pour stocker les arguments des op\u00e9rations : c'est le cas de beaucoup de calculatrices de la marque HP, dont la premi\u00e8re calculatrice scientifique ayant jamais \u00e9t\u00e9 produite : la HP 35 de 1972. La calculatrice scientifiique \u2693\ufe0e Le mode de calcul avec une pile s'appelle RPN (Reverse Polish Notation ou notation polonaise inverse). Dans cette logique postfix\u00e9e, on saisit d'abord les arguments de l'op\u00e9ration puis en dernier, l'op\u00e9ration \u00e0 r\u00e9aliser. Exemple : Pour faire 2+3 on empilera 2, puis 3 et enfin on invoquera la fonction +. Cette logique est extr\u00eamement efficace et rapide, en particulier dans les encha\u00eenements d'op\u00e9rations car elle ne n\u00e9cessite pas de saisir des parenth\u00e8ses. elle permet aussi de faire moins d'erreurs de calcul car on est oblig\u00e9 de r\u00e9fl\u00e9chir aux priorit\u00e9s des op\u00e9rations au moment de la saisie. Voici une illustration en vid\u00e9o de l'utilisation de la calculatrice HP-45 (1974) qui est l'une des toutes premi\u00e8res calculatrices scientifiques. Quel calcul est saisi? Question Quel calcul est effectu\u00e9 si je rentre la s\u00e9quence : 12 ENTER 4 ENTER 3 x + et quel est le r\u00e9sultat de la s\u00e9quence? correction 4*3+12 = 24 Pourquoi? Le chiffre 3 est dans le registre x, 4 dans le Y et 12 dans le Z. Le premier signe multiplie les registres X et Y et range le r\u00e9sultat dans X (=3x4) 12 est alors redescendu dans le registre Y. Le deuxi\u00e8me signe a pour but d'additionner les registre X et Y. Quelle s\u00e9quence saisir? Question On souhaite effectuer le calculer (12-4)*3. Quelle s\u00e9quence faudra-t-il \u00e9crire ?\" correction 3 ENTER 4 ENTER 12 - * Pourquoi? Il faut empiler les nombres de fa\u00e7on \u00e0 ce que les nombres prioritaires soient dans les registres X et Y. On fait en 1er l'op\u00e9ration 12-4 donc 4 doit \u00eatre dans Y et 12 dans X. On commence donc par empiler le nombre 3 puis 4 puis 12. Une fois la premi\u00e8re op\u00e9ration effectu\u00e9e, 8 se trouve dans le registre X et 3 est descendu dans Y. Les m\u00e9thodes append() et pop() des listes en python permettent respectivement d'empiler et de d\u00e9piler un \u00e9l\u00e9ment. Les files \u2693\ufe0e D\u00e9finition : Dans une file, les \u00e9l\u00e9ments sont plac\u00e9s les uns \u00e0 cot\u00e9s des autres comme dans une pile, \u00e0 la diff\u00e9rence que seul l'on sort les \u00e9l\u00e9ments du plus ancien vers le plus r\u00e9cent. Cela correspond \u00e0 ce qui se passe dans une file d'attente. Exemple Dans le domaine informatique, on retrouve par exemple les files dans les files d'impression o\u00f9 le premier document envoy\u00e9 \u00e0 l'imprimante sera le premier document \u00e0 \u00eatre imprim\u00e9. Op\u00e9rations possibles : \u2693\ufe0e Sur une file, on peut : ajouter un \u00e9l\u00e9ment \u00e0 la fin de la liste (enfiler) supprimer/consulter le premier \u00e9l\u00e9ment (d\u00e9filer) savoir si la liste est vide connaitre le nombre d'\u00e9l\u00e9ments qu'elle contient acronyme pour les files Question En comparant avec l'acronyme FILO utilis\u00e9 pour les piles, quel serait celui concernant les piles ? Correction FIFO First in First Out. Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Listes piles et files "},{"location":"Structure/listes_piles_files.html#listes-piles-et-files","text":"","title":"Listes, piles et files"},{"location":"Structure/listes_piles_files.html#les-listes-chainees","text":"","title":"Les listes cha\u00een\u00e9es"},{"location":"Structure/listes_piles_files.html#quest-ce-quune-liste-chainee","text":"Une liste cha\u00een\u00e9e est un objet dont chaque \u00e9l\u00e9ment contient deux \u00e9l\u00e9ments : le contenu et l'adresse de l'\u00e9l\u00e9ment suivant. Une liste cha\u00een\u00e9e est diff\u00e9rente d'un tableau dans le sens o\u00f9 les \u00e9l\u00e9ments de votre liste sont r\u00e9partis dans la m\u00e9moire et reli\u00e9s entre eux par des pointeurs. Vous pouvez ajouter et enlever des \u00e9l\u00e9ments d'une liste cha\u00een\u00e9e \u00e0 n'importe quel endroit, \u00e0 n'importe quel instant, sans devoir recr\u00e9er la liste enti\u00e8re.","title":"Qu'est ce qu'une liste cha\u00een\u00e9e ?"},{"location":"Structure/listes_piles_files.html#inserer-ou-supprimer-un-element-dans-une-liste","text":"Pour ins\u00e9rer ou supprimer un \u00e9l\u00e9ment dans une liste cha\u00een\u00e9e il suffit de modifier le pointeur des \u00e9l\u00e9ments autour. Quelques op\u00e9rations que l'on peut faire avec les listes cha\u00een\u00e9es : Ajouter/retirer un \u00e9l\u00e9ment au d\u00e9but, \u00e0 la fin, \u00e0 l'int\u00e9rieur Concat\u00e9ner de deux listes Scinder une liste en deux Acc\u00e9der au n-i\u00e8me \u00e9l\u00e9ment Rechercher la pr\u00e9sence d'un \u00e9l\u00e9ment On les impl\u00e9mentera en python en utilisant des dictionnaires plus tard. Question A votre avis de quelle nature sont les listes en python. Choisir la bonne r\u00e9ponse des tableaux des listes cha\u00een\u00e9es Solution \u2705 des tableaux \u274c des listes cha\u00een\u00e9es attention Ne pas confondre la notion abstraite de liste cha\u00een\u00e9e en programmation et la liste en phyton. En python quand on ins\u00e8re un \u00e9l\u00e9ment dans uns liste, il faut d\u00e9caler les index de tous les autres \u00e9l\u00e9ments.","title":"Ins\u00e9rer ou supprimer un \u00e9l\u00e9ment dans une liste"},{"location":"Structure/listes_piles_files.html#les-piles","text":"D\u00e9finition : La structure de pile est un cas particulier de liste cha\u00een\u00e9e dans lequel on acc\u00e8de uniquement au premier \u00e9l\u00e9ment de la liste : celui que l'on nomme le sommet de la pile. On repr\u00e9sente en g\u00e9n\u00e9ral cette structure sous forme verticale. On peut prendre pour exemple une pile d'assiettes : La derni\u00e8re assiette rang\u00e9e sera la premi\u00e8re que l'on ressortira. On parle parfois de pile LIFO (Last In First Out : dernier entr\u00e9, premier sorti). exemples d'utilisation courantes Les piles sont extr\u00eamement utiles en informatique et vous les utilisez quotidiennement, parfois m\u00eame sans vous en rendre compte : La fonction annuler (Ctrl-Z) de votre traitement de textes par exemple est une pile : Quand vous tapez Ctrl-Z, vous annulez la derni\u00e8re op\u00e9ration effectu\u00e9e. Quand vous faites une nouvelle op\u00e9ration, celle-ci est m\u00e9moris\u00e9e au sommet de la pile. Vous ne pouvez pas annuler l'avant derni\u00e8re op\u00e9ration sauf \u00e0 annuler la derni\u00e8re. Le bouton retour de votre navigateur internet fonctionne \u00e9galement \u00e0 l'aide d'une pile. Les pages web consult\u00e9es lors de votre navigation sur une page sont empil\u00e9es et le bouton retour permet d'acc\u00e9der \u00e0 la derni\u00e8re page pr\u00e9sente sur la pile. Certaines calculatrices fonctionnent \u00e0 l'aide d\u2019une pile pour stocker les arguments des op\u00e9rations : c'est le cas de beaucoup de calculatrices de la marque HP, dont la premi\u00e8re calculatrice scientifique ayant jamais \u00e9t\u00e9 produite : la HP 35 de 1972.","title":"Les piles"},{"location":"Structure/listes_piles_files.html#la-calculatrice-scientifiique","text":"Le mode de calcul avec une pile s'appelle RPN (Reverse Polish Notation ou notation polonaise inverse). Dans cette logique postfix\u00e9e, on saisit d'abord les arguments de l'op\u00e9ration puis en dernier, l'op\u00e9ration \u00e0 r\u00e9aliser. Exemple : Pour faire 2+3 on empilera 2, puis 3 et enfin on invoquera la fonction +. Cette logique est extr\u00eamement efficace et rapide, en particulier dans les encha\u00eenements d'op\u00e9rations car elle ne n\u00e9cessite pas de saisir des parenth\u00e8ses. elle permet aussi de faire moins d'erreurs de calcul car on est oblig\u00e9 de r\u00e9fl\u00e9chir aux priorit\u00e9s des op\u00e9rations au moment de la saisie. Voici une illustration en vid\u00e9o de l'utilisation de la calculatrice HP-45 (1974) qui est l'une des toutes premi\u00e8res calculatrices scientifiques. Quel calcul est saisi? Question Quel calcul est effectu\u00e9 si je rentre la s\u00e9quence : 12 ENTER 4 ENTER 3 x + et quel est le r\u00e9sultat de la s\u00e9quence? correction 4*3+12 = 24 Pourquoi? Le chiffre 3 est dans le registre x, 4 dans le Y et 12 dans le Z. Le premier signe multiplie les registres X et Y et range le r\u00e9sultat dans X (=3x4) 12 est alors redescendu dans le registre Y. Le deuxi\u00e8me signe a pour but d'additionner les registre X et Y. Quelle s\u00e9quence saisir? Question On souhaite effectuer le calculer (12-4)*3. Quelle s\u00e9quence faudra-t-il \u00e9crire ?\" correction 3 ENTER 4 ENTER 12 - * Pourquoi? Il faut empiler les nombres de fa\u00e7on \u00e0 ce que les nombres prioritaires soient dans les registres X et Y. On fait en 1er l'op\u00e9ration 12-4 donc 4 doit \u00eatre dans Y et 12 dans X. On commence donc par empiler le nombre 3 puis 4 puis 12. Une fois la premi\u00e8re op\u00e9ration effectu\u00e9e, 8 se trouve dans le registre X et 3 est descendu dans Y. Les m\u00e9thodes append() et pop() des listes en python permettent respectivement d'empiler et de d\u00e9piler un \u00e9l\u00e9ment.","title":"La calculatrice scientifiique"},{"location":"Structure/listes_piles_files.html#les-files","text":"D\u00e9finition : Dans une file, les \u00e9l\u00e9ments sont plac\u00e9s les uns \u00e0 cot\u00e9s des autres comme dans une pile, \u00e0 la diff\u00e9rence que seul l'on sort les \u00e9l\u00e9ments du plus ancien vers le plus r\u00e9cent. Cela correspond \u00e0 ce qui se passe dans une file d'attente. Exemple Dans le domaine informatique, on retrouve par exemple les files dans les files d'impression o\u00f9 le premier document envoy\u00e9 \u00e0 l'imprimante sera le premier document \u00e0 \u00eatre imprim\u00e9.","title":"Les files"},{"location":"Structure/listes_piles_files.html#operations-possibles","text":"Sur une file, on peut : ajouter un \u00e9l\u00e9ment \u00e0 la fin de la liste (enfiler) supprimer/consulter le premier \u00e9l\u00e9ment (d\u00e9filer) savoir si la liste est vide connaitre le nombre d'\u00e9l\u00e9ments qu'elle contient acronyme pour les files Question En comparant avec l'acronyme FILO utilis\u00e9 pour les piles, quel serait celui concernant les piles ? Correction FIFO First in First Out. Cr\u00e9ation MB. tilisation libre mais non commerciale CC-BY-NC 2021","title":"Op\u00e9rations possibles :"},{"location":"archi/crypto.html","text":"Comment crypter ses donn\u00e9es? \u2693\ufe0e Comment faire en sorte que deux personnes (Alice et Bob) s'\u00e9changent des informations sans que Eve puisse les lire. On ne peut pas l'emp\u00eacher d'intercepter le message mais si les donn\u00e9es sont crypt\u00e9es, elles seront inexploitables. Chiffrement sym\u00e9trique \u2693\ufe0e La cryptographie sym\u00e9trique, \u00e9galement dite \u00e0 cl\u00e9 secr\u00e8te (par opposition \u00e0 la cryptographie asym\u00e9trique), est la plus ancienne forme de chiffrement. Elle permet \u00e0 la fois de chiffrer et de d\u00e9chiffrer des messages \u00e0 l'aide d'un m\u00eame mot cl\u00e9. On a des traces de son utilisation par les \u00c9gyptiens vers 2000 av. J.-C. (wikipedia) Alice envoie des donn\u00e9es chiffr\u00e9es \u00e0 Bob en utilisant une cl\u00e9 de chiffrement secr\u00e8te. Cette cl\u00e9 s\u00e9cr\u00e8te est la m\u00eame que celle utilis\u00e9e par Bob pour d\u00e9chiffrer le message. Il est donc n\u00e9cessaire de se mettre d'accord sur la cl\u00e9 avant transmission des donn\u00e9es. Exemple 1 : chiffremet par substitution \u2693\ufe0e On remplace une lettre par une autre de l'alphabet (mais pas dans l'ordre), on a donc 26! \u2248 4\u00d710 26 cl\u00e9s possibles. Avec la cl\u00e9 suivante : ABCDEFGHIJKLMNOPQRSTUVWXYZ alphabet AZERTYUIOPQSDFGHJKLMWXCVBN cl\u00e9 de substitution. le message SUBSTITUTION devient LWZLMOMWMOGF Exemple 2: Chiffrement de Verman (ou chiffrement XOR) \u2693\ufe0e Il s'agit d'un syst\u00e8me parfaitement s\u00fbr, le math\u00e9maticien C.Shannon a montr\u00e9 que si on respecte bien les 3 r\u00e8gles de Verman, ce syst\u00e8me est inviolable. La cl\u00e9 doit \u00eatre une suite de caract\u00e8res au moins aussi longue que le message \u00e0 chiffrer. Les caract\u00e8res composant la cl\u00e9 doivent \u00eatre choisis de fa\u00e7on totalement al\u00e9atoire. Chaque cl\u00e9, ou \u00ab masque \u00bb, ne doit \u00eatre utilis\u00e9e qu'une seule fois (d'o\u00f9 le nom de masque jetable). Une m\u00e9thode particuli\u00e8rement efficace pour traiter le chiffrement et le d\u00e9chiffrement de messages \u00e0 partir de la cl\u00e9 est d'utiliser la fonction logique XOR, le ou exclusif qui a une particularit\u00e9 tr\u00e8s int\u00e9ressante dans notre cas. Principe : On choisit une cl\u00e9 (ici 'toto') que l'on traduit en binaire (01110100011011110111010001101111) On choisit un message \u00e0 coder : 'Bonjour' que l'on traduit en binaire (01000010011011110110111001101010011011110111010101110010) On applique la fonction XOR bit \u00e0 bit entre le message et la cl\u00e9 qu'il faudra reproduire pour avoir le m\u00eame nombre de bits. 01000010011011110110111001101010011011110111010101110010 \u2295 01110100011011110111010001101111011101000110111101110100 00110110000000000001101000000101000110110001101000000110 C=M\u2295S o\u00f9 M est le message et S la cl\u00e9. Pour d\u00e9chiffrer, on fait l'op\u00e9ration inverse : (M\u2295S)\u2295S=M Questions 1.Dans quel domaine pouvait-on utiliser la cryptographie dans l'antiquit\u00e9 ? 2.Quel peut \u00eatre le risque dans le cas d'une interception de communication si on utilise le chiffrement sym\u00e9trique ? Si Eve intercepte tous les messages elle peut aussi intercepter la cl\u00e9 qui est forc\u00e9ment transmise en clair. 3.Dans le cas des deux syst\u00e8mes propos\u00e9s, quel est la cl\u00e9 secr\u00e8te ? 4.Coder votre pr\u00e9nom gr\u00e2ce au code de Verman avec comme cl\u00e9 'nsi'. un peu plus rapide Chiffrement asym\u00e9trique \u2693\ufe0e Le principe du chiffrement asym\u00e9trique c'est que la cl\u00e9 de chiffrement n'est pas la m\u00eame que la cl\u00e9 de d\u00e9chiffrement. La personne qui crypte le message et l'envoie, ne connait pas la cl\u00e9 de d\u00e9chiffrement. Elle fut invent\u00e9e par Whitfield Diffie et Martin Hellman en 1976, qui re\u00e7urent le prix Turing de 2015 pour cette d\u00e9couverte. En cryptographie asym\u00e9trique on a 2 cl\u00e9s: la cl\u00e9 publique : Celle-ci, tout le monde peut la poss\u00e9der, il n'y a aucun risque, vous pouvez la transmettre \u00e0 n'importe qui. Elle sert \u00e0 chiffrer le message. la cl\u00e9 priv\u00e9e : que seul le r\u00e9cepteur poss\u00e8de, en l'occurrence vous. Elle servira \u00e0 d\u00e9chiffrer le message chiffr\u00e9 avec la cl\u00e9 publique. On peut simplifier la situtation en utilisant l'analogie du cadenas. Alice envoie un coffre \u00e0 Bob avec un cadenas ouvert. Bob y range son message et ferme le cadenas (il ne poss\u00e8de pas la cl\u00e9). Il envoie le tout \u00e0 Alice qui est la seule \u00e0 pouvoir l'ouvrir. Exemple : Puzzle de Merkle \u2693\ufe0e Alice cr\u00e9e un fichier contenant un grand nombre de lignes (par exemple 100 000) du type : 1 2 3 4 5 \u2026 Identifiant : 129378 , cl\u00e9 : abAZda9h ! snasjda Identifiant : 821012 , cl\u00e9 : sladljl32 #QSdsal Identifiant : 321091 , cl\u00e9 : 9 Sakns281alSA @ 31 \u2026 Elle va ensuite chiffrer chaque ligne avec un algorithme de chiffrement sym\u00e9trique et une cl\u00e9 de faible longueur, diff\u00e9rente pour chaque ligne, de fa\u00e7on \u00e0 \u00eatre facilement d\u00e9crypt\u00e9e par une attaque de force brute. Alice envoie le fichier contenant les lignes \u00e0 Bob qui choisit une ligne au hasard et la d\u00e9crypte par force brute. Il envoie ensuite son identifiant (en clair) \u00e0 Alice accompagn\u00e9 du message crypt\u00e9 gr\u00e2ce \u00e0 la cl\u00e9 appel\u00e9 cl\u00e9 de session (valable pour toute la session de communication). Alice n'a plus qu'\u00e0 regarder dans son fichier quelle cl\u00e9 elle doit utiliser pour d\u00e9crypter le message. Une personne qui intercepterait la communication ne saurait pas quelle ligne a \u00e9t\u00e9 r\u00e9solue et aurait tout \u00e0 r\u00e9soudre pour trouver la cl\u00e9, ce qui donne beaucoup plus de travail mais n'est pas impossible. Questions 5.Quelle est la cl\u00e9 publique de ce syst\u00e8me ? 6.En quoi, le puzzle de Merkle est \u00e0 la limite du chiffrement asym\u00e9trique. Protocole HTTPS \u2693\ufe0e Pour qu\u2019un message entre deux machines dans un r\u00e9seau informatique ne puisse pas \u00eatre compr\u00e9hensible s\u2019il est intercept\u00e9, il faut qu\u2019il soit chiffr\u00e9. Il y a deux mani\u00e8res principales pour le faire : - Par un chiffrement sym\u00e9trique qui utilise une cl\u00e9 unique, connue seulement de l\u2019\u00e9metteur et du r\u00e9cepteur. L\u2019\u00e9metteur chiffre le message avec la cl\u00e9 et le r\u00e9cepteur le d\u00e9chiffre avec la m\u00eame cl\u00e9. - Par un chiffrement asym\u00e9trique qui utilise un couple de cl\u00e9, l\u2019une publique connue de tout le monde, l\u2019autre priv\u00e9e connue uniquement par le r\u00e9cepteur. L\u2019\u00e9metteur chiffre le message avec la cl\u00e9 publique. Le r\u00e9cepteur le d\u00e9chiffre avec la cl\u00e9 priv\u00e9e. Ces deux m\u00e9thodes de chiffrement sont utilis\u00e9es lorsqu\u2019un navigateur demande une page web avec le protocole HTTPS. Dans le sch\u00e9ma ci-dessous, on a repr\u00e9sent\u00e9 les \u00e9changes de communications entre un client et un serveur avec le protocole HTTPS. Les \u00e9changes entre client et serveur se font avec un chiffrement sym\u00e9trique (cl\u00e9 K2) apr\u00e8s que celle-ci ait \u00e9t\u00e9 \u00e9chang\u00e9e avec un chiffrement asym\u00e9trique. Certificat \u2693\ufe0e Pour \u00e9viter le probl\u00e8me du \"Man in the middle\" qui pourrait intercepter les messages entre Bob et Alice, on peut utiliser le principe des certificats pour certifier que les cl\u00e9s publiques appartiennent bien \u00e0 la personne \u00e0 laquelle elle semble appartenir. Ce certificat est un fichier contenant la cl\u00e9 publique, des informations sur la personne et une signature num\u00e9rique que seule la personne \u00e0 qui appartient la cl\u00e9 publique peut cr\u00e9er car elle est chiffr\u00e9e \u00e0 l'aide de la cl\u00e9 priv\u00e9e. Questions 7.Faites quelques recherches pour r\u00e9sumer en quelques phases (\u00e9ventuellement avec un sch\u00e9ma) le principe du \"Man in the middle\". 8.Dans quels cas utilise-t-on les certificats ? Compl\u00e9ments","title":"S\u00e9curisation des communications"},{"location":"archi/crypto.html#comment-crypter-ses-donnees","text":"Comment faire en sorte que deux personnes (Alice et Bob) s'\u00e9changent des informations sans que Eve puisse les lire. On ne peut pas l'emp\u00eacher d'intercepter le message mais si les donn\u00e9es sont crypt\u00e9es, elles seront inexploitables.","title":"Comment crypter ses donn\u00e9es?"},{"location":"archi/crypto.html#chiffrement-symetrique","text":"La cryptographie sym\u00e9trique, \u00e9galement dite \u00e0 cl\u00e9 secr\u00e8te (par opposition \u00e0 la cryptographie asym\u00e9trique), est la plus ancienne forme de chiffrement. Elle permet \u00e0 la fois de chiffrer et de d\u00e9chiffrer des messages \u00e0 l'aide d'un m\u00eame mot cl\u00e9. On a des traces de son utilisation par les \u00c9gyptiens vers 2000 av. J.-C. (wikipedia) Alice envoie des donn\u00e9es chiffr\u00e9es \u00e0 Bob en utilisant une cl\u00e9 de chiffrement secr\u00e8te. Cette cl\u00e9 s\u00e9cr\u00e8te est la m\u00eame que celle utilis\u00e9e par Bob pour d\u00e9chiffrer le message. Il est donc n\u00e9cessaire de se mettre d'accord sur la cl\u00e9 avant transmission des donn\u00e9es.","title":"Chiffrement sym\u00e9trique"},{"location":"archi/crypto.html#exemple-1-chiffremet-par-substitution","text":"On remplace une lettre par une autre de l'alphabet (mais pas dans l'ordre), on a donc 26! \u2248 4\u00d710 26 cl\u00e9s possibles. Avec la cl\u00e9 suivante : ABCDEFGHIJKLMNOPQRSTUVWXYZ alphabet AZERTYUIOPQSDFGHJKLMWXCVBN cl\u00e9 de substitution. le message SUBSTITUTION devient LWZLMOMWMOGF","title":"Exemple 1 : chiffremet par substitution"},{"location":"archi/crypto.html#exemple-2-chiffrement-de-verman-ou-chiffrement-xor","text":"Il s'agit d'un syst\u00e8me parfaitement s\u00fbr, le math\u00e9maticien C.Shannon a montr\u00e9 que si on respecte bien les 3 r\u00e8gles de Verman, ce syst\u00e8me est inviolable. La cl\u00e9 doit \u00eatre une suite de caract\u00e8res au moins aussi longue que le message \u00e0 chiffrer. Les caract\u00e8res composant la cl\u00e9 doivent \u00eatre choisis de fa\u00e7on totalement al\u00e9atoire. Chaque cl\u00e9, ou \u00ab masque \u00bb, ne doit \u00eatre utilis\u00e9e qu'une seule fois (d'o\u00f9 le nom de masque jetable). Une m\u00e9thode particuli\u00e8rement efficace pour traiter le chiffrement et le d\u00e9chiffrement de messages \u00e0 partir de la cl\u00e9 est d'utiliser la fonction logique XOR, le ou exclusif qui a une particularit\u00e9 tr\u00e8s int\u00e9ressante dans notre cas. Principe : On choisit une cl\u00e9 (ici 'toto') que l'on traduit en binaire (01110100011011110111010001101111) On choisit un message \u00e0 coder : 'Bonjour' que l'on traduit en binaire (01000010011011110110111001101010011011110111010101110010) On applique la fonction XOR bit \u00e0 bit entre le message et la cl\u00e9 qu'il faudra reproduire pour avoir le m\u00eame nombre de bits. 01000010011011110110111001101010011011110111010101110010 \u2295 01110100011011110111010001101111011101000110111101110100 00110110000000000001101000000101000110110001101000000110 C=M\u2295S o\u00f9 M est le message et S la cl\u00e9. Pour d\u00e9chiffrer, on fait l'op\u00e9ration inverse : (M\u2295S)\u2295S=M Questions 1.Dans quel domaine pouvait-on utiliser la cryptographie dans l'antiquit\u00e9 ? 2.Quel peut \u00eatre le risque dans le cas d'une interception de communication si on utilise le chiffrement sym\u00e9trique ? Si Eve intercepte tous les messages elle peut aussi intercepter la cl\u00e9 qui est forc\u00e9ment transmise en clair. 3.Dans le cas des deux syst\u00e8mes propos\u00e9s, quel est la cl\u00e9 secr\u00e8te ? 4.Coder votre pr\u00e9nom gr\u00e2ce au code de Verman avec comme cl\u00e9 'nsi'. un peu plus rapide","title":"Exemple 2: Chiffrement de Verman (ou chiffrement XOR)"},{"location":"archi/crypto.html#chiffrement-asymetrique","text":"Le principe du chiffrement asym\u00e9trique c'est que la cl\u00e9 de chiffrement n'est pas la m\u00eame que la cl\u00e9 de d\u00e9chiffrement. La personne qui crypte le message et l'envoie, ne connait pas la cl\u00e9 de d\u00e9chiffrement. Elle fut invent\u00e9e par Whitfield Diffie et Martin Hellman en 1976, qui re\u00e7urent le prix Turing de 2015 pour cette d\u00e9couverte. En cryptographie asym\u00e9trique on a 2 cl\u00e9s: la cl\u00e9 publique : Celle-ci, tout le monde peut la poss\u00e9der, il n'y a aucun risque, vous pouvez la transmettre \u00e0 n'importe qui. Elle sert \u00e0 chiffrer le message. la cl\u00e9 priv\u00e9e : que seul le r\u00e9cepteur poss\u00e8de, en l'occurrence vous. Elle servira \u00e0 d\u00e9chiffrer le message chiffr\u00e9 avec la cl\u00e9 publique. On peut simplifier la situtation en utilisant l'analogie du cadenas. Alice envoie un coffre \u00e0 Bob avec un cadenas ouvert. Bob y range son message et ferme le cadenas (il ne poss\u00e8de pas la cl\u00e9). Il envoie le tout \u00e0 Alice qui est la seule \u00e0 pouvoir l'ouvrir.","title":"Chiffrement asym\u00e9trique"},{"location":"archi/crypto.html#exemple-puzzle-de-merkle","text":"Alice cr\u00e9e un fichier contenant un grand nombre de lignes (par exemple 100 000) du type : 1 2 3 4 5 \u2026 Identifiant : 129378 , cl\u00e9 : abAZda9h ! snasjda Identifiant : 821012 , cl\u00e9 : sladljl32 #QSdsal Identifiant : 321091 , cl\u00e9 : 9 Sakns281alSA @ 31 \u2026 Elle va ensuite chiffrer chaque ligne avec un algorithme de chiffrement sym\u00e9trique et une cl\u00e9 de faible longueur, diff\u00e9rente pour chaque ligne, de fa\u00e7on \u00e0 \u00eatre facilement d\u00e9crypt\u00e9e par une attaque de force brute. Alice envoie le fichier contenant les lignes \u00e0 Bob qui choisit une ligne au hasard et la d\u00e9crypte par force brute. Il envoie ensuite son identifiant (en clair) \u00e0 Alice accompagn\u00e9 du message crypt\u00e9 gr\u00e2ce \u00e0 la cl\u00e9 appel\u00e9 cl\u00e9 de session (valable pour toute la session de communication). Alice n'a plus qu'\u00e0 regarder dans son fichier quelle cl\u00e9 elle doit utiliser pour d\u00e9crypter le message. Une personne qui intercepterait la communication ne saurait pas quelle ligne a \u00e9t\u00e9 r\u00e9solue et aurait tout \u00e0 r\u00e9soudre pour trouver la cl\u00e9, ce qui donne beaucoup plus de travail mais n'est pas impossible. Questions 5.Quelle est la cl\u00e9 publique de ce syst\u00e8me ? 6.En quoi, le puzzle de Merkle est \u00e0 la limite du chiffrement asym\u00e9trique.","title":"Exemple : Puzzle de Merkle"},{"location":"archi/crypto.html#protocole-https","text":"Pour qu\u2019un message entre deux machines dans un r\u00e9seau informatique ne puisse pas \u00eatre compr\u00e9hensible s\u2019il est intercept\u00e9, il faut qu\u2019il soit chiffr\u00e9. Il y a deux mani\u00e8res principales pour le faire : - Par un chiffrement sym\u00e9trique qui utilise une cl\u00e9 unique, connue seulement de l\u2019\u00e9metteur et du r\u00e9cepteur. L\u2019\u00e9metteur chiffre le message avec la cl\u00e9 et le r\u00e9cepteur le d\u00e9chiffre avec la m\u00eame cl\u00e9. - Par un chiffrement asym\u00e9trique qui utilise un couple de cl\u00e9, l\u2019une publique connue de tout le monde, l\u2019autre priv\u00e9e connue uniquement par le r\u00e9cepteur. L\u2019\u00e9metteur chiffre le message avec la cl\u00e9 publique. Le r\u00e9cepteur le d\u00e9chiffre avec la cl\u00e9 priv\u00e9e. Ces deux m\u00e9thodes de chiffrement sont utilis\u00e9es lorsqu\u2019un navigateur demande une page web avec le protocole HTTPS. Dans le sch\u00e9ma ci-dessous, on a repr\u00e9sent\u00e9 les \u00e9changes de communications entre un client et un serveur avec le protocole HTTPS. Les \u00e9changes entre client et serveur se font avec un chiffrement sym\u00e9trique (cl\u00e9 K2) apr\u00e8s que celle-ci ait \u00e9t\u00e9 \u00e9chang\u00e9e avec un chiffrement asym\u00e9trique.","title":"Protocole HTTPS"},{"location":"archi/crypto.html#certificat","text":"Pour \u00e9viter le probl\u00e8me du \"Man in the middle\" qui pourrait intercepter les messages entre Bob et Alice, on peut utiliser le principe des certificats pour certifier que les cl\u00e9s publiques appartiennent bien \u00e0 la personne \u00e0 laquelle elle semble appartenir. Ce certificat est un fichier contenant la cl\u00e9 publique, des informations sur la personne et une signature num\u00e9rique que seule la personne \u00e0 qui appartient la cl\u00e9 publique peut cr\u00e9er car elle est chiffr\u00e9e \u00e0 l'aide de la cl\u00e9 priv\u00e9e. Questions 7.Faites quelques recherches pour r\u00e9sumer en quelques phases (\u00e9ventuellement avec un sch\u00e9ma) le principe du \"Man in the middle\". 8.Dans quels cas utilise-t-on les certificats ? Compl\u00e9ments","title":"Certificat"},{"location":"archi/enigma.html","text":"Et si on codait Enigma? \u2693\ufe0e Qu\u2019est-ce que Enigma ? \u2693\ufe0e Enigma a \u00e9t\u00e9 invent\u00e9e et utilis\u00e9e par les NAZIS lors de la deuxi\u00e8me guerre mondiale pour transmettre des messages aux troupes sans que personne ne puisse les comprendre. La machine permettait de crypter les messages en utilisant une cl\u00e9 qui changeait chaque jour. Le d\u00e9cryptage se faisait par la m\u00eame machine \u00e0 condition qu\u2019elle soit configur\u00e9e de la m\u00eame fa\u00e7on. Comment fonctionne-t-elle ? \u2693\ufe0e Un clavier permettait \u00e0 l\u2019utilisateur de saisir une lettre, qui en passant dans un r\u00e9seau de c\u00e2blage pouvait \u00eatre modifi\u00e9e. Chaque jour 6 paires de lettres \u00e9taient invers\u00e9e (soit 12 lettres modifi\u00e9es) mais pas les autres. Ensuite, le signal \u00e9lectrique passait dans un premier rotor qui modifiait la lettre \u00e0 l\u2019aide d\u2019une connexion \u00e9lectrique. Le signal passe ensuite dans deux autres rotors qui modifient chacun la lettre, puis dans un r\u00e9flecteur, qui en plus de modifier la lettre renvoie le signal dans les rotors en sens inverse. La lettre de d\u00e9part est alors modifi\u00e9e 9 fois. La lettre en sortie s\u2019allume sur un panneau lumineux. La fr\u00e9quence d\u2019apparition des lettres dans une langue pourrait permettre de trouver rapidement la lettre de remplacement, c\u2019est pourquoi la machine permettait de ne pas coder deux fois la m\u00eame lettre de la m\u00eame fa\u00e7on. Pour cela, \u00e0 chaque appui sur le clavier, le premier rotor tourne d\u2019un cran. Quand il a fait un tour, le second rotor tourne d\u2019un cran. Quels sont les r\u00e9glages ? \u2693\ufe0e Les rotors contiennent les lettres de l\u2019alphabet dans le d\u00e9sordre et sont tous diff\u00e9rents. Les r\u00e9glages n\u00e9cessitent de choisir 3 rotors parmi 5, d\u2019en d\u00e9terminer l\u2019ordre et le r\u00e9glage de d\u00e9part, c\u2019est-\u00e0-dire la lettre qui correspondra au \u00ab A \u00bb lors de la premi\u00e8re frappe. On fait de m\u00eame en s\u00e9lectionnant un r\u00e9flecteur parmi deux. Ici le positionnement sera fixe. Le dernier r\u00e9glage consiste \u00e0 choisir 6 paires de lettres dans l\u2019alphabet et de les inverser par c\u00e2blage \u00e9lectrique. Comment d\u00e9crypter ? Si le r\u00e9glage initial est le m\u00eame il suffit de saisir au clavier la lettre \u00e0 d\u00e9coder et sur le panneau lumineux s\u2019affiche la lettre en clair. Comment a \u00e9t\u00e9 craqu\u00e9 Enigma ? \u2693\ufe0e Un petit tour par ici Qu\u2019allons nous faire ? \u2693\ufe0e Nous allons cr\u00e9er un programme permettant de configurer la machine avec des r\u00e9glages donn\u00e9s et crypter et d\u00e9crypter des messages. Nous allons simplifier l\u2019utilisation en n\u2019utilisant que les 26 lettres en majuscules de l\u2019alphabet. Pas de minuscules, pas d\u2019espaces et pas de caract\u00e8res sp\u00e9ciaux. Nous n\u2019utiliserons que 3 rotors, mais les derni\u00e8res versions en utilisaient davantage. Mise en place du probl\u00e8me \u2693\ufe0e Le principe de base \u2693\ufe0e Nous allons prendre un exmple avec le sch\u00e9ma ci-dessous : La lettre A en passant par le rotor III devient B. Le B devient K en passant par le rotor I et le D devient S en passant par le rotor V. A ce stade, la lettre a d\u00e9j\u00e0 chang\u00e9 3 fois et on en est m\u00eame pas \u00e0 la moiti\u00e9. En passant par le r\u00e9flecteur, le S devient X et on repart dans le rotor V. Attention, ici le raisonnement se fait dans l'autre sens. En repassant par le rotor V, la lettre X se transforme en P. Il faut chercher X dans la liste du rotor V et voir \u00e0 quelle lettre de l'alphabet \u00e0 coder cela correspond. En cherchant P dans le rotor I, on voit qu'il devient T et T devient J dans le rotor III. La lettre A est alors cod\u00e9e en J. Une fois la premi\u00e8re lettre cod\u00e9e, le premier rotor (le III) tourne d'un cran : Si on cherche \u00e0 recoder la lettre 'A' on trouve alors un 'V'. A va devenir D dans le premier rotor puis D deviendra F en passant par le second rotor, F devient I dans le troisi\u00e8me rotor puis V dans le r\u00e9flecteur. V va devenir A, A deviendra U et U deviendra V. D\u00e9cryptage du message \u2693\ufe0e Le g\u00e9nie de cette machine r\u00e9side dans la simplificit\u00e9 d'utilisation. En effet, si les r\u00e9glages sont identiques le d\u00e9cryptage du message se fait de la m\u00eame fa\u00e7on que le cryptage. Ainsi, quelqu'un qui re\u00e7oit les lettres 'JV' en les entrant dans la machine doit pouvoir lire le message en clair de d\u00e9part \u00e0 savoir 'AA'. Faites le test En utilisant le tableau donn\u00e9, v\u00e9rifier le d\u00e9crryptage. C\u00e2blages \u2693\ufe0e Pour augmenter le brouillage, avant m\u00eame de rentrer dans les rotors, 6 paires de lettres \u00e9taient invers\u00e9es. Le principe est le m\u00eame que le cryptage pr\u00e9c\u00e9dent mais avant m\u00eame de passer par les rotors, certaines lettre sont transform\u00e9es en une autre. Dans l'exemple ci-dessous vous pouvez voir que pour A cela ne change rien puisqu'elle ne fait pas partie des lettres invers\u00e9es. avec le cabl\u00e2ge A l'aide du nouveau tableau contenant le cabl\u00e2ge, essayer de crypter deux fois de suite la lettre C. Impl\u00e9mentation des rotors et des r\u00e9flecteurs \u2693\ufe0e Les rotors que nous utiliserons seront ceux d'origine. Pour cela nous aurons une variable globale rotors qui sera un tuple contenant les cha\u00eenes de 26 caract\u00e8res, dans l'ordre dans lequel elles apparaissaient sur les rotors d'Enigma. M\u00eame chose pour les r\u00e9flecteurs. Voici les variables globales utilis\u00e9es dans le programme : 1 2 3 4 5 6 7 alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' rotors = ( 'EKMFLGDQVZNTOWYHXUSPAIBRCJ' , 'AJDKSIRUXBLHWTMCQGZNPYFVOE' , 'BDFHJLCPRTXVZNYEIWGAKMUSQO' , 'ESOVPZJAYQUIRHXLNFTGKDCMWB' , 'VZBRGITYUPSDNHLXAWMJQOFECK' ) REFLECTEURS = ( 'YRUHQSLDPXNGOKMIEBFZCWVJAT' , 'RDOBJNTKVEHMLFCWZAXGYIPSUQ' ) Choix du niveau du projet \u2693\ufe0e Vous allez pouvoir choisir le niveau du projet que vous allez traiter. Le but est de rendre un programme qui crypte les messages \u00e0 la mani\u00e8re d'Enigma m\u00eame si toutes les particularit\u00e9s de la machine ne sont pas respect\u00e9es. Bien s\u00fbr plus le niveau choisi sera \u00e9lev\u00e9 plus la note sera \u00e9lev\u00e9e mais la note sera meilleure avec un projet de niveau 2 qui fonctionne qu'avec un projet de niveau trois qui ne fonctionne pas. Il sera plus facile de passer en cours de route d'un niveau plus faible \u00e0 un niveau plus \u00e9lev\u00e9 que l'inverse. Niveau 1 : Pas de rotation des rotors et pas de c\u00e2blage (note maximale 12/20 avec le Bonus) Niveau 2 : Rotation des rotors mais pas de c\u00e2blage (note maximale 16/20) Niveau 3 : Programmation compl\u00e8te avec rotation des rotors et cabl\u00e2ge (note maximale 20/20) Bonus : On pourra pr\u00e9voir de faire entrer les valeurs de r\u00e9galges par l'utilisateur et de g\u00e9rer les entr\u00e9es \u00e9ronn\u00e9es avec des blocs try ... except... . Impl\u00e9mentation de la machine \u2693\ufe0e On cr\u00e9era une classe enigma qui cr\u00e9era une machine avec les r\u00e9glages donn\u00e9s par votre Furher. Cette classe permettra de calculer la lettre sortant d'un rotor, des cabl\u00e2ges et du reflecteur et fera tourner les rotors apr\u00e8s avoir crypter une lettre. Cette classe prendra en param\u00e8tres les trois rotors choisis par le Furher dans l'ordre, les r\u00e9glages initiaux de chacun des trois rotors, le choix du r\u00e9flecteur et dans le cas du niveau 3, la liste de lettres \u00e0 inverser par c\u00e2blage. Niveau 1 et 2 : La cr\u00e9ation de l'objet machine de la classe enigma doit se faire de cette fa\u00e7on: 1 2 machine = enigma ( premier_rotor , deuxieme_rotor , troisieme_rotor , reglage_premier_rotor , reglage_deuxieme_rotor , reglage_troisieme_rotor , choix_reflecteur ) Type des param\u00e8tres premier_rotor , deuxieme_rotor , troisieme_rotor et choix_reflecteur sont des cha\u00eenes de 26 caract\u00e8res contenant les lettres du rotor. Il faudra utiliser la variable globale rotors pour les r\u00e9cup\u00e9rer. reglage_premier_rotor , reglage_deuxieme_rotor et reglage_troisieme_rotor sont des cha\u00eenes de 1 caract\u00e8re. il s'agit de la lettre apparaissant en premier. Niveau 3 : La cr\u00e9ation de l'objet machine de la classe enigma doit se faire de cette fa\u00e7on: 1 2 machine = enigma ( premier_rotor , deuxieme_rotor , troisieme_rotor , reglage_premier_rotor , reglage_deuxieme_rotor , reglage_troisieme_rotor , choix_reflecteur , suite_cablage ) Type des param\u00e8tres premier_rotor , deuxieme_rotor , troisieme_rotor et choix_reflecteur sont des cha\u00eenes de 26 caract\u00e8res contenant les lettres du rotor. Il faudra utiliser la variable globale rotors pour les r\u00e9cup\u00e9rer. reglage_premier_rotor , reglage_deuxieme_rotor , reglage_troisieme_rotor et reglage_reflecteur sont des cha\u00eenes de 1 caract\u00e8re. il s'agit de la lettre apparaissant en premier. suite_cablage est une cha\u00eene de 6 caract\u00e8res \u00e0 inverser. Fonctions \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 class enigma : def __init__ ( self , ... ): '''initilisation de la classe en utilisant les param\u00e8tres donn\u00e9s dans le d\u00e9tail du projet''' def inversion ( self ): #niveau 3 uniquement '''cette fonction renvoi les lettre de l'alphabet dont l'ordre est modifi\u00e9 par la chaine de cablage. avec un cablage ='ABCDEFGHIJKL' la fonction doit renvoyer 'BADCFEHGJILKMNOPQRSTUVWXYZ''' ' def positionner_rotors ( self ): #tous les niveaux '''cette fonction ne retourne aucune valeur mais modifie les chaines de caracteres repr\u00e9sentant les rotors. par exemple un rotor 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' avec un r\u00e9glage de 'L' devrait etre modifi\u00e9 par la fonction en 'LMNOPQRSTUVWXYZABCDEFGHIJK' ''' def configuration ( self ): #tous les niveaux '''cette fonction ne renvoie rien mais execute la configuration de la machine, \u00e0 savoir la modification du cablage de l'alphabet, le positionnement des rotors et m\u00e9morise dans de nouveaux attribut la derniere lettre de chaque rotor avec que lors de la rotation on puisse savoir si on est \u00e0 la fin du tour''' def tourner_rotor ( self , rotor ): #niveaux 2 et 3 '''cette fonction renvoie le rotor une fois sa position modifi\u00e9e de un cran''' def rotation_rotors ( self ): #niveaux 2 et 3 '''cette fonction programme la rotation des rotors. Elle ne renvoie rien mais permet la rotation de un cran en tenant compte du fait que lorsque le premier a fait un tour le deuxieme tourne d'un cran et ainsi de suite. On modifie les attributs li\u00e9s au rotor en appliquant la fonction de rotation et on v\u00e9rifie si on a atteint la fin du tour avec les attributs li\u00e9 \u00e0 la lettre de fin cr\u00e9\u00e9 dans la fonction de configuration''' def passage_rotor ( self , lettre , rotor ): #tous niveaux '''prend en param\u00e8tre une lettre et un rotor dans une certaine position et renvoie la lettre transform\u00e9e par le passage dans le rotor''' def passage_inverse_rotor ( self , lettre , rotor ): #tous niveaux '''Prend en param\u00e8tre une lettre et un rotor dans une certaine position et renvoie la lettre transform\u00e9e par le passage en SENS INVERSE dans le rotor''' def passage_reflecteur ( self , lettre ): #tous niveaux '''Prend en param\u00e8tre une lettre et renvoie la lettre transform\u00e9e par le reflecteur''' def passage_cablage ( self , lettre ): #niveau 3 '''Prend en param\u00e8tre une lettre et renvoie la lettre transform\u00e9e par le cablage''' def passage_cablage_inverse ( self , lettre ): #niveau 3 '''Prend en param\u00e8tre une lettre et renvoie la lettre transform\u00e9e par le passage en sens inverse par le c\u00e2blage ''' def crypter_lettre ( self , lettre ): #tous niveaux '''Prend en param\u00e8tre une lettre \u00e0 coder etrenvoie la lettre apr\u00e8s avoir subi toute les \u00e9tapes de traitement cablage, 3 rotors, reflecteur, 3 rotors en sens inverse''' ... return lettre #niveau 2 et 3 vous penserez \u00e0 caser quelque part la rotation des rotors mais je vous laisse r\u00e9fl\u00e9chir \u00e0 l'endroit class message : '''cette classe va prendre en argument un message et une instance de la classe enigma pour traiter le message''' def __init__ ( self , message , machine ): '''initialisation de la classe''' def crypter ( self ): '''cette fonction va appliquer les reglages de la machine cr\u00e9\u00e9e par la classe Enigma \u00e0 une chaine de caracteres correspondant au message. Chaque lettre du message devra \u00eatre crypt\u00e9e''' ... return msg_crypte ####### programme principal ############## alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' rotors = ( 'EKMFLGDQVZNTOWYHXUSPAIBRCJ' , 'AJDKSIRUXBLHWTMCQGZNPYFVOE' , 'BDFHJLCPRTXVZNYEIWGAKMUSQO' , 'ESOVPZJAYQUIRHXLNFTGKDCMWB' , 'VZBRGITYUPSDNHLXAWMJQOFECK' ) REFLECTEURS = ( 'YRUHQSLDPXNGOKMIEBFZCWVJAT' , 'RDOBJNTKVEHMLFCWZAXGYIPSUQ' ) ##choix des r\u00e9glages #choix des rotors das l'ordre que l'on veut parmi les 5 premier_rotor =... deuxieme_rotor =... troisieme_rotor =... #choix du r\u00e9flecteur entre le premier et le deuxieme choix_reflecteur =... #choix de la lettre plac\u00e9e en premiere position pour chaque rotor reglage_premier_rotor =... reglage_deuxieme_rotor =... reglage_troisieme_rotor =... #niveaux 1 et 2 machine = enigma ( premier_rotor , deuxieme_rotor , troisieme_rotor , reglage_premier_rotor , reglage_deuxieme_rotor , reglage_troisieme_rotor , choix_reflecteur ) machine . configuration () #niveau 3 #suite de lettres \u00e0 inverser deux \u00e0 deux (on inverse la premiere et la deuxieme, la troisieme et la quatri\u00e8me ... suite_cablage =... machine = enigma ( premier_rotor , deuxieme_rotor , troisieme_rotor , reglage_premier_rotor , reglage_deuxieme_rotor , reglage_troisieme_rotor , choix_reflecteur , suite_cablage ) machine . configuration () #vous completerez le programe de fa\u00e7on \u00e0 afficher un message crypt\u00e9 et \u00e0 tester son #d\u00e9cryptage msg = message ( ... ) D\u00e9crypter ceci Pour tester votre machine votre Furher vous demande d'utiliser les r\u00e9glages suivants : rotors dans l'ordre, IV (r\u00e9glage D), II (r\u00e9glage A) et III (r\u00e9glage C) r\u00e9lecteur A et c\u00e2blage 'ENIGMATURING'. D\u00e9crypter le message Niveau 1 : XITDETNCISCDTYERRI. Niveau 2 : XQAXREIANLYOWWANWV. Niveau 3 : : SFLSXGGNNQPLUJDYZF.","title":"Et si on codait Enigma?"},{"location":"archi/enigma.html#et-si-on-codait-enigma","text":"","title":"Et si on codait Enigma?"},{"location":"archi/enigma.html#quest-ce-que-enigma","text":"Enigma a \u00e9t\u00e9 invent\u00e9e et utilis\u00e9e par les NAZIS lors de la deuxi\u00e8me guerre mondiale pour transmettre des messages aux troupes sans que personne ne puisse les comprendre. La machine permettait de crypter les messages en utilisant une cl\u00e9 qui changeait chaque jour. Le d\u00e9cryptage se faisait par la m\u00eame machine \u00e0 condition qu\u2019elle soit configur\u00e9e de la m\u00eame fa\u00e7on.","title":"Qu\u2019est-ce que Enigma ?"},{"location":"archi/enigma.html#comment-fonctionne-t-elle","text":"Un clavier permettait \u00e0 l\u2019utilisateur de saisir une lettre, qui en passant dans un r\u00e9seau de c\u00e2blage pouvait \u00eatre modifi\u00e9e. Chaque jour 6 paires de lettres \u00e9taient invers\u00e9e (soit 12 lettres modifi\u00e9es) mais pas les autres. Ensuite, le signal \u00e9lectrique passait dans un premier rotor qui modifiait la lettre \u00e0 l\u2019aide d\u2019une connexion \u00e9lectrique. Le signal passe ensuite dans deux autres rotors qui modifient chacun la lettre, puis dans un r\u00e9flecteur, qui en plus de modifier la lettre renvoie le signal dans les rotors en sens inverse. La lettre de d\u00e9part est alors modifi\u00e9e 9 fois. La lettre en sortie s\u2019allume sur un panneau lumineux. La fr\u00e9quence d\u2019apparition des lettres dans une langue pourrait permettre de trouver rapidement la lettre de remplacement, c\u2019est pourquoi la machine permettait de ne pas coder deux fois la m\u00eame lettre de la m\u00eame fa\u00e7on. Pour cela, \u00e0 chaque appui sur le clavier, le premier rotor tourne d\u2019un cran. Quand il a fait un tour, le second rotor tourne d\u2019un cran.","title":"Comment fonctionne-t-elle ?"},{"location":"archi/enigma.html#quels-sont-les-reglages","text":"Les rotors contiennent les lettres de l\u2019alphabet dans le d\u00e9sordre et sont tous diff\u00e9rents. Les r\u00e9glages n\u00e9cessitent de choisir 3 rotors parmi 5, d\u2019en d\u00e9terminer l\u2019ordre et le r\u00e9glage de d\u00e9part, c\u2019est-\u00e0-dire la lettre qui correspondra au \u00ab A \u00bb lors de la premi\u00e8re frappe. On fait de m\u00eame en s\u00e9lectionnant un r\u00e9flecteur parmi deux. Ici le positionnement sera fixe. Le dernier r\u00e9glage consiste \u00e0 choisir 6 paires de lettres dans l\u2019alphabet et de les inverser par c\u00e2blage \u00e9lectrique. Comment d\u00e9crypter ? Si le r\u00e9glage initial est le m\u00eame il suffit de saisir au clavier la lettre \u00e0 d\u00e9coder et sur le panneau lumineux s\u2019affiche la lettre en clair.","title":"Quels sont les r\u00e9glages ?"},{"location":"archi/enigma.html#comment-a-ete-craque-enigma","text":"Un petit tour par ici","title":"Comment a \u00e9t\u00e9 craqu\u00e9 Enigma ?"},{"location":"archi/enigma.html#quallons-nous-faire","text":"Nous allons cr\u00e9er un programme permettant de configurer la machine avec des r\u00e9glages donn\u00e9s et crypter et d\u00e9crypter des messages. Nous allons simplifier l\u2019utilisation en n\u2019utilisant que les 26 lettres en majuscules de l\u2019alphabet. Pas de minuscules, pas d\u2019espaces et pas de caract\u00e8res sp\u00e9ciaux. Nous n\u2019utiliserons que 3 rotors, mais les derni\u00e8res versions en utilisaient davantage.","title":"Qu\u2019allons nous faire ?"},{"location":"archi/enigma.html#mise-en-place-du-probleme","text":"","title":"Mise en place du probl\u00e8me"},{"location":"archi/enigma.html#le-principe-de-base","text":"Nous allons prendre un exmple avec le sch\u00e9ma ci-dessous : La lettre A en passant par le rotor III devient B. Le B devient K en passant par le rotor I et le D devient S en passant par le rotor V. A ce stade, la lettre a d\u00e9j\u00e0 chang\u00e9 3 fois et on en est m\u00eame pas \u00e0 la moiti\u00e9. En passant par le r\u00e9flecteur, le S devient X et on repart dans le rotor V. Attention, ici le raisonnement se fait dans l'autre sens. En repassant par le rotor V, la lettre X se transforme en P. Il faut chercher X dans la liste du rotor V et voir \u00e0 quelle lettre de l'alphabet \u00e0 coder cela correspond. En cherchant P dans le rotor I, on voit qu'il devient T et T devient J dans le rotor III. La lettre A est alors cod\u00e9e en J. Une fois la premi\u00e8re lettre cod\u00e9e, le premier rotor (le III) tourne d'un cran : Si on cherche \u00e0 recoder la lettre 'A' on trouve alors un 'V'. A va devenir D dans le premier rotor puis D deviendra F en passant par le second rotor, F devient I dans le troisi\u00e8me rotor puis V dans le r\u00e9flecteur. V va devenir A, A deviendra U et U deviendra V.","title":"Le principe de base"},{"location":"archi/enigma.html#decryptage-du-message","text":"Le g\u00e9nie de cette machine r\u00e9side dans la simplificit\u00e9 d'utilisation. En effet, si les r\u00e9glages sont identiques le d\u00e9cryptage du message se fait de la m\u00eame fa\u00e7on que le cryptage. Ainsi, quelqu'un qui re\u00e7oit les lettres 'JV' en les entrant dans la machine doit pouvoir lire le message en clair de d\u00e9part \u00e0 savoir 'AA'. Faites le test En utilisant le tableau donn\u00e9, v\u00e9rifier le d\u00e9crryptage.","title":"D\u00e9cryptage du message"},{"location":"archi/enigma.html#cablages","text":"Pour augmenter le brouillage, avant m\u00eame de rentrer dans les rotors, 6 paires de lettres \u00e9taient invers\u00e9es. Le principe est le m\u00eame que le cryptage pr\u00e9c\u00e9dent mais avant m\u00eame de passer par les rotors, certaines lettre sont transform\u00e9es en une autre. Dans l'exemple ci-dessous vous pouvez voir que pour A cela ne change rien puisqu'elle ne fait pas partie des lettres invers\u00e9es. avec le cabl\u00e2ge A l'aide du nouveau tableau contenant le cabl\u00e2ge, essayer de crypter deux fois de suite la lettre C.","title":"C\u00e2blages"},{"location":"archi/enigma.html#implementation-des-rotors-et-des-reflecteurs","text":"Les rotors que nous utiliserons seront ceux d'origine. Pour cela nous aurons une variable globale rotors qui sera un tuple contenant les cha\u00eenes de 26 caract\u00e8res, dans l'ordre dans lequel elles apparaissaient sur les rotors d'Enigma. M\u00eame chose pour les r\u00e9flecteurs. Voici les variables globales utilis\u00e9es dans le programme : 1 2 3 4 5 6 7 alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' rotors = ( 'EKMFLGDQVZNTOWYHXUSPAIBRCJ' , 'AJDKSIRUXBLHWTMCQGZNPYFVOE' , 'BDFHJLCPRTXVZNYEIWGAKMUSQO' , 'ESOVPZJAYQUIRHXLNFTGKDCMWB' , 'VZBRGITYUPSDNHLXAWMJQOFECK' ) REFLECTEURS = ( 'YRUHQSLDPXNGOKMIEBFZCWVJAT' , 'RDOBJNTKVEHMLFCWZAXGYIPSUQ' )","title":"Impl\u00e9mentation des rotors et des r\u00e9flecteurs"},{"location":"archi/enigma.html#choix-du-niveau-du-projet","text":"Vous allez pouvoir choisir le niveau du projet que vous allez traiter. Le but est de rendre un programme qui crypte les messages \u00e0 la mani\u00e8re d'Enigma m\u00eame si toutes les particularit\u00e9s de la machine ne sont pas respect\u00e9es. Bien s\u00fbr plus le niveau choisi sera \u00e9lev\u00e9 plus la note sera \u00e9lev\u00e9e mais la note sera meilleure avec un projet de niveau 2 qui fonctionne qu'avec un projet de niveau trois qui ne fonctionne pas. Il sera plus facile de passer en cours de route d'un niveau plus faible \u00e0 un niveau plus \u00e9lev\u00e9 que l'inverse. Niveau 1 : Pas de rotation des rotors et pas de c\u00e2blage (note maximale 12/20 avec le Bonus) Niveau 2 : Rotation des rotors mais pas de c\u00e2blage (note maximale 16/20) Niveau 3 : Programmation compl\u00e8te avec rotation des rotors et cabl\u00e2ge (note maximale 20/20) Bonus : On pourra pr\u00e9voir de faire entrer les valeurs de r\u00e9galges par l'utilisateur et de g\u00e9rer les entr\u00e9es \u00e9ronn\u00e9es avec des blocs try ... except... .","title":"Choix du niveau du projet"},{"location":"archi/enigma.html#implementation-de-la-machine","text":"On cr\u00e9era une classe enigma qui cr\u00e9era une machine avec les r\u00e9glages donn\u00e9s par votre Furher. Cette classe permettra de calculer la lettre sortant d'un rotor, des cabl\u00e2ges et du reflecteur et fera tourner les rotors apr\u00e8s avoir crypter une lettre. Cette classe prendra en param\u00e8tres les trois rotors choisis par le Furher dans l'ordre, les r\u00e9glages initiaux de chacun des trois rotors, le choix du r\u00e9flecteur et dans le cas du niveau 3, la liste de lettres \u00e0 inverser par c\u00e2blage. Niveau 1 et 2 : La cr\u00e9ation de l'objet machine de la classe enigma doit se faire de cette fa\u00e7on: 1 2 machine = enigma ( premier_rotor , deuxieme_rotor , troisieme_rotor , reglage_premier_rotor , reglage_deuxieme_rotor , reglage_troisieme_rotor , choix_reflecteur ) Type des param\u00e8tres premier_rotor , deuxieme_rotor , troisieme_rotor et choix_reflecteur sont des cha\u00eenes de 26 caract\u00e8res contenant les lettres du rotor. Il faudra utiliser la variable globale rotors pour les r\u00e9cup\u00e9rer. reglage_premier_rotor , reglage_deuxieme_rotor et reglage_troisieme_rotor sont des cha\u00eenes de 1 caract\u00e8re. il s'agit de la lettre apparaissant en premier. Niveau 3 : La cr\u00e9ation de l'objet machine de la classe enigma doit se faire de cette fa\u00e7on: 1 2 machine = enigma ( premier_rotor , deuxieme_rotor , troisieme_rotor , reglage_premier_rotor , reglage_deuxieme_rotor , reglage_troisieme_rotor , choix_reflecteur , suite_cablage ) Type des param\u00e8tres premier_rotor , deuxieme_rotor , troisieme_rotor et choix_reflecteur sont des cha\u00eenes de 26 caract\u00e8res contenant les lettres du rotor. Il faudra utiliser la variable globale rotors pour les r\u00e9cup\u00e9rer. reglage_premier_rotor , reglage_deuxieme_rotor , reglage_troisieme_rotor et reglage_reflecteur sont des cha\u00eenes de 1 caract\u00e8re. il s'agit de la lettre apparaissant en premier. suite_cablage est une cha\u00eene de 6 caract\u00e8res \u00e0 inverser.","title":"Impl\u00e9mentation de la machine"},{"location":"archi/enigma.html#fonctions","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 class enigma : def __init__ ( self , ... ): '''initilisation de la classe en utilisant les param\u00e8tres donn\u00e9s dans le d\u00e9tail du projet''' def inversion ( self ): #niveau 3 uniquement '''cette fonction renvoi les lettre de l'alphabet dont l'ordre est modifi\u00e9 par la chaine de cablage. avec un cablage ='ABCDEFGHIJKL' la fonction doit renvoyer 'BADCFEHGJILKMNOPQRSTUVWXYZ''' ' def positionner_rotors ( self ): #tous les niveaux '''cette fonction ne retourne aucune valeur mais modifie les chaines de caracteres repr\u00e9sentant les rotors. par exemple un rotor 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' avec un r\u00e9glage de 'L' devrait etre modifi\u00e9 par la fonction en 'LMNOPQRSTUVWXYZABCDEFGHIJK' ''' def configuration ( self ): #tous les niveaux '''cette fonction ne renvoie rien mais execute la configuration de la machine, \u00e0 savoir la modification du cablage de l'alphabet, le positionnement des rotors et m\u00e9morise dans de nouveaux attribut la derniere lettre de chaque rotor avec que lors de la rotation on puisse savoir si on est \u00e0 la fin du tour''' def tourner_rotor ( self , rotor ): #niveaux 2 et 3 '''cette fonction renvoie le rotor une fois sa position modifi\u00e9e de un cran''' def rotation_rotors ( self ): #niveaux 2 et 3 '''cette fonction programme la rotation des rotors. Elle ne renvoie rien mais permet la rotation de un cran en tenant compte du fait que lorsque le premier a fait un tour le deuxieme tourne d'un cran et ainsi de suite. On modifie les attributs li\u00e9s au rotor en appliquant la fonction de rotation et on v\u00e9rifie si on a atteint la fin du tour avec les attributs li\u00e9 \u00e0 la lettre de fin cr\u00e9\u00e9 dans la fonction de configuration''' def passage_rotor ( self , lettre , rotor ): #tous niveaux '''prend en param\u00e8tre une lettre et un rotor dans une certaine position et renvoie la lettre transform\u00e9e par le passage dans le rotor''' def passage_inverse_rotor ( self , lettre , rotor ): #tous niveaux '''Prend en param\u00e8tre une lettre et un rotor dans une certaine position et renvoie la lettre transform\u00e9e par le passage en SENS INVERSE dans le rotor''' def passage_reflecteur ( self , lettre ): #tous niveaux '''Prend en param\u00e8tre une lettre et renvoie la lettre transform\u00e9e par le reflecteur''' def passage_cablage ( self , lettre ): #niveau 3 '''Prend en param\u00e8tre une lettre et renvoie la lettre transform\u00e9e par le cablage''' def passage_cablage_inverse ( self , lettre ): #niveau 3 '''Prend en param\u00e8tre une lettre et renvoie la lettre transform\u00e9e par le passage en sens inverse par le c\u00e2blage ''' def crypter_lettre ( self , lettre ): #tous niveaux '''Prend en param\u00e8tre une lettre \u00e0 coder etrenvoie la lettre apr\u00e8s avoir subi toute les \u00e9tapes de traitement cablage, 3 rotors, reflecteur, 3 rotors en sens inverse''' ... return lettre #niveau 2 et 3 vous penserez \u00e0 caser quelque part la rotation des rotors mais je vous laisse r\u00e9fl\u00e9chir \u00e0 l'endroit class message : '''cette classe va prendre en argument un message et une instance de la classe enigma pour traiter le message''' def __init__ ( self , message , machine ): '''initialisation de la classe''' def crypter ( self ): '''cette fonction va appliquer les reglages de la machine cr\u00e9\u00e9e par la classe Enigma \u00e0 une chaine de caracteres correspondant au message. Chaque lettre du message devra \u00eatre crypt\u00e9e''' ... return msg_crypte ####### programme principal ############## alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' rotors = ( 'EKMFLGDQVZNTOWYHXUSPAIBRCJ' , 'AJDKSIRUXBLHWTMCQGZNPYFVOE' , 'BDFHJLCPRTXVZNYEIWGAKMUSQO' , 'ESOVPZJAYQUIRHXLNFTGKDCMWB' , 'VZBRGITYUPSDNHLXAWMJQOFECK' ) REFLECTEURS = ( 'YRUHQSLDPXNGOKMIEBFZCWVJAT' , 'RDOBJNTKVEHMLFCWZAXGYIPSUQ' ) ##choix des r\u00e9glages #choix des rotors das l'ordre que l'on veut parmi les 5 premier_rotor =... deuxieme_rotor =... troisieme_rotor =... #choix du r\u00e9flecteur entre le premier et le deuxieme choix_reflecteur =... #choix de la lettre plac\u00e9e en premiere position pour chaque rotor reglage_premier_rotor =... reglage_deuxieme_rotor =... reglage_troisieme_rotor =... #niveaux 1 et 2 machine = enigma ( premier_rotor , deuxieme_rotor , troisieme_rotor , reglage_premier_rotor , reglage_deuxieme_rotor , reglage_troisieme_rotor , choix_reflecteur ) machine . configuration () #niveau 3 #suite de lettres \u00e0 inverser deux \u00e0 deux (on inverse la premiere et la deuxieme, la troisieme et la quatri\u00e8me ... suite_cablage =... machine = enigma ( premier_rotor , deuxieme_rotor , troisieme_rotor , reglage_premier_rotor , reglage_deuxieme_rotor , reglage_troisieme_rotor , choix_reflecteur , suite_cablage ) machine . configuration () #vous completerez le programe de fa\u00e7on \u00e0 afficher un message crypt\u00e9 et \u00e0 tester son #d\u00e9cryptage msg = message ( ... ) D\u00e9crypter ceci Pour tester votre machine votre Furher vous demande d'utiliser les r\u00e9glages suivants : rotors dans l'ordre, IV (r\u00e9glage D), II (r\u00e9glage A) et III (r\u00e9glage C) r\u00e9lecteur A et c\u00e2blage 'ENIGMATURING'. D\u00e9crypter le message Niveau 1 : XITDETNCISCDTYERRI. Niveau 2 : XQAXREIANLYOWWANWV. Niveau 3 : : SFLSXGGNNQPLUJDYZF.","title":"Fonctions"},{"location":"archi/processus.html","text":"Gestion des processus \u2693\ufe0e Qu'est-ce qu'un processus? \u2693\ufe0e Un programme \u00e9crit \u00e0 l'aide d'un langage de haut de niveau (on parle de \"code source\") est, comme nous l'avons vu l'ann\u00e9e derni\u00e8re, transform\u00e9 en langage machine afin de pouvoir \u00eatre ex\u00e9cut\u00e9 par un ordinateur. On appelle processus un programme en cours d'ex\u00e9cution. Attention Il ne faut pas confondre le code source du programme et un processus, qui lui correspond \u00e0 l'ex\u00e9cution de ce programme par un ordinateur. Pour prendre une image assez classique, si une recette de cuisine correspond au code source du programme, le cuisinier en train de pr\u00e9parer cette recette dans sa cuisine correspond \u00e0 un processus. Etats d'un processus \u2693\ufe0e Tous les syst\u00e8mes d'exploitation \"modernes\" (Linux, Windows, macOS, Android, iOS...) sont capables de g\u00e9rer l'ex\u00e9cution de plusieurs processus en m\u00eame temps. Mais pour \u00eatre pr\u00e9cis, cela n'est pas en v\u00e9ritable \"en m\u00eame temps\", mais plut\u00f4t un \"chacun son tour\". Pour g\u00e9rer ce \"chacun son tour\", les syst\u00e8mes d'exploitation attribuent des \"\u00e9tats\" au processus. Voici les diff\u00e9rents \u00e9tats : - Lors du d\u00e9marrage d'un programme ou de l'ouverture d'un nouvel onglet par exemple, un processus est cr\u00e9\u00e9, il estdans l'\u00e9tat nouveau . - Lorsqu'un processus est en train de s'ex\u00e9cuter (qu'il utilise le microprocesseur), on dit que le processus est dans l'\u00e9tat en ex\u00e9ution . - Un processus qui se trouve dans l'\u00e9tat en ex\u00e9ution peut demander \u00e0 acc\u00e9der \u00e0 une ressource pas forc\u00e9ment disponible instantan\u00e9ment (par exemple lire une donn\u00e9e sur le disque dur). Le processus ne peut pas poursuivre son ex\u00e9cution tant qu'il n'a pas obtenu cette ressource. En attendant de recevoir cette ressource, il passe de l'\u00e9tat \"en ex\u00e9ution\" \u00e0 l'\u00e9tat en attente . Lorsque le processus finit par obtenir la ressource attendue, celui-ci peut potentiellement reprendre son ex\u00e9cution. Mais comme nous l'avons vu ci-dessus, les syst\u00e8mes d'exploitation permettent de g\u00e9rer plusieurs processus \"en m\u00eame temps\", mais un seul processus peut se trouver dans un \u00e9tat \"en ex\u00e9ution\" (le microprocesseur ne peut \"s'occuper\" que d'un seul processus \u00e0 la fois). Quand un processus passe d'un \u00e9tat \"en ex\u00e9ution\" \u00e0 un \u00e9tat \"en attente\", un autre processus peut alors \"prendre sa place\" et passer dans l'\u00e9tat \"en ex\u00e9ution\". Le processus qui vient de recevoir la ressource attendue ne va donc pas forc\u00e9ment pouvoir reprendre son ex\u00e9cution tout de suite, car pendant qu'il \u00e9tait dans un \u00e9tat \"en attente\" un autre processus a \"pris sa place\". Un processus qui quitte l'\u00e9tat en attente ne repasse pas forc\u00e9ment \u00e0 l'\u00e9tat \"en ex\u00e9ution\", il peut, en attendant que \"la place se lib\u00e8re\" passer dans l'\u00e9tat pr\u00eat (sous entendu \"j'ai obtenu ce que j'attendais, je suis pr\u00eat \u00e0 reprendre mon ex\u00e9cution d\u00e8s que la \"place sera lib\u00e9r\u00e9e\"\"). une fois le processus termin\u00e9 il passe dans l'\u00e9tat arr\u00eat\u00e9 . Le passage de l'\u00e9tat \"pr\u00eat\" vers l'\u00e9tat \"en ex\u00e9ution\" constitue l'op\u00e9ration \"d'\u00e9lection\". Le passage de l'\u00e9tat en ex\u00e9ution vers l'\u00e9tat en attente est l'op\u00e9ration de \"blocage\". Un processus est toujours cr\u00e9\u00e9 dans l'\u00e9tat \"pr\u00eat\". Pour se terminer, un processus doit obligatoirement se trouver dans l'\u00e9tat \"en ex\u00e9ution\". Evolution des processus \u2693\ufe0e Dans un syst\u00e8me monot\u00e2che (processeur simple coeur pour simplifier) une seule t\u00e2che peut \u00eatre ex\u00e9cut\u00e9e \u00e0 la fois. Un exemple concret Etapes de mes recettes Imaginons que je doive pr\u00e9parer seule le repas comprenant des boulettes de viande en plat et un g\u00e2teau en dessert Je pourrai choisir de faire l'un d'abord et l'autre ensuite, mais il y aura des temps de latence qui me ferai perdre mon temps. Par exemple pendant que le beurre fond j'attends au lieu de faire autre chose. Voici les \u00e9tapes de la pr\u00e9paration de mes boulettes : \u00e9mincer l'oignon (n\u00e9cessite le mixeur) peler mes tomates (n\u00e9cessite le microonde) m\u00e9langer la viande, les tomates et l'oignon (n\u00e9cessite le mixeur) Fa\u00e7onner les boulettes (n\u00e9cessite mes mains) Cuire les boulettes (n\u00e9cessite le four) Et les \u00e9tapes de la pr\u00e9paration de mon gateau : M\u00e9langer les ingr\u00e9dients secs (mains) faire fondre le beurre (microonde) faire fondre le chocolat (microonde) m\u00e9langer le tout (mains) cuire (four) Certaines ressources vont devoir \u00eatre partag\u00e9es et certaines \u00e9tapes vont devoir attendre que la ressource se lib\u00e8re. Je ne ferai pas fondre le chocolat en meme temps que le beurre (mon microonde est extr\u00e8mement petit). Ordre de r\u00e9alisation Je vais donc choisir de faire les choses dans cet ordre : \u00e9mincer l'oignon (n\u00e9cessite le mixeur) M\u00e9langer les ingr\u00e9dients secs (mains) peler mes tomates (n\u00e9cessite le microonde) faire fondre le beurre (microonde) il va falloir attendre la fin de l'\u00e9tape 3 avat de passer \u00e0 la 4 m\u00e9langer la viande, les tomates et l'oignon (n\u00e9cessite le mixeur) RAS le mixeur est libre faire fondre le chocolat (microonde) RAS le beurre a fini de fondre Fa\u00e7onner les boulettes (n\u00e9cessite mes mains) les boulettes sont pr\u00eates \u00e0 cuire le four est libre et le gateau n'est pas fini Cuire les boulettes (n\u00e9cessite le four) m\u00e9langer le tout (mains) *pendant que les boulettes cuisent je finis le g\u00e2teau cuire (four) vocabulaire Chaque \u00e9tape de ma recette est une \u00e9tape de processus est appel\u00e9e thread . Le processus est alors la recette enti\u00e8re. Les diff\u00e9rentes t\u00e2ches (thread) d'un ordinateur sont r\u00e9alis\u00e9es de cette fa\u00e7on lorsque plusieurs applications sont ouvertes en m\u00eame temps. Chaque programme attend son tour et la disponibilit\u00e9 de la ressource. Comment aurais-je pu aller plus vite? En demandant de l'aide \u00e0 quelqu'un, j'aurai pu r\u00e9aliser les pr\u00e9paration r\u00e9ellement en parall\u00e8le alors qu'ici je les ai r\u00e9aliser en concurrence . C'est le principe du processeur multicoeur. Chaque coeur fera une chose \u00e0 la fois mais les diff\u00e9rents coeurs trvaiallent en parall\u00e8le. Arr\u00eat d'un processus S'il a fini d'\u00eatre ex\u00e9cut\u00e9 le processus s'arr\u00eate. Si une t\u00e2che fait \"planter\" le processeur (on verra plus tard pour quelle raison) on peut \"tuer\" le processus \u00e0 l'aide d'une commande kill ou le f\u00e2meux fin de t\u00e2che``de Windows. Un processus peut cr\u00e9er un ou plusieurs processus \u00e0 l'aide d'une commande syst\u00e8me . Imaginons un processus A qui cr\u00e9e un processus B. On dira que A est le p\u00e8re de B et que B est le fils de A. B peut, \u00e0 son tour cr\u00e9\u00e9 un processus C (B sera le p\u00e8re de C et C le fils de B). On peut mod\u00e9liser ces relations p\u00e8re/fils par une structure arborescente. Le tout premier processus s'appelle \u00ecnit et il est cr\u00e9\u00e9 \u00e0 partir de rien. PID et PPID Chaque processus poss\u00e8de un identifiant appel\u00e9 PID (Process Identification), ce PID est un nombre. Le premier processus cr\u00e9\u00e9 au d\u00e9marrage du syst\u00e8me \u00e0 pour PID 0, le second 1, le troisi\u00e8me 2... Le syst\u00e8me d'exploitation utilise un compteur qui est incr\u00e9ment\u00e9 de 1 \u00e0 chaque cr\u00e9ation de processus, le syst\u00e8me utilise ce compteur pour attribuer les PID aux processus. Chaque processus poss\u00e8de aussi un PPID (Parent Process Identification). Ce PPID permet de connaitre le processus parent d'un processus (par exemple le processus \"init\" vu ci-dessus \u00e0 un PID de 1 et un PPID de 0). \u00c0 noter que le processus 0 ne poss\u00e8de pas de PPID (c'est le seul dans cette situation). Mais qui d\u00e9cide? Il va donc falloir partager le temps de processeur disponible entre tous les processus : c\u2019est le travail de l\u2019ordonnanceur (ou scheduler en anglais). Ce dernier a pour t\u00e2che de s\u00e9lectionner le processus suivant \u00e0 ex\u00e9cuter parmi ceux qui sont pr\u00eats. L'ordonnanceur \u2693\ufe0e L'interruption \u2693\ufe0e Pour \u00e9viter qu'une t\u00e2che ne monopolise une ressource ou un processeur de fa\u00e7on trop longue, un programme apel\u00e9 gestionnaire d'interruption interrompt le processus toutes les 100ns (\u00e0 la cr\u00e9ation du premier processeur INTEL c'\u00e9tait toutes les 55ms). Le processeur reprend alors la main et d\u00e9cide si la t\u00e2che peut continuer ou si on passe \u00e0 une autre. Les interruptions peuvent aussiavoir lieu lorsqu'une t\u00e2che change d'\u00e9tat (par exemple une attente d'entr\u00e9e au clavier) ou lorsqu'elle est termin\u00e9e. Les processus peuvent \u00eatre plus ou moins priroritaires. En effet, si votre document met une demi seconde de plus \u00e0 s'enregistrer vous ne verrez pas la diff\u00e9rence. En revanche si votre musique s'interrompt une demie seconde il y a de forte chance pour que vous vous en rendiez compte. Sous Linux, on peut passer des consignes \u00e0 l\u2019ordonnanceur en fixant des priorit\u00e9s aux processus dont on est propri\u00e9taire. Cette priorit\u00e9 est un nombre entre -20 (plus prioritaire) et +20 (moins prioritaire). liste des commandes linux sur les processus commande Description Exemple ps Affiche l\u2019\u00e9tat des processus en cours ps -a : affiche les processus de tous les utilisateurs pstree Affiche un arbre des processus pstree -a d\u00e9sactive le compactage des branches top Affiche une vue dynamique des processus en cours d\u2019ex\u00e9cution top -H affiche les threads en plus des processus kill termine le processus kill 42 termine le processus de PID 42 renice redefinit la priorit\u00e9 du processus renice +10 42 redefinit \u00e0 10 la priorit\u00e9 du PID 42 Interbloquage (ou deadlock) \u2693\ufe0e Les interblocages sont des situations de la vie quotidienne. Un exemple est celui du carrefour avec priorit\u00e9 \u00e0 droite o\u00f9 chaque v\u00e9hicule est bloqu\u00e9 car il doit laisser le passage au v\u00e9hicule \u00e0 sa droite. En informatique \u00e9galement, l'interblocage peut se produire lorsque des processus concurrents s'attendent mutuellement. Les processus bloqu\u00e9s dans cet \u00e9tat le sont d\u00e9finitivement. Ce sc\u00e9nario catastrophe peut se produire dans un environnement o\u00f9 des ressources sont partag\u00e9es entre plusieurs processus et l'un d'entre eux d\u00e9tient ind\u00e9finiement une ressource n\u00e9cessaire pour l'autre. Cette situation d'interblocage a \u00e9t\u00e9 th\u00e9oris\u00e9e par l'informatitien Edward Coffman (1934-) qui a \u00e9nonc\u00e9 quatre conditions (appel\u00e9es conditions de coffman) menant \u00e0 l'interblocage : Exclusion mutuelle : au moins une des ressources du syst\u00e8me doit \u00eatre en acc\u00e8s exclusif. R\u00e9tention des ressources : un processus d\u00e9tient au moins une ressource et requiert une autre ressource d\u00e9tenue par un autre processus Non pr\u00e9emption : Seul le d\u00e9tenteur d'une ressource peut la lib\u00e9rer. Attente circulaire : Chaque processus attend une ressource d\u00e9tenue par un autre processus. P_1 attend une ressource d\u00e9tenue par P_2 qui \u00e0 son tour attend une ressource d\u00e9tenue par P_3 etc... qui attend une ressource d\u00e9tenue par P_1 ce qui clos la boucle. Exemple Acc\u00e8s aux p\u00e9riph\u00e9riques. Supposons que deux processus A et B veulent imprimer, en utilisant la m\u00eame imprimante, un fichier stock\u00e9 sur une bande magn\u00e9tique. La taille de ce fichier est sup\u00e9rieure \u00e0 la capacit\u00e9 du disque. Chaque processus a besoin d\u2019un acc\u00e8s exclusif au d\u00e9rouleur et \u00e0 l\u2019imprimante. On a une situation d\u2019interblocage si : Le processus A utilise l\u2019imprimante et demande l\u2019acc\u00e8s au d\u00e9rouleur. Le processus B d\u00e9tient le d\u00e9rouleur de bande et demande l\u2019imprimante. Questions \u2693\ufe0e Donner les cinq \u00e9tats possible d'un processus. Compl\u00e9ter le sch\u00e9ma sivat ainsi que la l\u00e9gende correspondant au changemet d'\u00e9tat. En vous basant sur le sch\u00e9ma d'arborescence, donnez le PID (en partant du principe qu'il est cr\u00e9\u00e9 juste apr\u00e8s init) et le PPID du processus \"getty\". Identifiez et explicitez sur l'exemple du carrefour \u00e0 priorit\u00e9 \u00e0 droite les 4 conditions de Coffman menant \u00e0 l'interblocage. Dans l'exmple donn\u00e9 ci-dessus, Montrer que les conditions d\u2019interlocage de Coffman sont r\u00e9unies Imaginez des situations de la vie quotidienne - comme l'exemple du carrefour - o\u00f9 un interblocage peut survenir. Supposons deux processus A et B qui demandent des acc\u00e8s exclusifs aux enregistrements d\u2019une base de donn\u00e9es E1 et E2. Imaginez un interblocage dans cette situation. Fiche de cours \u2693\ufe0e Faites une fiche r\u00e9sum\u00e9 ou une carte mentale reprenant, la d\u00e9finition d'un processus, l'odonnancement de plusiurs processus et le principe de l'interblocage","title":"Gestion ds processus"},{"location":"archi/processus.html#gestion-des-processus","text":"","title":"Gestion des processus"},{"location":"archi/processus.html#quest-ce-quun-processus","text":"Un programme \u00e9crit \u00e0 l'aide d'un langage de haut de niveau (on parle de \"code source\") est, comme nous l'avons vu l'ann\u00e9e derni\u00e8re, transform\u00e9 en langage machine afin de pouvoir \u00eatre ex\u00e9cut\u00e9 par un ordinateur. On appelle processus un programme en cours d'ex\u00e9cution. Attention Il ne faut pas confondre le code source du programme et un processus, qui lui correspond \u00e0 l'ex\u00e9cution de ce programme par un ordinateur. Pour prendre une image assez classique, si une recette de cuisine correspond au code source du programme, le cuisinier en train de pr\u00e9parer cette recette dans sa cuisine correspond \u00e0 un processus.","title":"Qu'est-ce qu'un processus?"},{"location":"archi/processus.html#etats-dun-processus","text":"Tous les syst\u00e8mes d'exploitation \"modernes\" (Linux, Windows, macOS, Android, iOS...) sont capables de g\u00e9rer l'ex\u00e9cution de plusieurs processus en m\u00eame temps. Mais pour \u00eatre pr\u00e9cis, cela n'est pas en v\u00e9ritable \"en m\u00eame temps\", mais plut\u00f4t un \"chacun son tour\". Pour g\u00e9rer ce \"chacun son tour\", les syst\u00e8mes d'exploitation attribuent des \"\u00e9tats\" au processus. Voici les diff\u00e9rents \u00e9tats : - Lors du d\u00e9marrage d'un programme ou de l'ouverture d'un nouvel onglet par exemple, un processus est cr\u00e9\u00e9, il estdans l'\u00e9tat nouveau . - Lorsqu'un processus est en train de s'ex\u00e9cuter (qu'il utilise le microprocesseur), on dit que le processus est dans l'\u00e9tat en ex\u00e9ution . - Un processus qui se trouve dans l'\u00e9tat en ex\u00e9ution peut demander \u00e0 acc\u00e9der \u00e0 une ressource pas forc\u00e9ment disponible instantan\u00e9ment (par exemple lire une donn\u00e9e sur le disque dur). Le processus ne peut pas poursuivre son ex\u00e9cution tant qu'il n'a pas obtenu cette ressource. En attendant de recevoir cette ressource, il passe de l'\u00e9tat \"en ex\u00e9ution\" \u00e0 l'\u00e9tat en attente . Lorsque le processus finit par obtenir la ressource attendue, celui-ci peut potentiellement reprendre son ex\u00e9cution. Mais comme nous l'avons vu ci-dessus, les syst\u00e8mes d'exploitation permettent de g\u00e9rer plusieurs processus \"en m\u00eame temps\", mais un seul processus peut se trouver dans un \u00e9tat \"en ex\u00e9ution\" (le microprocesseur ne peut \"s'occuper\" que d'un seul processus \u00e0 la fois). Quand un processus passe d'un \u00e9tat \"en ex\u00e9ution\" \u00e0 un \u00e9tat \"en attente\", un autre processus peut alors \"prendre sa place\" et passer dans l'\u00e9tat \"en ex\u00e9ution\". Le processus qui vient de recevoir la ressource attendue ne va donc pas forc\u00e9ment pouvoir reprendre son ex\u00e9cution tout de suite, car pendant qu'il \u00e9tait dans un \u00e9tat \"en attente\" un autre processus a \"pris sa place\". Un processus qui quitte l'\u00e9tat en attente ne repasse pas forc\u00e9ment \u00e0 l'\u00e9tat \"en ex\u00e9ution\", il peut, en attendant que \"la place se lib\u00e8re\" passer dans l'\u00e9tat pr\u00eat (sous entendu \"j'ai obtenu ce que j'attendais, je suis pr\u00eat \u00e0 reprendre mon ex\u00e9cution d\u00e8s que la \"place sera lib\u00e9r\u00e9e\"\"). une fois le processus termin\u00e9 il passe dans l'\u00e9tat arr\u00eat\u00e9 . Le passage de l'\u00e9tat \"pr\u00eat\" vers l'\u00e9tat \"en ex\u00e9ution\" constitue l'op\u00e9ration \"d'\u00e9lection\". Le passage de l'\u00e9tat en ex\u00e9ution vers l'\u00e9tat en attente est l'op\u00e9ration de \"blocage\". Un processus est toujours cr\u00e9\u00e9 dans l'\u00e9tat \"pr\u00eat\". Pour se terminer, un processus doit obligatoirement se trouver dans l'\u00e9tat \"en ex\u00e9ution\".","title":"Etats d'un processus"},{"location":"archi/processus.html#evolution-des-processus","text":"Dans un syst\u00e8me monot\u00e2che (processeur simple coeur pour simplifier) une seule t\u00e2che peut \u00eatre ex\u00e9cut\u00e9e \u00e0 la fois. Un exemple concret Etapes de mes recettes Imaginons que je doive pr\u00e9parer seule le repas comprenant des boulettes de viande en plat et un g\u00e2teau en dessert Je pourrai choisir de faire l'un d'abord et l'autre ensuite, mais il y aura des temps de latence qui me ferai perdre mon temps. Par exemple pendant que le beurre fond j'attends au lieu de faire autre chose. Voici les \u00e9tapes de la pr\u00e9paration de mes boulettes : \u00e9mincer l'oignon (n\u00e9cessite le mixeur) peler mes tomates (n\u00e9cessite le microonde) m\u00e9langer la viande, les tomates et l'oignon (n\u00e9cessite le mixeur) Fa\u00e7onner les boulettes (n\u00e9cessite mes mains) Cuire les boulettes (n\u00e9cessite le four) Et les \u00e9tapes de la pr\u00e9paration de mon gateau : M\u00e9langer les ingr\u00e9dients secs (mains) faire fondre le beurre (microonde) faire fondre le chocolat (microonde) m\u00e9langer le tout (mains) cuire (four) Certaines ressources vont devoir \u00eatre partag\u00e9es et certaines \u00e9tapes vont devoir attendre que la ressource se lib\u00e8re. Je ne ferai pas fondre le chocolat en meme temps que le beurre (mon microonde est extr\u00e8mement petit). Ordre de r\u00e9alisation Je vais donc choisir de faire les choses dans cet ordre : \u00e9mincer l'oignon (n\u00e9cessite le mixeur) M\u00e9langer les ingr\u00e9dients secs (mains) peler mes tomates (n\u00e9cessite le microonde) faire fondre le beurre (microonde) il va falloir attendre la fin de l'\u00e9tape 3 avat de passer \u00e0 la 4 m\u00e9langer la viande, les tomates et l'oignon (n\u00e9cessite le mixeur) RAS le mixeur est libre faire fondre le chocolat (microonde) RAS le beurre a fini de fondre Fa\u00e7onner les boulettes (n\u00e9cessite mes mains) les boulettes sont pr\u00eates \u00e0 cuire le four est libre et le gateau n'est pas fini Cuire les boulettes (n\u00e9cessite le four) m\u00e9langer le tout (mains) *pendant que les boulettes cuisent je finis le g\u00e2teau cuire (four) vocabulaire Chaque \u00e9tape de ma recette est une \u00e9tape de processus est appel\u00e9e thread . Le processus est alors la recette enti\u00e8re. Les diff\u00e9rentes t\u00e2ches (thread) d'un ordinateur sont r\u00e9alis\u00e9es de cette fa\u00e7on lorsque plusieurs applications sont ouvertes en m\u00eame temps. Chaque programme attend son tour et la disponibilit\u00e9 de la ressource. Comment aurais-je pu aller plus vite? En demandant de l'aide \u00e0 quelqu'un, j'aurai pu r\u00e9aliser les pr\u00e9paration r\u00e9ellement en parall\u00e8le alors qu'ici je les ai r\u00e9aliser en concurrence . C'est le principe du processeur multicoeur. Chaque coeur fera une chose \u00e0 la fois mais les diff\u00e9rents coeurs trvaiallent en parall\u00e8le. Arr\u00eat d'un processus S'il a fini d'\u00eatre ex\u00e9cut\u00e9 le processus s'arr\u00eate. Si une t\u00e2che fait \"planter\" le processeur (on verra plus tard pour quelle raison) on peut \"tuer\" le processus \u00e0 l'aide d'une commande kill ou le f\u00e2meux fin de t\u00e2che``de Windows. Un processus peut cr\u00e9er un ou plusieurs processus \u00e0 l'aide d'une commande syst\u00e8me . Imaginons un processus A qui cr\u00e9e un processus B. On dira que A est le p\u00e8re de B et que B est le fils de A. B peut, \u00e0 son tour cr\u00e9\u00e9 un processus C (B sera le p\u00e8re de C et C le fils de B). On peut mod\u00e9liser ces relations p\u00e8re/fils par une structure arborescente. Le tout premier processus s'appelle \u00ecnit et il est cr\u00e9\u00e9 \u00e0 partir de rien. PID et PPID Chaque processus poss\u00e8de un identifiant appel\u00e9 PID (Process Identification), ce PID est un nombre. Le premier processus cr\u00e9\u00e9 au d\u00e9marrage du syst\u00e8me \u00e0 pour PID 0, le second 1, le troisi\u00e8me 2... Le syst\u00e8me d'exploitation utilise un compteur qui est incr\u00e9ment\u00e9 de 1 \u00e0 chaque cr\u00e9ation de processus, le syst\u00e8me utilise ce compteur pour attribuer les PID aux processus. Chaque processus poss\u00e8de aussi un PPID (Parent Process Identification). Ce PPID permet de connaitre le processus parent d'un processus (par exemple le processus \"init\" vu ci-dessus \u00e0 un PID de 1 et un PPID de 0). \u00c0 noter que le processus 0 ne poss\u00e8de pas de PPID (c'est le seul dans cette situation). Mais qui d\u00e9cide? Il va donc falloir partager le temps de processeur disponible entre tous les processus : c\u2019est le travail de l\u2019ordonnanceur (ou scheduler en anglais). Ce dernier a pour t\u00e2che de s\u00e9lectionner le processus suivant \u00e0 ex\u00e9cuter parmi ceux qui sont pr\u00eats.","title":"Evolution des processus"},{"location":"archi/processus.html#lordonnanceur","text":"","title":"L'ordonnanceur"},{"location":"archi/processus.html#linterruption","text":"Pour \u00e9viter qu'une t\u00e2che ne monopolise une ressource ou un processeur de fa\u00e7on trop longue, un programme apel\u00e9 gestionnaire d'interruption interrompt le processus toutes les 100ns (\u00e0 la cr\u00e9ation du premier processeur INTEL c'\u00e9tait toutes les 55ms). Le processeur reprend alors la main et d\u00e9cide si la t\u00e2che peut continuer ou si on passe \u00e0 une autre. Les interruptions peuvent aussiavoir lieu lorsqu'une t\u00e2che change d'\u00e9tat (par exemple une attente d'entr\u00e9e au clavier) ou lorsqu'elle est termin\u00e9e. Les processus peuvent \u00eatre plus ou moins priroritaires. En effet, si votre document met une demi seconde de plus \u00e0 s'enregistrer vous ne verrez pas la diff\u00e9rence. En revanche si votre musique s'interrompt une demie seconde il y a de forte chance pour que vous vous en rendiez compte. Sous Linux, on peut passer des consignes \u00e0 l\u2019ordonnanceur en fixant des priorit\u00e9s aux processus dont on est propri\u00e9taire. Cette priorit\u00e9 est un nombre entre -20 (plus prioritaire) et +20 (moins prioritaire). liste des commandes linux sur les processus commande Description Exemple ps Affiche l\u2019\u00e9tat des processus en cours ps -a : affiche les processus de tous les utilisateurs pstree Affiche un arbre des processus pstree -a d\u00e9sactive le compactage des branches top Affiche une vue dynamique des processus en cours d\u2019ex\u00e9cution top -H affiche les threads en plus des processus kill termine le processus kill 42 termine le processus de PID 42 renice redefinit la priorit\u00e9 du processus renice +10 42 redefinit \u00e0 10 la priorit\u00e9 du PID 42","title":"L'interruption"},{"location":"archi/processus.html#interbloquage-ou-deadlock","text":"Les interblocages sont des situations de la vie quotidienne. Un exemple est celui du carrefour avec priorit\u00e9 \u00e0 droite o\u00f9 chaque v\u00e9hicule est bloqu\u00e9 car il doit laisser le passage au v\u00e9hicule \u00e0 sa droite. En informatique \u00e9galement, l'interblocage peut se produire lorsque des processus concurrents s'attendent mutuellement. Les processus bloqu\u00e9s dans cet \u00e9tat le sont d\u00e9finitivement. Ce sc\u00e9nario catastrophe peut se produire dans un environnement o\u00f9 des ressources sont partag\u00e9es entre plusieurs processus et l'un d'entre eux d\u00e9tient ind\u00e9finiement une ressource n\u00e9cessaire pour l'autre. Cette situation d'interblocage a \u00e9t\u00e9 th\u00e9oris\u00e9e par l'informatitien Edward Coffman (1934-) qui a \u00e9nonc\u00e9 quatre conditions (appel\u00e9es conditions de coffman) menant \u00e0 l'interblocage : Exclusion mutuelle : au moins une des ressources du syst\u00e8me doit \u00eatre en acc\u00e8s exclusif. R\u00e9tention des ressources : un processus d\u00e9tient au moins une ressource et requiert une autre ressource d\u00e9tenue par un autre processus Non pr\u00e9emption : Seul le d\u00e9tenteur d'une ressource peut la lib\u00e9rer. Attente circulaire : Chaque processus attend une ressource d\u00e9tenue par un autre processus. P_1 attend une ressource d\u00e9tenue par P_2 qui \u00e0 son tour attend une ressource d\u00e9tenue par P_3 etc... qui attend une ressource d\u00e9tenue par P_1 ce qui clos la boucle. Exemple Acc\u00e8s aux p\u00e9riph\u00e9riques. Supposons que deux processus A et B veulent imprimer, en utilisant la m\u00eame imprimante, un fichier stock\u00e9 sur une bande magn\u00e9tique. La taille de ce fichier est sup\u00e9rieure \u00e0 la capacit\u00e9 du disque. Chaque processus a besoin d\u2019un acc\u00e8s exclusif au d\u00e9rouleur et \u00e0 l\u2019imprimante. On a une situation d\u2019interblocage si : Le processus A utilise l\u2019imprimante et demande l\u2019acc\u00e8s au d\u00e9rouleur. Le processus B d\u00e9tient le d\u00e9rouleur de bande et demande l\u2019imprimante.","title":"Interbloquage (ou deadlock)"},{"location":"archi/processus.html#questions","text":"Donner les cinq \u00e9tats possible d'un processus. Compl\u00e9ter le sch\u00e9ma sivat ainsi que la l\u00e9gende correspondant au changemet d'\u00e9tat. En vous basant sur le sch\u00e9ma d'arborescence, donnez le PID (en partant du principe qu'il est cr\u00e9\u00e9 juste apr\u00e8s init) et le PPID du processus \"getty\". Identifiez et explicitez sur l'exemple du carrefour \u00e0 priorit\u00e9 \u00e0 droite les 4 conditions de Coffman menant \u00e0 l'interblocage. Dans l'exmple donn\u00e9 ci-dessus, Montrer que les conditions d\u2019interlocage de Coffman sont r\u00e9unies Imaginez des situations de la vie quotidienne - comme l'exemple du carrefour - o\u00f9 un interblocage peut survenir. Supposons deux processus A et B qui demandent des acc\u00e8s exclusifs aux enregistrements d\u2019une base de donn\u00e9es E1 et E2. Imaginez un interblocage dans cette situation.","title":"Questions"},{"location":"archi/processus.html#fiche-de-cours","text":"Faites une fiche r\u00e9sum\u00e9 ou une carte mentale reprenant, la d\u00e9finition d'un processus, l'odonnancement de plusiurs processus et le principe de l'interblocage","title":"Fiche de cours"},{"location":"archi/soc.html","text":"Syst\u00e8me On a Chip (syst\u00e8me sur puce) \u2693\ufe0e La r\u00e9duction de taille des \u00e9l\u00e9ments des circuits \u00e9lectroniques a conduit \u00e0 l\u2019av\u00e8nement de syst\u00e8mes sur puce (SoC pour System on a Chip en anglais) qui regroupent dans un seul circuit nombre de fonctions autrefois effectu\u00e9es par des circuits s\u00e9par\u00e9s assembl\u00e9s sur une carte \u00e9lectronique. Un tel syst\u00e8me sur puce est con\u00e7u et mis au point de fa\u00e7on logicielle, ses briques \u00e9lectroniques sont accessibles par des API, comme pour les biblioth\u00e8ques logicielles. Syst\u00e8me sur puce \u2693\ufe0e De l\u2019ordinateur au smartphone / tablette Dans un ordinateur \u201cclassique\u201d tel qu\u2019un PC de bureau, le \u00ab hardware \u00bb est organis\u00e9 autour de 4 \u00e9l\u00e9ments principaux : le processeur (CPU \u2013 Central Processing Unit) se charge de r\u00e9aliser les calculs les plus courants, ceux qui permettent par exemple de faire tourner le syst\u00e8me d\u2019exploitation ou un navigateur web. la m\u00e9moire vive (RAM \u2013 Random Access Memory) permet d\u2019enregistrer temporairement les donn\u00e9es trait\u00e9es par le processeur. la carte graphique (ou GPU \u2013 Graphics Processing Unit) se charge d\u2019afficher une image, qu\u2019elle soit en 2D ou bien en 3D comme dans les jeux. la carte-m\u00e8re (Motherboard) permet l\u2019acheminement des donn\u00e9es entre les composants (CPU, RAM, GPU, disque dur, SSD, cartes r\u00e9seau \u2026) via des \u00ab BUS \u00bb. Elements d'un ordinateur 1- CPU surmont\u00e9 d\u2019un dissipateur thermique (ventirad) 2-Barrettes de RAM 3- GPU 4- Carte m\u00e8re Mais depuis le d\u00e9but de l\u2019\u00e8re des smartphones et des tablettes, on assiste \u00e0 l\u2019\u00e9mergence de syst\u00e8mes tout-en-un appel\u00e9 SoC (System on a Chip) afin d\u2019optimiser la miniaturisation et l\u2019int\u00e9gration des diff\u00e9rents composants. Ces derniers sont alors bien mieux interconnect\u00e9s les uns aux autres, avec par exemple une fr\u00e9quence processeur qui varie en fonction de la fr\u00e9quence de la carte graphique du fait de contraintes thermiques et de consommation. Un Soc pr\u00e9sente donc une structure compl\u00e8tement in\u00e9dite par rapport \u00e0 un ordinateur classique o\u00f9 chaque composant est plus ou moins ind\u00e9pendant. Un \u00ab syst\u00e8me sur une puce \u00bb, souvent d\u00e9sign\u00e9 dans la litt\u00e9rature scientifique par le terme anglais \u00ab system on a chip \u00bb (d'o\u00f9 son abr\u00e9viation SoC), est un syst\u00e8me complet embarqu\u00e9 sur une seule puce (\"circuit int\u00e9gr\u00e9\"), pouvant comprendre de la m\u00e9moire, un ou plusieurs microprocesseurs, des p\u00e9riph\u00e9riques d'interface, ou tout autre composant n\u00e9cessaire \u00e0 la r\u00e9alisation de la fonction attendue. On peut int\u00e9grer de la logique, de la m\u00e9moire (statique, dynamique, flash, ROM, PROM, EPROM, EEPROM), des dispositifs (capteurs) m\u00e9caniques, opto-\u00e9lectroniques, chimiques ou biologiques ou des circuits radio\u2026 D\u2019apr\u00e8s Wikip\u00e9dia Question 1-Qu\u2019est-ce qu\u2019un SoC ? 2-Quels sont les appareils \u00e0 base de SoC ? 3-Au niveau hardware, qu\u2019est-ce qui diff\u00e9rencie fondamentalement un SoC des composants d\u2019un ordinateur ? Composition d\u2019un SoC \u2693\ufe0e \u25fc Le processeur (CPU) Le processeur ou \u00ab Central Processing Unit \u00bb (CPU) est le c\u0153ur du SoC. Son fonctionnement est identique \u00e0 celui d\u2019un ordinateur. On y retrouve donc plusieurs c\u0153urs cadenc\u00e9s \u00e0 diff\u00e9rentes fr\u00e9quences effectuant des threads et stockant des informations en cache. \u2022 Les c\u0153urs Un processeur compte g\u00e9n\u00e9ralement plusieurs c\u0153urs, on parle couramment dans la litt\u00e9rature technique de dual-core, quad-core ou d\u2019octo-core parfois. Ainsi, ces processeurs se composent respectivement de deux, quatre ou huit c\u0153urs. Ceux-ci permettent de lancer en parall\u00e8le plusieurs applications de mani\u00e8re simultan\u00e9e (multit\u00e2che) et permettent l\u2019utilisation d\u2019application lourde comme des jeux. \u2022 La fr\u00e9quence La fr\u00e9quence d\u2019un processeur est le nombre de cycles de calculs qu\u2019il peut effectuer chaque seconde. Elle va donc naturellement d\u00e9terminer la dur\u00e9e d\u2019ex\u00e9cution d\u2019une t\u00e2che : plus la fr\u00e9quence du processeur est \u00e9lev\u00e9e, plus l\u2019ex\u00e9cution d\u2019une t\u00e2che est rapide. Mesur\u00e9e en gigahertz (GHz), celle-ci est souvent diff\u00e9rente entre chaque c\u0153ur. \u2022 Les threads Les c\u0153urs r\u00e9alisent ce qu\u2019on appelle un thread, litt\u00e9ralement un fil d\u2019ex\u00e9cution, une t\u00e2che qui doit \u00eatre r\u00e9alis\u00e9e par le processeur. \u2022 Le cache C\u2019est une petite m\u00e9moire rapide int\u00e9gr\u00e9e au processeur. En effet, celle-ci va permettre de stocker les informations r\u00e9currentes au plus pr\u00e8s du processeur pour \u00e9viter d\u2019avoir \u00e0 aller les chercher sans arr\u00eat dans la RAM. \u25fc La puce graphique (GPU) La puce graphique ou \u00ab Graphics Processing Unit \u00bb (GPU) est un \u00e9l\u00e9ment crucial pour les gamers, car c\u2019est lui qui est en charge de calculer les images afin de pouvoir les afficher \u00e0 l\u2019\u00e9cran. Celle-ci prend ainsi en charge les images en 2D et en 3D que ce soit une page web, une vid\u00e9o ou encore une partie endiabl\u00e9e de votre jeu favori. Une carte graphique doit donc r\u00e9aliser un nombre \u00e9lev\u00e9 de t\u00e2ches, puisque qu\u2019elle doit par exemple calculer la couleur \u00e0 afficher sur chaque pixel de l\u2019\u00e9cran de votre smartphone. Par exemple dans le cas d\u2019une image Full HD (1920\u00d71080), le GPU affiche 2 073 600 pixels diff\u00e9rents ou 8 294 400 pixels pour de l\u2019Ultra HD (3840\u00d72160). Rappelons \u00e9galement que ce calcul est fait selon la fr\u00e9quence de rafraichissement de l\u2019\u00e9cran. Celle-ci peut par exemple varier entre 60 et 120 fois par secondes c\u2019est-\u00e0-dire entre 60 Hz et 120 Hz. \u25fc La puce neuronale (NPU) La puce neuronale ou \u00ab Neuronal Processing Unit \u00bb (NPU) est une puce en charge de l\u2019intelligence artificielle des smartphones. Les calculs de l\u2019intelligence artificielle ont longtemps \u00e9t\u00e9 faits par le biais de serveurs dans le cloud (distant). N\u00e9anmoins, depuis quelques ann\u00e9es pour des raisons de rapidit\u00e9 et de respect de la vie priv\u00e9e, les calculs se font d\u00e9sormais directement sur les smartphones. C\u2019est utile par exemple dans \u00ab Google Translate \u00bb pour reconna\u00eetre des caract\u00e8res, pour optimiser les photos ou encore l\u2019autonomie. \u25fc Le modem (Interface) Les smartphones embarquent \u00e9galement dans le SoC une unit\u00e9 r\u00e9seau assurant la prise en charge des diff\u00e9rents protocoles de communication. Cette unit\u00e9 est la partie la plus compliqu\u00e9e \u00e0 d\u00e9velopper et \u00e0 impl\u00e9menter sur un SoC. N\u00e9anmoins, il s\u2019agit d\u2019un \u00e9l\u00e9ment crucial afin d\u2019assurer le nomadisme d\u2019un smartphone en itin\u00e9rance. Le modem int\u00e9gr\u00e9 au SoC g\u00e8re non seulement le Wifi, le Bluetooth, le NFC ou bien encore les technologies mobiles. C\u2019est-\u00e0-dire la 4G, ou plus r\u00e9cemment la 5G mais \u00e9galement de plus vieux r\u00e9seaux tels que la 3G. \u25fc Le processeur de signal num\u00e9rique (DSP) Le processeur de signal num\u00e9rique ou \u00ab Digital Signal Processor \u00bb (DSP) est en charge de traiter les signaux num\u00e9riques. Ainsi, il va permettre le filtrage, la compression ou encore l\u2019extraction de diff\u00e9rents signaux tels que la musique ou encore une vid\u00e9o. \u25fc Le processeur de signal d\u2019images (ISP) Le processeur d\u2019image ou \u00ab Image Signal Processor \u00bb (ISP) est une puce prenant en charge la cr\u00e9ation d\u2019images num\u00e9riques. En effet de par leurs tailles minuscules, les capteurs photo des smartphones ne sont pas de tr\u00e8s bonne qualit\u00e9 d\u2019un point de vue de l\u2019optique pure. La qualit\u00e9 qu\u2019il est actuellement possible d\u2019obtenir va \u00eatre intimement li\u00e9e \u00e0 cette puce qui va compenser logiquement certaines limitations optiques (zoom num\u00e9rique \u2026). \u25fc Le processeur de s\u00e9curit\u00e9 (SPU) Le processeur de s\u00e9curit\u00e9 ou \u00ab Secure Processing Unit \u00bb (SPU) est le \u00ab bouclier \u00bb du smartphone. Son alimentation \u00e9lectrique est ind\u00e9pendante afin de ne pas pouvoir \u00eatre \u00e9teint en cas d\u2019attaque sur celui-ci. Le SPU est d\u2019une importance capitale. En effet celui-ci va stocker les donn\u00e9es biom\u00e9triques, bancaires, la carte SIM ou encore les titres de transport. C\u2019est lui qui contient les cl\u00e9s de chiffrement des donn\u00e9es de l\u2019utilisateur. Question 4-Pourquoi les CPU d\u2019un SoC embarquent-ils plusieurs c\u0153urs ? 5-Donner un ordre de grandeur de la fr\u00e9quence du CPU d\u2019un SoC. 6-Sur quel param\u00e8tre influe la fr\u00e9quence du CPU d\u2019un SoC ? 7-Qu\u2019est-ce qu\u2019un thread ? 8-Qu\u2019est-ce que la m\u00e9moire cache d\u2019un CPU ? 9-Dans un SoC, \u00e0 quoi sert le GPU ? 10-Dans un SoC, quel \u00e9l\u00e9ment est charg\u00e9 du traitement des photos prises par la (les) cam\u00e9ra(s) int\u00e9gr\u00e9e(s) au smartphone ? 11-Dans un SoC, quel \u00e9l\u00e9ment permet de lire de l\u2019audio ou de la vid\u00e9o ? 12-Dans un SoC, \u00e0 quoi sert le SPU ? 13-Quel \u00e9l\u00e9ment d\u2019un SOC permet \u00e0 un smartphone de communiquer avec d\u2019autres machines ? Avantages d\u2019un SoC par rapport \u00e0 syst\u00e8me classique \u2693\ufe0e Outre leur taille miniaturis\u00e9e bien adapt\u00e9e aux terminaux nomades (smartphones et tablettes), les SoC offrent d'autres avantages par rapport aux syst\u00e8mes \"classiques\" rencontr\u00e9s dans les ordinateurs : \u2022les SoC sont con\u00e7us pour consommer beaucoup moins d'\u00e9nergie qu'un syst\u00e8me classique \u00e0 puissance \u00e9quivalente de calculs ; \u2022cette consommation r\u00e9duite d\u2019\u00e9nergie permet dans la plupart des cas de s'affranchir de la pr\u00e9sence d\u2019un syst\u00e8me de refroidissement actif comme les ventilateurs ou de type \u00ab watercooling \u00bb ; un syst\u00e8me \u00e9quip\u00e9 de SoC est donc silencieux car il chauffe relativement peu ; \u2022\u00e9tant donn\u00e9 les distances tr\u00e8s faibles entre, par exemple, le CPU et la m\u00e9moire, les donn\u00e9es circulent beaucoup plus vites, ce qui permet d'am\u00e9liorer grandement les performances ; en effet, dans les syst\u00e8mes \"classiques\" les BUS charg\u00e9s d\u2019acheminer les donn\u00e9es sont souvent des \"goulots d'\u00e9tranglement\" en termes de performances \u00e0 cause de la vitesse limit\u00e9e de circulation des donn\u00e9es. En revanche, le principal inconv\u00e9nient d\u2019un SoC est que l\u00e0 ou un ordinateur \u00e9quip\u00e9 d'une carte m\u00e8re permet de faire \u00e9voluer les composants individuellement, l'extr\u00eame int\u00e9gration du SoC pr\u00e9sente en revanche l'inconv\u00e9nient de n'autoriser aucune mise \u00e0 jour possible du mat\u00e9riel. Questions 14-Quels sont les principaux avantages d\u2019un SoC ? 15-Citer le principal inconv\u00e9nient d\u2019un SoC. Quelques familles de SoC utilis\u00e9es dans les smartphones \u2693\ufe0e Les nouveaux proc\u00e9d\u00e9s de gravure des semi-conducteurs CMOS telle que la lithographie extr\u00eame ultraviolette, ont permis de r\u00e9duire significativement la taille des composants \u00e9lectroniques constituants les SoC. Ainsi, on dispose aujourd\u2019hui de la m\u00eame puissance dans un smartphone que celle embarqu\u00e9e dans un ordinateur il y a quelques ann\u00e9es de cela. Ceci s\u2019est cependant fait au prix d\u2019une complexit\u00e9 technologique croissante. L\u2019actuelle g\u00e9n\u00e9ration de SoC est grav\u00e9e en 7 nm (1 nm = 10-9 m) depuis juillet 2019. Le SoC A13 Bionic d\u2019Apple est par exemple compos\u00e9 de 8,5 milliards de transistors r\u00e9partis sur une surface de 98,48 mm2 ! La prochaine g\u00e9n\u00e9ration grav\u00e9e en 5 nm devrait voir le jour \u00e0 partir de 2021. Au sein de la g\u00e9n\u00e9ration actuelle de smartphone on trouve une grande vari\u00e9t\u00e9 de SoC en fonction des diff\u00e9rents constructeurs : Pour les derniers mod\u00e8les de smartphones 2019-2020, la principale difficult\u00e9 technologique est d\u2019int\u00e9grer aux SoCs les modems 5G qui sont complexes \u00e0 fabriquer. Pour l\u2019instant ces derniers sont g\u00e9n\u00e9ralement grav\u00e9s en 10 nm sur une puce ind\u00e9pendante du SoC. Le prochain d\u00e9fi technologique sera d\u2019int\u00e9grer les modems 5G directement dans le SoC grav\u00e9 en 7 nm puis 5 nm. Question 16-Pour les mod\u00e8les 2019-2020 de t\u00e9l\u00e9phones portables, quelle est la finesse de gravures des SoC ? 17-Quel est l\u2019ordre de grandeur de la surface d\u2019un SoC ? 18-Quel est l\u2019ordre de grandeur du nombre de transistors pr\u00e9sents sur un SoC ? 19-Quel est l\u2019ordre de grandeur de la densit\u00e9 moyenne de transistors par mm2 dans un Soc ? 20-Quelle sera la finesse de gravure des SoC pour la prochaine g\u00e9n\u00e9ration de smartphone ? 21-Quelle est la principale difficult\u00e9 technologique rencontr\u00e9e \u00e0 l\u2019heure actuelle par les concepteurs de SoC ? L\u2019architecture ARM \u2693\ufe0e Dot\u00e9s d'une architecture relativement plus simple que d'autres familles de processeurs, et b\u00e9n\u00e9ficiant d'une faible consommation \u00e9lectrique, les processeurs ARM (Advanced Risc Machine) sont devenus dominants dans le domaine de l'informatique embarqu\u00e9e, en particulier la t\u00e9l\u00e9phonie mobile et les tablettes. Les architectures ARM reposent sur des processeurs \u00e0 jeux d\u2019instructions r\u00e9duit RISC (Reduced Instruction Set Computer) 32 bits (ARMv1 \u00e0 ARMv7) ou 64 bits (ARMv8). Aujourd'hui, ARM est surtout connu pour ses syst\u00e8mes sur puce (SoC), int\u00e9grant sur une seule puce : microprocesseur, processeur graphique (GPU), DSP, FPU, SIMD, et contr\u00f4leur de p\u00e9riph\u00e9riques. Ceux-ci sont pr\u00e9sents dans la majorit\u00e9 des smartphones et tablettes. ARM propose des architectures qui sont vendues sous licence de propri\u00e9t\u00e9 intellectuelle aux concepteurs. Ils proposent diff\u00e9rentes options dans lesquelles les constructeurs peuvent prendre ce qui les int\u00e9resse pour compl\u00e9ter avec leurs options propres ou de concepteurs tiers. ARM propose ainsi pour les SoC les plus r\u00e9cents les microprocesseurs Cortex (Cortex-A pour les dispositifs portables de type smartphones et tablettes, Cortex-M pour le couplage \u00e0 un microcontr\u00f4leur, Cortex-R pour les microprocesseurs temps r\u00e9el), des processeurs graphiques (Mali), des bus AMBA sous licence libre, ainsi que les divers autres composants n\u00e9cessaires \u00e0 la composition du SoC complet. Certains constructeurs, tels que Nvidia, pr\u00e9f\u00e8rent produire leur propre processeur graphique, d'autres, comme Samsung, pr\u00e9f\u00e8rent prendre dans certains cas un processeur graphique de prestataire tiers ou d'ARM selon les mod\u00e8les, et d'autres, comme Apple, modifient certains composants du microprocesseur en m\u00e9langeant plusieurs architectures processeur ARM. (wikip\u00e9dia) Une particularit\u00e9 des processeurs ARM est leur mode de vente. En effet, ARM Ltd. ne fabrique ni ne vend ses processeurs sous forme de circuits int\u00e9gr\u00e9s. La soci\u00e9t\u00e9 vend les licences de ses processeurs de mani\u00e8re qu'ils soient grav\u00e9s dans le silicium par d'autres fabricants. Aujourd'hui, la plupart des grands fondeurs de puces proposent de l'architecture ARM. Question 22-Quel est l'avantage \u00e0 ne pas vendre des processeurs directement ? 23-Faites quelques recherches sur les probl\u00e8mes d'approvisionnement des semi-conducteurs A retenir !! Faites une fiche ou une carte mentale sachant que vous devez savoir ce qu'est un SoC, ce qu'il contient, ses avantages par rapport \u00e0 un syst\u00e8me classique et o\u00f9 est ce qu'on les trouve. Exercices \u2693\ufe0e Exercice n\u00b01 : \u2693\ufe0e D\u00e9crire en quelques phrases ce qu'est un SoC. Sch\u00e9matiser le Soc. Exercice n\u00b02: \u2693\ufe0e A partir de l'article du site elektormagazine.fr . 1. Relevez les diff\u00e9rentes caract\u00e9ristiques du SoC du Raspberry Pi 3 mod\u00e8le B+. 2. Les comparez au SoC du Raspberry Pi 4. 3. Quelles sont les principales \u00e9volutions qui contribuent \u00e0 ce gain? Une copie de l'article disponible. Exercice n\u00b03 : \u2693\ufe0e La photo ci-dessus montre le d\u00e9tail d'un SoC Kirin 990. Identifier les diff\u00e9rentes parties de ce SoC. Exercice n\u00b04 : \u2693\ufe0e Faire une analogie entre les 2 colonnes (un ordinateur et vous qui \u00eates install\u00e9 chez vous \u00e0 votre bureau). Exercice n\u00b05 : \u2693\ufe0e Quel est le nom du SoC de votre smarphone ? Quelles en sont les fonctionnalit\u00e9es ? Quelles sont les caract\u00e9ristiques du processeur ? Exercice n\u00b06 : \u2693\ufe0e Depuis le tout premier circuit int\u00e9gr\u00e9 (le 4004) jusqu'\u00e0 nos jours, cette loi s'est toujours v\u00e9rifi\u00e9e m\u00eame si on s'en \u00e9loigne actuellement. Voici un exemple avec quelques processeurs d'Intel : 1971 : Intel 4004 : 2 300 transistors 1978 : Intel 8086 : 29 000 transistors 1982 : Intel 80286 275 000 transistors 1989 : Intel 80486 : 1 160 000 transistors 1993 : Pentium : 3 100 000 transistors 1995 : Pentium Pro : 5 500 000 transistors 1997 : Pentium II : 27 000 000 transistors 2001 : Pentium 4 : 42 000 000 transistors 2004 : Pentium Extreme Edition : 169 000 000 transistors 2006 : Core 2 Quad : 582 000 000 transistors 2010 : Core i7 : 1 170 000 000 transistors Le nombre de transistors sur un processeur suit la loi de Moore. Faire une recherche sur cette loi.","title":"Syst\u00e8me sur puce"},{"location":"archi/soc.html#systeme-on-a-chip-systeme-sur-puce","text":"La r\u00e9duction de taille des \u00e9l\u00e9ments des circuits \u00e9lectroniques a conduit \u00e0 l\u2019av\u00e8nement de syst\u00e8mes sur puce (SoC pour System on a Chip en anglais) qui regroupent dans un seul circuit nombre de fonctions autrefois effectu\u00e9es par des circuits s\u00e9par\u00e9s assembl\u00e9s sur une carte \u00e9lectronique. Un tel syst\u00e8me sur puce est con\u00e7u et mis au point de fa\u00e7on logicielle, ses briques \u00e9lectroniques sont accessibles par des API, comme pour les biblioth\u00e8ques logicielles.","title":"Syst\u00e8me On a Chip (syst\u00e8me sur puce)"},{"location":"archi/soc.html#systeme-sur-puce","text":"De l\u2019ordinateur au smartphone / tablette Dans un ordinateur \u201cclassique\u201d tel qu\u2019un PC de bureau, le \u00ab hardware \u00bb est organis\u00e9 autour de 4 \u00e9l\u00e9ments principaux : le processeur (CPU \u2013 Central Processing Unit) se charge de r\u00e9aliser les calculs les plus courants, ceux qui permettent par exemple de faire tourner le syst\u00e8me d\u2019exploitation ou un navigateur web. la m\u00e9moire vive (RAM \u2013 Random Access Memory) permet d\u2019enregistrer temporairement les donn\u00e9es trait\u00e9es par le processeur. la carte graphique (ou GPU \u2013 Graphics Processing Unit) se charge d\u2019afficher une image, qu\u2019elle soit en 2D ou bien en 3D comme dans les jeux. la carte-m\u00e8re (Motherboard) permet l\u2019acheminement des donn\u00e9es entre les composants (CPU, RAM, GPU, disque dur, SSD, cartes r\u00e9seau \u2026) via des \u00ab BUS \u00bb. Elements d'un ordinateur 1- CPU surmont\u00e9 d\u2019un dissipateur thermique (ventirad) 2-Barrettes de RAM 3- GPU 4- Carte m\u00e8re Mais depuis le d\u00e9but de l\u2019\u00e8re des smartphones et des tablettes, on assiste \u00e0 l\u2019\u00e9mergence de syst\u00e8mes tout-en-un appel\u00e9 SoC (System on a Chip) afin d\u2019optimiser la miniaturisation et l\u2019int\u00e9gration des diff\u00e9rents composants. Ces derniers sont alors bien mieux interconnect\u00e9s les uns aux autres, avec par exemple une fr\u00e9quence processeur qui varie en fonction de la fr\u00e9quence de la carte graphique du fait de contraintes thermiques et de consommation. Un Soc pr\u00e9sente donc une structure compl\u00e8tement in\u00e9dite par rapport \u00e0 un ordinateur classique o\u00f9 chaque composant est plus ou moins ind\u00e9pendant. Un \u00ab syst\u00e8me sur une puce \u00bb, souvent d\u00e9sign\u00e9 dans la litt\u00e9rature scientifique par le terme anglais \u00ab system on a chip \u00bb (d'o\u00f9 son abr\u00e9viation SoC), est un syst\u00e8me complet embarqu\u00e9 sur une seule puce (\"circuit int\u00e9gr\u00e9\"), pouvant comprendre de la m\u00e9moire, un ou plusieurs microprocesseurs, des p\u00e9riph\u00e9riques d'interface, ou tout autre composant n\u00e9cessaire \u00e0 la r\u00e9alisation de la fonction attendue. On peut int\u00e9grer de la logique, de la m\u00e9moire (statique, dynamique, flash, ROM, PROM, EPROM, EEPROM), des dispositifs (capteurs) m\u00e9caniques, opto-\u00e9lectroniques, chimiques ou biologiques ou des circuits radio\u2026 D\u2019apr\u00e8s Wikip\u00e9dia Question 1-Qu\u2019est-ce qu\u2019un SoC ? 2-Quels sont les appareils \u00e0 base de SoC ? 3-Au niveau hardware, qu\u2019est-ce qui diff\u00e9rencie fondamentalement un SoC des composants d\u2019un ordinateur ?","title":"Syst\u00e8me sur puce"},{"location":"archi/soc.html#composition-dun-soc","text":"\u25fc Le processeur (CPU) Le processeur ou \u00ab Central Processing Unit \u00bb (CPU) est le c\u0153ur du SoC. Son fonctionnement est identique \u00e0 celui d\u2019un ordinateur. On y retrouve donc plusieurs c\u0153urs cadenc\u00e9s \u00e0 diff\u00e9rentes fr\u00e9quences effectuant des threads et stockant des informations en cache. \u2022 Les c\u0153urs Un processeur compte g\u00e9n\u00e9ralement plusieurs c\u0153urs, on parle couramment dans la litt\u00e9rature technique de dual-core, quad-core ou d\u2019octo-core parfois. Ainsi, ces processeurs se composent respectivement de deux, quatre ou huit c\u0153urs. Ceux-ci permettent de lancer en parall\u00e8le plusieurs applications de mani\u00e8re simultan\u00e9e (multit\u00e2che) et permettent l\u2019utilisation d\u2019application lourde comme des jeux. \u2022 La fr\u00e9quence La fr\u00e9quence d\u2019un processeur est le nombre de cycles de calculs qu\u2019il peut effectuer chaque seconde. Elle va donc naturellement d\u00e9terminer la dur\u00e9e d\u2019ex\u00e9cution d\u2019une t\u00e2che : plus la fr\u00e9quence du processeur est \u00e9lev\u00e9e, plus l\u2019ex\u00e9cution d\u2019une t\u00e2che est rapide. Mesur\u00e9e en gigahertz (GHz), celle-ci est souvent diff\u00e9rente entre chaque c\u0153ur. \u2022 Les threads Les c\u0153urs r\u00e9alisent ce qu\u2019on appelle un thread, litt\u00e9ralement un fil d\u2019ex\u00e9cution, une t\u00e2che qui doit \u00eatre r\u00e9alis\u00e9e par le processeur. \u2022 Le cache C\u2019est une petite m\u00e9moire rapide int\u00e9gr\u00e9e au processeur. En effet, celle-ci va permettre de stocker les informations r\u00e9currentes au plus pr\u00e8s du processeur pour \u00e9viter d\u2019avoir \u00e0 aller les chercher sans arr\u00eat dans la RAM. \u25fc La puce graphique (GPU) La puce graphique ou \u00ab Graphics Processing Unit \u00bb (GPU) est un \u00e9l\u00e9ment crucial pour les gamers, car c\u2019est lui qui est en charge de calculer les images afin de pouvoir les afficher \u00e0 l\u2019\u00e9cran. Celle-ci prend ainsi en charge les images en 2D et en 3D que ce soit une page web, une vid\u00e9o ou encore une partie endiabl\u00e9e de votre jeu favori. Une carte graphique doit donc r\u00e9aliser un nombre \u00e9lev\u00e9 de t\u00e2ches, puisque qu\u2019elle doit par exemple calculer la couleur \u00e0 afficher sur chaque pixel de l\u2019\u00e9cran de votre smartphone. Par exemple dans le cas d\u2019une image Full HD (1920\u00d71080), le GPU affiche 2 073 600 pixels diff\u00e9rents ou 8 294 400 pixels pour de l\u2019Ultra HD (3840\u00d72160). Rappelons \u00e9galement que ce calcul est fait selon la fr\u00e9quence de rafraichissement de l\u2019\u00e9cran. Celle-ci peut par exemple varier entre 60 et 120 fois par secondes c\u2019est-\u00e0-dire entre 60 Hz et 120 Hz. \u25fc La puce neuronale (NPU) La puce neuronale ou \u00ab Neuronal Processing Unit \u00bb (NPU) est une puce en charge de l\u2019intelligence artificielle des smartphones. Les calculs de l\u2019intelligence artificielle ont longtemps \u00e9t\u00e9 faits par le biais de serveurs dans le cloud (distant). N\u00e9anmoins, depuis quelques ann\u00e9es pour des raisons de rapidit\u00e9 et de respect de la vie priv\u00e9e, les calculs se font d\u00e9sormais directement sur les smartphones. C\u2019est utile par exemple dans \u00ab Google Translate \u00bb pour reconna\u00eetre des caract\u00e8res, pour optimiser les photos ou encore l\u2019autonomie. \u25fc Le modem (Interface) Les smartphones embarquent \u00e9galement dans le SoC une unit\u00e9 r\u00e9seau assurant la prise en charge des diff\u00e9rents protocoles de communication. Cette unit\u00e9 est la partie la plus compliqu\u00e9e \u00e0 d\u00e9velopper et \u00e0 impl\u00e9menter sur un SoC. N\u00e9anmoins, il s\u2019agit d\u2019un \u00e9l\u00e9ment crucial afin d\u2019assurer le nomadisme d\u2019un smartphone en itin\u00e9rance. Le modem int\u00e9gr\u00e9 au SoC g\u00e8re non seulement le Wifi, le Bluetooth, le NFC ou bien encore les technologies mobiles. C\u2019est-\u00e0-dire la 4G, ou plus r\u00e9cemment la 5G mais \u00e9galement de plus vieux r\u00e9seaux tels que la 3G. \u25fc Le processeur de signal num\u00e9rique (DSP) Le processeur de signal num\u00e9rique ou \u00ab Digital Signal Processor \u00bb (DSP) est en charge de traiter les signaux num\u00e9riques. Ainsi, il va permettre le filtrage, la compression ou encore l\u2019extraction de diff\u00e9rents signaux tels que la musique ou encore une vid\u00e9o. \u25fc Le processeur de signal d\u2019images (ISP) Le processeur d\u2019image ou \u00ab Image Signal Processor \u00bb (ISP) est une puce prenant en charge la cr\u00e9ation d\u2019images num\u00e9riques. En effet de par leurs tailles minuscules, les capteurs photo des smartphones ne sont pas de tr\u00e8s bonne qualit\u00e9 d\u2019un point de vue de l\u2019optique pure. La qualit\u00e9 qu\u2019il est actuellement possible d\u2019obtenir va \u00eatre intimement li\u00e9e \u00e0 cette puce qui va compenser logiquement certaines limitations optiques (zoom num\u00e9rique \u2026). \u25fc Le processeur de s\u00e9curit\u00e9 (SPU) Le processeur de s\u00e9curit\u00e9 ou \u00ab Secure Processing Unit \u00bb (SPU) est le \u00ab bouclier \u00bb du smartphone. Son alimentation \u00e9lectrique est ind\u00e9pendante afin de ne pas pouvoir \u00eatre \u00e9teint en cas d\u2019attaque sur celui-ci. Le SPU est d\u2019une importance capitale. En effet celui-ci va stocker les donn\u00e9es biom\u00e9triques, bancaires, la carte SIM ou encore les titres de transport. C\u2019est lui qui contient les cl\u00e9s de chiffrement des donn\u00e9es de l\u2019utilisateur. Question 4-Pourquoi les CPU d\u2019un SoC embarquent-ils plusieurs c\u0153urs ? 5-Donner un ordre de grandeur de la fr\u00e9quence du CPU d\u2019un SoC. 6-Sur quel param\u00e8tre influe la fr\u00e9quence du CPU d\u2019un SoC ? 7-Qu\u2019est-ce qu\u2019un thread ? 8-Qu\u2019est-ce que la m\u00e9moire cache d\u2019un CPU ? 9-Dans un SoC, \u00e0 quoi sert le GPU ? 10-Dans un SoC, quel \u00e9l\u00e9ment est charg\u00e9 du traitement des photos prises par la (les) cam\u00e9ra(s) int\u00e9gr\u00e9e(s) au smartphone ? 11-Dans un SoC, quel \u00e9l\u00e9ment permet de lire de l\u2019audio ou de la vid\u00e9o ? 12-Dans un SoC, \u00e0 quoi sert le SPU ? 13-Quel \u00e9l\u00e9ment d\u2019un SOC permet \u00e0 un smartphone de communiquer avec d\u2019autres machines ?","title":"Composition d\u2019un SoC"},{"location":"archi/soc.html#avantages-dun-soc-par-rapport-a-systeme-classique","text":"Outre leur taille miniaturis\u00e9e bien adapt\u00e9e aux terminaux nomades (smartphones et tablettes), les SoC offrent d'autres avantages par rapport aux syst\u00e8mes \"classiques\" rencontr\u00e9s dans les ordinateurs : \u2022les SoC sont con\u00e7us pour consommer beaucoup moins d'\u00e9nergie qu'un syst\u00e8me classique \u00e0 puissance \u00e9quivalente de calculs ; \u2022cette consommation r\u00e9duite d\u2019\u00e9nergie permet dans la plupart des cas de s'affranchir de la pr\u00e9sence d\u2019un syst\u00e8me de refroidissement actif comme les ventilateurs ou de type \u00ab watercooling \u00bb ; un syst\u00e8me \u00e9quip\u00e9 de SoC est donc silencieux car il chauffe relativement peu ; \u2022\u00e9tant donn\u00e9 les distances tr\u00e8s faibles entre, par exemple, le CPU et la m\u00e9moire, les donn\u00e9es circulent beaucoup plus vites, ce qui permet d'am\u00e9liorer grandement les performances ; en effet, dans les syst\u00e8mes \"classiques\" les BUS charg\u00e9s d\u2019acheminer les donn\u00e9es sont souvent des \"goulots d'\u00e9tranglement\" en termes de performances \u00e0 cause de la vitesse limit\u00e9e de circulation des donn\u00e9es. En revanche, le principal inconv\u00e9nient d\u2019un SoC est que l\u00e0 ou un ordinateur \u00e9quip\u00e9 d'une carte m\u00e8re permet de faire \u00e9voluer les composants individuellement, l'extr\u00eame int\u00e9gration du SoC pr\u00e9sente en revanche l'inconv\u00e9nient de n'autoriser aucune mise \u00e0 jour possible du mat\u00e9riel. Questions 14-Quels sont les principaux avantages d\u2019un SoC ? 15-Citer le principal inconv\u00e9nient d\u2019un SoC.","title":"Avantages d\u2019un SoC par rapport \u00e0 syst\u00e8me classique"},{"location":"archi/soc.html#quelques-familles-de-soc-utilisees-dans-les-smartphones","text":"Les nouveaux proc\u00e9d\u00e9s de gravure des semi-conducteurs CMOS telle que la lithographie extr\u00eame ultraviolette, ont permis de r\u00e9duire significativement la taille des composants \u00e9lectroniques constituants les SoC. Ainsi, on dispose aujourd\u2019hui de la m\u00eame puissance dans un smartphone que celle embarqu\u00e9e dans un ordinateur il y a quelques ann\u00e9es de cela. Ceci s\u2019est cependant fait au prix d\u2019une complexit\u00e9 technologique croissante. L\u2019actuelle g\u00e9n\u00e9ration de SoC est grav\u00e9e en 7 nm (1 nm = 10-9 m) depuis juillet 2019. Le SoC A13 Bionic d\u2019Apple est par exemple compos\u00e9 de 8,5 milliards de transistors r\u00e9partis sur une surface de 98,48 mm2 ! La prochaine g\u00e9n\u00e9ration grav\u00e9e en 5 nm devrait voir le jour \u00e0 partir de 2021. Au sein de la g\u00e9n\u00e9ration actuelle de smartphone on trouve une grande vari\u00e9t\u00e9 de SoC en fonction des diff\u00e9rents constructeurs : Pour les derniers mod\u00e8les de smartphones 2019-2020, la principale difficult\u00e9 technologique est d\u2019int\u00e9grer aux SoCs les modems 5G qui sont complexes \u00e0 fabriquer. Pour l\u2019instant ces derniers sont g\u00e9n\u00e9ralement grav\u00e9s en 10 nm sur une puce ind\u00e9pendante du SoC. Le prochain d\u00e9fi technologique sera d\u2019int\u00e9grer les modems 5G directement dans le SoC grav\u00e9 en 7 nm puis 5 nm. Question 16-Pour les mod\u00e8les 2019-2020 de t\u00e9l\u00e9phones portables, quelle est la finesse de gravures des SoC ? 17-Quel est l\u2019ordre de grandeur de la surface d\u2019un SoC ? 18-Quel est l\u2019ordre de grandeur du nombre de transistors pr\u00e9sents sur un SoC ? 19-Quel est l\u2019ordre de grandeur de la densit\u00e9 moyenne de transistors par mm2 dans un Soc ? 20-Quelle sera la finesse de gravure des SoC pour la prochaine g\u00e9n\u00e9ration de smartphone ? 21-Quelle est la principale difficult\u00e9 technologique rencontr\u00e9e \u00e0 l\u2019heure actuelle par les concepteurs de SoC ?","title":"Quelques familles de SoC utilis\u00e9es dans les smartphones"},{"location":"archi/soc.html#larchitecture-arm","text":"Dot\u00e9s d'une architecture relativement plus simple que d'autres familles de processeurs, et b\u00e9n\u00e9ficiant d'une faible consommation \u00e9lectrique, les processeurs ARM (Advanced Risc Machine) sont devenus dominants dans le domaine de l'informatique embarqu\u00e9e, en particulier la t\u00e9l\u00e9phonie mobile et les tablettes. Les architectures ARM reposent sur des processeurs \u00e0 jeux d\u2019instructions r\u00e9duit RISC (Reduced Instruction Set Computer) 32 bits (ARMv1 \u00e0 ARMv7) ou 64 bits (ARMv8). Aujourd'hui, ARM est surtout connu pour ses syst\u00e8mes sur puce (SoC), int\u00e9grant sur une seule puce : microprocesseur, processeur graphique (GPU), DSP, FPU, SIMD, et contr\u00f4leur de p\u00e9riph\u00e9riques. Ceux-ci sont pr\u00e9sents dans la majorit\u00e9 des smartphones et tablettes. ARM propose des architectures qui sont vendues sous licence de propri\u00e9t\u00e9 intellectuelle aux concepteurs. Ils proposent diff\u00e9rentes options dans lesquelles les constructeurs peuvent prendre ce qui les int\u00e9resse pour compl\u00e9ter avec leurs options propres ou de concepteurs tiers. ARM propose ainsi pour les SoC les plus r\u00e9cents les microprocesseurs Cortex (Cortex-A pour les dispositifs portables de type smartphones et tablettes, Cortex-M pour le couplage \u00e0 un microcontr\u00f4leur, Cortex-R pour les microprocesseurs temps r\u00e9el), des processeurs graphiques (Mali), des bus AMBA sous licence libre, ainsi que les divers autres composants n\u00e9cessaires \u00e0 la composition du SoC complet. Certains constructeurs, tels que Nvidia, pr\u00e9f\u00e8rent produire leur propre processeur graphique, d'autres, comme Samsung, pr\u00e9f\u00e8rent prendre dans certains cas un processeur graphique de prestataire tiers ou d'ARM selon les mod\u00e8les, et d'autres, comme Apple, modifient certains composants du microprocesseur en m\u00e9langeant plusieurs architectures processeur ARM. (wikip\u00e9dia) Une particularit\u00e9 des processeurs ARM est leur mode de vente. En effet, ARM Ltd. ne fabrique ni ne vend ses processeurs sous forme de circuits int\u00e9gr\u00e9s. La soci\u00e9t\u00e9 vend les licences de ses processeurs de mani\u00e8re qu'ils soient grav\u00e9s dans le silicium par d'autres fabricants. Aujourd'hui, la plupart des grands fondeurs de puces proposent de l'architecture ARM. Question 22-Quel est l'avantage \u00e0 ne pas vendre des processeurs directement ? 23-Faites quelques recherches sur les probl\u00e8mes d'approvisionnement des semi-conducteurs A retenir !! Faites une fiche ou une carte mentale sachant que vous devez savoir ce qu'est un SoC, ce qu'il contient, ses avantages par rapport \u00e0 un syst\u00e8me classique et o\u00f9 est ce qu'on les trouve.","title":"L\u2019architecture ARM"},{"location":"archi/soc.html#exercices","text":"","title":"Exercices"},{"location":"archi/soc.html#exercice-n1","text":"D\u00e9crire en quelques phrases ce qu'est un SoC. Sch\u00e9matiser le Soc.","title":"Exercice n\u00b01\u00a0:"},{"location":"archi/soc.html#exercice-n2","text":"A partir de l'article du site elektormagazine.fr . 1. Relevez les diff\u00e9rentes caract\u00e9ristiques du SoC du Raspberry Pi 3 mod\u00e8le B+. 2. Les comparez au SoC du Raspberry Pi 4. 3. Quelles sont les principales \u00e9volutions qui contribuent \u00e0 ce gain? Une copie de l'article disponible.","title":"Exercice n\u00b02:"},{"location":"archi/soc.html#exercice-n3","text":"La photo ci-dessus montre le d\u00e9tail d'un SoC Kirin 990. Identifier les diff\u00e9rentes parties de ce SoC.","title":"Exercice n\u00b03 :"},{"location":"archi/soc.html#exercice-n4","text":"Faire une analogie entre les 2 colonnes (un ordinateur et vous qui \u00eates install\u00e9 chez vous \u00e0 votre bureau).","title":"Exercice n\u00b04 :"},{"location":"archi/soc.html#exercice-n5","text":"Quel est le nom du SoC de votre smarphone ? Quelles en sont les fonctionnalit\u00e9es ? Quelles sont les caract\u00e9ristiques du processeur ?","title":"Exercice n\u00b05 :"},{"location":"archi/soc.html#exercice-n6","text":"Depuis le tout premier circuit int\u00e9gr\u00e9 (le 4004) jusqu'\u00e0 nos jours, cette loi s'est toujours v\u00e9rifi\u00e9e m\u00eame si on s'en \u00e9loigne actuellement. Voici un exemple avec quelques processeurs d'Intel : 1971 : Intel 4004 : 2 300 transistors 1978 : Intel 8086 : 29 000 transistors 1982 : Intel 80286 275 000 transistors 1989 : Intel 80486 : 1 160 000 transistors 1993 : Pentium : 3 100 000 transistors 1995 : Pentium Pro : 5 500 000 transistors 1997 : Pentium II : 27 000 000 transistors 2001 : Pentium 4 : 42 000 000 transistors 2004 : Pentium Extreme Edition : 169 000 000 transistors 2006 : Core 2 Quad : 582 000 000 transistors 2010 : Core i7 : 1 170 000 000 transistors Le nombre de transistors sur un processeur suit la loi de Moore. Faire une recherche sur cette loi.","title":"Exercice n\u00b06 :"}]}